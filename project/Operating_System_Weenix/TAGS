
kernel/drivers/tty/keyboard.c,1158
#define IRQ_KEYBOARD IRQ_KEYBOARD22,985
#define SHIFT_MASK SHIFT_MASK25,1064
#define CTRL_MASK CTRL_MASK26,1087
#define ESC_MASK ESC_MASK28,1176
static int curmask = 0;curmask29,1199
#define KEYBOARD_IN_PORT KEYBOARD_IN_PORT32,1266
#define KEYBOARD_CMD_PORT KEYBOARD_CMD_PORT33,1296
#define LSHIFT LSHIFT36,1361
#define RSHIFT RSHIFT37,1382
#define CTRL CTRL38,1403
#define ESC0 ESC041,1498
#define ESC1 ESC142,1519
#define SCROLL_UP SCROLL_UP45,1621
#define SCROLL_DOWN SCROLL_DOWN46,1646
#define VT_KEY_LOW VT_KEY_LOW49,1739
#define VT_KEY_HIGH VT_KEY_HIGH50,1764
#define BREAK_MASK BREAK_MASK53,1873
#define NORMAL_KEY_HIGH NORMAL_KEY_HIGH55,1898
#define NO_CHAR NO_CHAR58,2012
static const char *normal_scancodes = "\0"              /* Error */normal_scancodes65,2235
static const char *shift_scancodes = "\0"shift_scancodes78,3081
static keyboard_char_handler_t keyboard_handler = NULL;keyboard_handler91,3632
keyboard_intr_handler(regs_t *regs)keyboard_intr_handler96,3854
keyboard_init()keyboard_init180,6922
keyboard_register_handler(keyboard_char_handler_t handler)keyboard_register_handler187,7056

kernel/drivers/tty/screen.c,747
#define PHYS_VIDEORAM PHYS_VIDEORAM28,1194
#define CRT_CONTROL_ADDR CRT_CONTROL_ADDR30,1268
#define CRT_CONTROL_DATA CRT_CONTROL_DATA31,1299
#define CURSOR_HIGH CURSOR_HIGH34,1389
#define CURSOR_LOW CURSOR_LOW35,1414
#define DEFAULT_ATTRIB DEFAULT_ATTRIB39,1528
static uint16_t *videoram;videoram45,1720
screen_init()screen_init49,1814
screen_move_cursor(uint8_t x, uint8_t y)screen_move_cursor56,1930
screen_putchar(char c, uint8_t x, uint8_t y)screen_putchar72,2419
screen_putchar_attrib(char c, uint8_t x, uint8_t y, uint8_t attrib)screen_putchar_attrib80,2656
screen_putbuf(const char *buf)screen_putbuf87,2853
screen_putbuf_attrib(const uint16_t *buf)screen_putbuf_attrib96,3133
screen_clear()screen_clear102,3252

kernel/drivers/tty/n_tty.c,1081
#define EOFC EOFC27,1054
#define TTY_BUF_SIZE TTY_BUF_SIZE28,1084
#define ldisc_to_ntty(ldisc_to_ntty29,1112
static tty_ldisc_ops_t n_tty_ops = {n_tty_ops38,1521
struct n_tty {n_tty46,1761
        kmutex_t            ntty_rlock;ntty_rlock47,1776
        ktqueue_t           ntty_rwaitq;ntty_rwaitq48,1816
        char               *ntty_inbuf;ntty_inbuf49,1857
        int                 ntty_rhead;ntty_rhead50,1897
        int                 ntty_rawtail;ntty_rawtail51,1937
        int                 ntty_ckdtail;ntty_ckdtail52,1979
        tty_ldisc_t         ntty_ldisc;ntty_ldisc54,2022
n_tty_create()n_tty_create59,2081
n_tty_destroy(tty_ldisc_t *ldisc)n_tty_destroy68,2286
n_tty_attach(tty_ldisc_t *ldisc, tty_device_t *tty)n_tty_attach79,2538
n_tty_detach(tty_ldisc_t *ldisc, tty_device_t *tty)n_tty_detach89,2749
n_tty_read(tty_ldisc_t *ldisc, void *buf, int len)n_tty_read113,3618
n_tty_receive_char(tty_ldisc_t *ldisc, char c)n_tty_receive_char133,4288
n_tty_process_char(tty_ldisc_t *ldisc, char c)n_tty_process_char145,4539

kernel/drivers/tty/virtterm.c,1745
#define NTERMS NTERMS27,1116
#define SCROLL_BUFSIZE SCROLL_BUFSIZE30,1181
#define driver_to_vt(driver_to_vt32,1224
static tty_driver_ops_t vt_driver_ops = {vt_driver_ops45,1711
typedef struct virtterm {virtterm53,2058
        int vt_head;vt_head59,2207
        int vt_tail;vt_tail62,2281
        int vt_top;vt_top65,2358
        int vt_cursor;vt_cursor68,2436
        char vt_buf[SCROLL_BUFSIZE];vt_buf71,2488
        char vt_tempbuf[DISPLAY_WIDTH *DISPLAY_HEIGHT];vt_tempbuf74,2559
        tty_driver_t vt_driver;vt_driver76,2616
} virtterm_t;virtterm_t77,2648
static virtterm_t vt_terms[NTERMS];vt_terms79,2663
static virtterm_t *vt_curterm;vt_curterm80,2699
#define circ_dist(circ_dist114,3578
#define next_row(next_row120,3818
#define buf_add(buf_add126,4108
#define buf_inc(buf_inc130,4231
#define buf_dec(buf_dec131,4267
vt_init()vt_init135,4311
vt_num_terminals()vt_num_terminals169,5427
vt_get_tty_driver(int id)vt_get_tty_driver176,5490
vt_scroll(int lines, int scroll_up)vt_scroll186,5658
vt_switch(int term)vt_switch216,6810
vt_print_shutdown()vt_print_shutdown226,6986
vt_provide_char(tty_driver_t *ttyd, char c)vt_provide_char247,7648
vt_register_callback_handler(tty_driver_t *ttyd, tty_driver_callback_t callback, void *arg)vt_register_callback_handler290,9063
vt_unregister_callback_handler(tty_driver_t *ttyd)vt_unregister_callback_handler302,9422
vt_block_io(tty_driver_t *ttyd)vt_block_io313,9683
vt_unblock_io(tty_driver_t *ttyd, void *data)vt_unblock_io324,9891
vt_keyboard_handler(char c)vt_keyboard_handler335,10162
vt_cursor_redraw()vt_cursor_redraw345,10424
vt_redraw()vt_redraw354,10680
vt_handle_char(virtterm_t *vt, char c)vt_handle_char410,13237

kernel/drivers/tty/tty.c,501
#define bd_to_tty(bd_to_tty27,1116
static bytedev_ops_t tty_bytedev_ops = {tty_bytedev_ops72,2459
tty_init()tty_init82,2601
tty_create(tty_driver_t *driver, int id)tty_create139,4508
tty_global_driver_callback(void *arg, char c)tty_global_driver_callback159,5135
tty_echo(tty_driver_t *driver, const char *out)tty_echo169,5368
tty_read(bytedev_t *dev, int offset, void *buf, int count)tty_read180,5645
tty_write(bytedev_t *dev, int offset, const void *buf, int count)tty_write196,6067

kernel/drivers/blockdev.c,751
static mmobj_ops_t blockdev_mmobj_ops = {blockdev_mmobj_ops31,1374
static list_t blockdevs;blockdevs40,1641
blockdev_init()blockdev_init43,1672
blockdev_register(blockdev_t *dev)blockdev_register51,1788
blockdev_lookup(devid_t id)blockdev_lookup75,2425
blockdev_flush_all(blockdev_t *dev)blockdev_flush_all91,2837
blockdev_ref(mmobj_t *o) {}blockdev_ref119,3703
blockdev_put(mmobj_t *o) {}blockdev_put121,3743
blockdev_lookuppage(mmobj_t *o, uint32_t pagenum, int forwrite, pframe_t **pf)blockdev_lookuppage124,3783
blockdev_fillpage(mmobj_t *o, pframe_t *pf)blockdev_fillpage130,3921
blockdev_dirtypage(mmobj_t *o, pframe_t *pf)blockdev_dirtypage141,4328
blockdev_cleanpage(mmobj_t *o, pframe_t *pf)blockdev_cleanpage147,4407

kernel/drivers/bytedev.c,184
static list_t bytedevs;bytedevs20,985
bytedev_init()bytedev_init23,1015
bytedev_register(bytedev_t *dev)bytedev_register32,1153
bytedev_lookup(devid_t id)bytedev_lookup55,1781

kernel/drivers/pci.c,981
list_t pci_list;pci_list14,837
static uint32_t pci_config_read(uint16_t bus, uint8_t device, uint8_t func, uint8_t reg_off, uint8_t length) {pci_config_read19,938
static void pci_config_write_byte(uint8_t bus, uint8_t device, uint8_t func, uint8_t reg, uint8_t val) {pci_config_write_byte50,1627
static void pci_config_write_short(uint8_t bus, uint8_t device, uint8_t func, uint8_t reg, uint16_t val) {pci_config_write_short64,2061
static void pci_config_write_word(uint8_t bus, uint8_t device, uint8_t func, uint8_t reg, uint32_t val) {pci_config_write_word79,2483
static void pci_build_list(void) {pci_build_list93,2857
void pci_init(void) {pci_init160,5374
pcidev_t* pci_lookup(uint8_t class, uint8_t subclass, uint8_t interface) {pci_lookup169,5561
uint32_t pci_read_config(pcidev_t* dev, uint8_t reg_off, uint8_t length) {pci_read_config186,6136
void pci_write_config(pcidev_t* dev, uint8_t reg_off, uint32_t val, uint8_t length) {pci_write_config193,6362

kernel/drivers/memdevs.c,457
bytedev_ops_t null_dev_ops = {null_dev_ops36,1379
bytedev_ops_t zero_dev_ops = {zero_dev_ops45,1508
memdevs_init()memdevs_init59,1794
null_read(bytedev_t *dev, int offset, void *buf, int count)null_read75,2256
null_write(bytedev_t *dev, int offset, const void *buf, int count)null_write93,2826
zero_read(bytedev_t *dev, int offset, void *buf, int count)zero_read111,3393
zero_mmap(vnode_t *file, vmarea_t *vma, mmobj_t **ret)zero_mmap120,3622

kernel/drivers/disk/ata.c,5540
#define IRQ_DISK_PRIMARY IRQ_DISK_PRIMARY34,1244
#define IRQ_DISK_SECONDARY IRQ_DISK_SECONDARY35,1272
#define ATA_TYPE_ATA ATA_TYPE_ATA45,1566
#define ATA_TYPE_ATAPI ATA_TYPE_ATAPI46,1594
#define ATA_MASTER ATA_MASTER49,1645
#define ATA_SLAVE ATA_SLAVE50,1669
#define ATA_PRIMARY ATA_PRIMARY53,1709
#define ATA_SECONDARY ATA_SECONDARY54,1736
#define ATA_READ ATA_READ57,1781
#define ATA_WRITE ATA_WRITE58,1804
#define ATA_PRIMARY_CTRL_BASE ATA_PRIMARY_CTRL_BASE62,1930
#define ATA_PRIMARY_CMD_BASE ATA_PRIMARY_CMD_BASE63,1969
#define ATA_SECONDARY_CTRL_BASE ATA_SECONDARY_CTRL_BASE64,2008
#define ATA_SECONDARY_CMD_BASE ATA_SECONDARY_CMD_BASE65,2047
typedef void (*atac_intr_handler_t)(regs_t *regs, void *arg);atac_intr_handler_t68,2144
static struct ata_channel {ata_channel70,2207
        uint16_t atac_cmd;atac_cmd72,2277
        uint16_t atac_ctrl;atac_ctrl75,2348
        uint8_t atac_intr;atac_intr78,2425
        atac_intr_handler_t atac_intr_handler;atac_intr_handler81,2502
        void *atac_intr_arg;atac_intr_arg84,2595
	uint16_t atac_busmaster;atac_busmaster87,2663
} ATA_CHANNELS[2] = {ATA_CHANNELS88,2689
#define ATA_NUM_CHANNELS ATA_NUM_CHANNELS107,3088
#define ATA_SECTOR_SIZE ATA_SECTOR_SIZE109,3116
#define ATA_DRIVEHEAD_MASTER ATA_DRIVEHEAD_MASTER112,3223
#define ATA_DRIVEHEAD_SLAVE ATA_DRIVEHEAD_SLAVE113,3257
#define ATA_REG_DATA ATA_REG_DATA117,3357
#define ATA_REG_ERROR ATA_REG_ERROR118,3430
#define ATA_REG_FEATURE ATA_REG_FEATURE119,3462
#define ATA_REG_SECCOUNT0 ATA_REG_SECCOUNT0120,3494
#define ATA_REG_SECNUM ATA_REG_SECNUM121,3564
#define ATA_REG_CYLLOW ATA_REG_CYLLOW122,3617
#define ATA_REG_CYLHIGH ATA_REG_CYLHIGH123,3649
#define ATA_REG_LBA0 ATA_REG_LBA0124,3681
#define ATA_REG_LBA1 ATA_REG_LBA1125,3734
#define ATA_REG_LBA2 ATA_REG_LBA2126,3766
#define ATA_REG_DRIVEHEAD ATA_REG_DRIVEHEAD127,3798
#define ATA_REG_COMMAND ATA_REG_COMMAND128,3882
#define ATA_REG_STATUS ATA_REG_STATUS129,3931
#define ATA_REG_SECCOUNT1 ATA_REG_SECCOUNT1130,3979
#define ATA_REG_LBA3 ATA_REG_LBA3131,4051
#define ATA_REG_LBA4 ATA_REG_LBA4132,4083
#define ATA_REG_LBA5 ATA_REG_LBA5133,4115
#define ATA_REG_NIEN_CONTROL	ATA_REG_NIEN_CONTROL134,4157
#define ATA_REG_CONTROL ATA_REG_CONTROL137,4218
#define ATA_REG_ALTSTATUS ATA_REG_ALTSTATUS139,4324
#define ATA_REG_DEVADDRESS ATA_REG_DEVADDRESS140,4372
#define ATA_SR_BSY ATA_SR_BSY143,4445
#define ATA_SR_DRDY ATA_SR_DRDY144,4481
#define ATA_SR_DF ATA_SR_DF145,4524
#define ATA_SR_DSC ATA_SR_DSC146,4573
#define ATA_SR_DRQ ATA_SR_DRQ147,4624
#define ATA_SR_CORR ATA_SR_CORR148,4674
#define ATA_SR_IDX ATA_SR_IDX149,4720
#define ATA_SR_ERR ATA_SR_ERR150,4757
#define ATA_ER_BBK ATA_ER_BBK153,4833
#define ATA_ER_UNC ATA_ER_UNC154,4876
#define ATA_ER_MC ATA_ER_MC155,4927
#define ATA_ER_IDNF ATA_ER_IDNF156,4968
#define ATA_ER_MCR ATA_ER_MCR157,5018
#define ATA_ER_ABRT ATA_ER_ABRT158,5059
#define ATA_ER_TK0NF ATA_ER_TK0NF159,5107
#define ATA_ER_AMNF ATA_ER_AMNF160,5157
#define ATA_CMD_READ_PIO ATA_CMD_READ_PIO163,5243
#define ATA_CMD_READ_PIO_EXT ATA_CMD_READ_PIO_EXT164,5280
#define ATA_CMD_READ_DMA ATA_CMD_READ_DMA165,5317
#define ATA_CMD_READ_DMA_EXT ATA_CMD_READ_DMA_EXT166,5354
#define ATA_CMD_WRITE_PIO ATA_CMD_WRITE_PIO167,5391
#define ATA_CMD_WRITE_PIO_EXT ATA_CMD_WRITE_PIO_EXT168,5428
#define ATA_CMD_WRITE_DMA ATA_CMD_WRITE_DMA169,5465
#define ATA_CMD_WRITE_DMA_EXT ATA_CMD_WRITE_DMA_EXT170,5502
#define ATA_CMD_CACHE_FLUSH ATA_CMD_CACHE_FLUSH171,5539
#define ATA_CMD_CACHE_FLUSH_EXT ATA_CMD_CACHE_FLUSH_EXT172,5576
#define ATA_CMD_PACKET ATA_CMD_PACKET173,5613
#define ATA_CMD_IDENTIFY_PACKET ATA_CMD_IDENTIFY_PACKET174,5650
#define ATA_CMD_IDENTIFY ATA_CMD_IDENTIFY175,5687
#define ATA_DRIVEHEAD_CHS ATA_DRIVEHEAD_CHS178,5763
#define ATA_DRIVEHEAD_LBA ATA_DRIVEHEAD_LBA179,5794
#define ATA_IDENT_MAX_LBA ATA_IDENT_MAX_LBA181,5826
#define ata_inb_reg(ata_inb_reg184,5922
#define ata_inw_reg(ata_inw_reg185,5998
#define ata_inl_reg(ata_inl_reg186,6074
#define ata_outb_reg(ata_outb_reg189,6185
#define ata_outw_reg(ata_outw_reg191,6291
#define ata_outl_reg(ata_outl_reg193,6397
#define ata_inb_altstatus(ata_inb_altstatus197,6537
ata_sync(uint8_t channel)ata_sync203,6744
ata_pause(uint8_t channel)ata_pause210,6849
#define ATA_IDENT_BUFSIZE ATA_IDENT_BUFSIZE216,6929
#define bd_to_ata(bd_to_ata218,6960
typedef struct ata_disk {ata_disk221,7027
        uint8_t    ata_channel;ata_channel223,7112
        uint8_t    ata_drive;ata_drive226,7195
        uint32_t   ata_size;ata_size229,7274
        uint32_t   ata_sectors_per_block;ata_sectors_per_block231,7304
        ktqueue_t  ata_waitq;ata_waitq235,7466
        kmutex_t   ata_mutex;ata_mutex239,7590
        blockdev_t ata_bdev;ata_bdev242,7659
} ata_disk_t;ata_disk_t243,7688
#define NDISKS NDISKS248,7814
static blockdev_ops_t ata_disk_ops = {ata_disk_ops259,8288
ata_init()ata_init265,8402
ata_intr_wrapper(regs_t *regs)ata_intr_wrapper374,12958
ata_read(blockdev_t *bdev, char *data, blocknum_t blocknum, unsigned int count)ata_read405,14141
ata_write(blockdev_t *bdev, const char *data, blocknum_t blocknum, unsigned int count)ata_write422,14642
ata_do_operation(ata_disk_t *adisk, char *data, blocknum_t blocknum, int write)ata_do_operation517,18518
ata_intr(regs_t *regs, void *arg)ata_intr532,18921
uint16_t ata_setup_busmaster(ata_disk_t* adisk) {ata_setup_busmaster541,19102

kernel/drivers/disk/dma.c,525
        uint32_t prd_addr;prd_addr24,1003
        uint16_t prd_count;prd_count25,1030
        uint16_t prd_last;prd_last26,1058
} prd_t;prd_t27,1085
static prd_t prd_table[2] __attribute__((aligned(32)));prd_table29,1095
static prd_t *DMA_PRDS[2];DMA_PRDS31,1152
dma_init()dma_init34,1185
void dma_load(uint8_t channel, void *start, int count) {dma_load43,1397
void dma_start(uint8_t channel, uint16_t busmaster_addr, int write) {dma_start54,1716
void dma_reset(uint16_t busmaster_addr) {dma_reset69,2280

kernel/test/vfstest/vfstest.c,1481
#undef __VM____VM__27,469
#define LONGNAME LONGNAME48,761
#define TESTSTR TESTSTR50,843
#define SHORTSTR SHORTSTR58,1505
static char root_dir[64];root_dir60,1563
makedirs(const char *dir)makedirs63,1601
getdent(const char *dir, dirent_t *dirent)getdent88,2144
removeall(const char *dir)removeall112,2718
vfstest_start(void)vfstest_start166,3888
vfstest_term(void)vfstest_term182,4224
#define paths_equal(paths_equal191,4498
#define syscall_fail(syscall_fail202,5477
#define syscall_success(syscall_success208,6037
#define create_file(create_file212,6281
#define read_fd(read_fd219,6890
#define test_fpos(test_fpos225,7419
vfstest_stat(void)vfstest_stat233,7943
vfstest_mkdir(void)vfstest_mkdir265,8773
vfstest_chdir(void)vfstest_chdir306,10189
#define CHDIR_TEST_DIR CHDIR_TEST_DIR308,10211
vfstest_paths(void)vfstest_paths344,11410
#define PATHS_TEST_DIR PATHS_TEST_DIR346,11432
vfstest_fd(void)vfstest_fd408,13339
#define FD_BUFSIZE FD_BUFSIZE410,13358
#define BAD_FD BAD_FD411,13379
#define HUGE_FD HUGE_FD412,13397
vfstest_infinite(void)vfstest_infinite503,16875
vfstest_open(void)vfstest_open537,17931
#define OPEN_BUFSIZE OPEN_BUFSIZE539,17952
vfstest_read(void)vfstest_read610,20866
#define READ_BUFSIZE READ_BUFSIZE612,20887
#define test_lseek(test_lseek640,21952
vfstest_getdents(void)vfstest_getdents716,24903
vfstest_s5fs_vm(void)vfstest_s5fs_vm763,26512
int main(int argc, char **argv)main899,32285

kernel/test/kshell/commands.h,366
#define KSHELL_CMD(KSHELL_CMD16,858
KSHELL_CMD(help);help19,952
KSHELL_CMD(exit);exit20,970
KSHELL_CMD(echo);echo21,988
KSHELL_CMD(cat);cat23,1021
KSHELL_CMD(ls);ls24,1038
KSHELL_CMD(cd);cd25,1054
KSHELL_CMD(rm);rm26,1070
KSHELL_CMD(link);link27,1086
KSHELL_CMD(rmdir);rmdir28,1104
KSHELL_CMD(mkdir);mkdir29,1123
KSHELL_CMD(stat);stat30,1142

kernel/test/kshell/io.c,550
int kshell_write(kshell_t *ksh, const void *buf, size_t nbytes)kshell_write36,1194
int kshell_read(kshell_t *ksh, void *buf, size_t nbytes)kshell_read62,2182
int kshell_write_all(kshell_t *ksh, void *buf, size_t nbytes)kshell_write_all67,2297
int kshell_read(kshell_t *ksh, void *buf, size_t nbytes)kshell_read73,2458
int kshell_write(kshell_t *ksh, const void *buf, size_t nbytes)kshell_write78,2591
void kprint(kshell_t *ksh, const char *fmt, va_list args)kprint84,2739
void kprintf(kshell_t *ksh, const char *fmt, ...)kprintf94,2984

kernel/test/kshell/tokenizer.h,675
typedef enum kshell_token_type {kshell_token_type18,878
        KTT_WORD,KTT_WORD19,911
        KTT_REDIRECT_IN,         /* '<' */KTT_REDIRECT_IN20,929
        KTT_REDIRECT_OUT,        /* '>' */KTT_REDIRECT_OUT21,972
        KTT_REDIRECT_OUT_APPEND, /* '>>' */KTT_REDIRECT_OUT_APPEND22,1015
        KTT_EOL,KTT_EOL23,1059
        KTT_MAX /* Number of token types */KTT_MAX25,1077
} kshell_token_type_t;kshell_token_type_t26,1121
typedef struct kshell_token {kshell_token28,1145
        kshell_token_type_t kt_type;kt_type29,1175
        char *kt_text;kt_text30,1212
        size_t kt_textlen;kt_textlen31,1235
} kshell_token_t;kshell_token_t32,1262

kernel/test/kshell/command.h,367
typedef struct kshell_command {kshell_command18,877
        char              kc_name[KSH_CMD_NAME_LEN + 1];kc_name19,909
        kshell_cmd_func_t kc_cmd_func;kc_cmd_func20,966
        char              kc_desc[KSH_DESC_LEN + 1];kc_desc21,1005
        list_link_t       kc_commands_link;kc_commands_link23,1059
} kshell_command_t;kshell_command_t24,1103

kernel/test/kshell/commands.c,885
int kshell_help(kshell_t *ksh, int argc, char **argv)kshell_help30,1088
int kshell_exit(kshell_t *ksh, int argc, char **argv)kshell_exit52,1850
int kshell_echo(kshell_t *ksh, int argc, char **argv)kshell_echo58,1988
int kshell_cat(kshell_t *ksh, int argc, char **argv)kshell_cat75,2368
int kshell_ls(kshell_t *ksh, int argc, char **argv)kshell_ls108,3372
int kshell_cd(kshell_t *ksh, int argc, char **argv)kshell_cd173,5609
int kshell_rm(kshell_t *ksh, int argc, char **argv)kshell_rm190,5972
int kshell_link(kshell_t *ksh, int argc, char **argv)kshell_link208,6329
int kshell_rmdir(kshell_t *ksh, int argc, char **argv)kshell_rmdir226,6724
int kshell_mkdir(kshell_t *ksh, int argc, char **argv)kshell_mkdir253,7407
static const char *get_file_type_str(int mode)get_file_type_str281,8129
int kshell_stat(kshell_t *ksh, int argc, char **argv)kshell_stat298,8624

kernel/test/kshell/tokenizer.c,271
#define EOL EOL18,880
const char *ksh_tok_type_str[] = {ksh_tok_type_str20,898
int kshell_next_token(kshell_t *ksh, char *line, kshell_token_t *token)kshell_next_token29,1027
const char *kshell_token_type_str(kshell_token_type_t type)kshell_token_type_str81,2783

kernel/test/kshell/kshell.c,1013
static __attribute__((unused)) void kshell_init()kshell_init43,1302
init_func(kshell_init);kshell_init66,2396
void kshell_add_command(const char *name, kshell_cmd_func_t cmd_func,kshell_add_command68,2421
kshell_t *kshell_create(uint8_t ttyid)kshell_create84,2915
void kshell_destroy(kshell_t *ksh)kshell_destroy120,3898
static void kshell_scrub_token(kshell_t *ksh, kshell_token_t *token)kshell_scrub_token142,4469
static int kshell_find_redirection(kshell_t *ksh, char *line,kshell_find_redirection167,5443
static int kshell_find_next_arg(kshell_t *ksh, char *line,kshell_find_next_arg222,7430
static void kshell_get_args(kshell_t *ksh, char *buf,kshell_get_args267,9048
kshell_command_t *kshell_lookup_command(const char *name, size_t namelen)kshell_lookup_command289,9652
void kshell_undirect(kshell_t *ksh)kshell_undirect315,10418
int kshell_redirect(kshell_t *ksh, const char *redirect_in,kshell_redirect345,11425
int kshell_execute_next(kshell_t *ksh)kshell_execute_next379,12466

kernel/test/kshell/command.c,169
kshell_command_t *kshell_command_create(const char *name,kshell_command_create20,931
void kshell_command_destroy(kshell_command_t *cmd)kshell_command_destroy54,1845

kernel/test/kshell/priv.h,419
#define dprintf(dprintf18,882
#define KSH_BUF_SIZE KSH_BUF_SIZE20,937
#define KSH_CMD_NAME_LEN KSH_CMD_NAME_LEN22,1039
#define KSH_MAX_ARGS KSH_MAX_ARGS23,1067
#define KSH_DESC_LEN KSH_DESC_LEN24,1092
struct kshell {kshell29,1157
        int ksh_fd;ksh_fd33,1320
        int ksh_out_fd;ksh_out_fd36,1376
        int ksh_in_fd;ksh_in_fd37,1400
list_t kshell_commands_list;kshell_commands_list43,1472

kernel/test/usertest.c,841
typedef struct test_data {test_data23,975
        int td_passed;td_passed24,1002
        int td_failed;td_failed25,1025
} test_data_t;test_data_t26,1048
static test_data_t _test_data;_test_data31,1292
static test_pass_func_t _pass_func = _default_test_pass;_pass_func32,1323
static test_fail_func_t _fail_func = _default_test_fail;_fail_func33,1380
test_init(void)test_init36,1443
test_fini(void)test_fini43,1537
test_errstr(int err)test_errstr52,1748
_default_test_fail(const char *file, int line, const char *name, const char *fmt, va_list args)_default_test_fail141,4514
_default_test_pass(int val, const char *file, int line, const char *name, const char *fmt, va_list args)_default_test_pass155,4985
_test_assert(int val, const char *file, int line, const char *name, const char *fmt, ...)_test_assert161,5131

kernel/entry/entry.c,26
void entry()entry17,946

kernel/proc/sched.c,834
static ktqueue_t kt_runq;kt_runq23,980
sched_init(void)sched_init26,1043
init_func(sched_init);sched_init30,1100
ktqueue_enqueue(ktqueue_t *q, kthread_t *thr)ktqueue_enqueue42,1333
ktqueue_dequeue(ktqueue_t *q)ktqueue_dequeue57,1681
ktqueue_remove(ktqueue_t *q, kthread_t *thr)ktqueue_remove82,2183
sched_queue_init(ktqueue_t *q)sched_queue_init92,2438
sched_queue_empty(ktqueue_t *q)sched_queue_empty99,2534
sched_sleep_on(ktqueue_t *q)sched_sleep_on112,2827
sched_cancellable_sleep_on(ktqueue_t *q)sched_cancellable_sleep_on133,3252
sched_wakeup_on(ktqueue_t *q)sched_wakeup_on149,3616
sched_broadcast_on(ktqueue_t *q)sched_broadcast_on166,4093
sched_cancel(struct kthread *kthr)sched_cancel188,4730
sched_switch(void)sched_switch235,6700
sched_make_runnable(kthread_t *thr)sched_make_runnable279,8007

kernel/proc/context.c,324
__context_initial_func(context_func_t func, int arg1, void *arg2)__context_initial_func27,1044
context_setup(context_t *c, context_func_t func, int arg1, void *arg2,context_setup39,1296
context_make_active(context_t *c)context_make_active67,2247
context_switch(context_t *oldc, context_t *newc)context_switch83,2780

kernel/proc/kmutex.c,217
kmutex_init(kmutex_t *mtx)kmutex_init31,1196
kmutex_lock(kmutex_t *mtx)kmutex_lock48,1671
kmutex_lock_cancellable(kmutex_t *mtx)kmutex_lock_cancellable73,2192
kmutex_unlock(kmutex_t *mtx)kmutex_unlock107,3028

kernel/proc/proc.c,957
proc_t *curproc = NULL; /* global */curproc40,1307
static slab_allocator_t *proc_allocator = NULL;proc_allocator41,1344
static list_t _proc_list;_proc_list43,1393
static proc_t *proc_initproc = NULL; /* Pointer to the init process (PID 1) */proc_initproc44,1419
proc_init()proc_init47,1504
proc_lookup(int pid)proc_lookup55,1675
proc_list()proc_list67,1937
static pid_t next_pid = 0;next_pid72,1982
_proc_getid()_proc_getid83,2243
proc_create(char *name)proc_create112,3199
proc_cleanup(int status)proc_cleanup235,7360
proc_kill(proc_t *p, int status)proc_kill320,10329
proc_kill_all()proc_kill_all354,11260
proc_thread_exited(void *retval)proc_thread_exited392,12270
do_waitpid(pid_t pid, int options, int *status)do_waitpid420,13106
do_exit(int status)do_exit533,16195
proc_info(const void *arg, char *buf, size_t osize)proc_info553,16661
proc_list_info(const void *arg, char *buf, size_t osize)proc_list_info613,18527

kernel/proc/faber_test.c,1426
ktqueue_t wake_me_q;wake_me_q41,1452
int wake_me_len = 0;wake_me_len42,1473
int race=0;race43,1494
kmutex_t mutex;mutex45,1507
    struct proc *p;p48,1541
    struct kthread *t;t49,1561
} proc_thread_t;proc_thread_t50,1584
static void start_proc(proc_thread_t *ppt, char *name, kthread_func_t f, int arg1) {start_proc59,1998
static void wait_for_proc(proc_t *p) {wait_for_proc75,2490
static pid_t wait_for_any() {wait_for_any90,2941
static void wait_for_all() {wait_for_all102,3195
static void stop_until_queued(int tot, int *count) {stop_until_queued111,3404
static void stop_until_zero(int *count) {stop_until_zero122,3668
void *waitpid_test(int arg1, void *arg2) {waitpid_test132,3865
void *kthread_exit_test(int arg1, void *arg2) {kthread_exit_test140,4027
void *wakeme_test(int arg1, void *arg2) {wakeme_test148,4224
void *wakeme_uncancellable_test(int arg1, void *arg2) {wakeme_uncancellable_test164,4602
void *cancelme_test(int arg1, void *arg2) {cancelme_test177,4901
void *racer_test(int arg1, void *arg2) {racer_test193,5346
void *mutex_uncancellable_test(int arg1, void *arg2) {mutex_uncancellable_test217,5958
void *mutex_test(int arg1, void *arg2) {mutex_test243,6683
void *mutex_test_cancelme(int arg1, void *arg2) {mutex_test_cancelme273,7535
void *reparent_test(int arg1, void *arg2) {reparent_test302,8401
void *testproc(int arg1, void *arg2) {testproc314,8717

kernel/proc/sunghan_test.c,809
typedef struct my_node {my_node30,1123
	int length;length31,1148
	kmutex_t my_mutex;my_mutex32,1161
	ktqueue_t my_queue;my_queue33,1181
} my_node_t;my_node_t34,1202
static my_node_t mynode;mynode36,1216
static int rand_x = 200, rand_y = 50, rand_z = 3000;rand_x38,1242
static int rand_x = 200, rand_y = 50, rand_z = 3000;rand_y38,1242
static int rand_x = 200, rand_y = 50, rand_z = 3000;rand_z38,1242
random_function() {random_function41,1308
check_sleep(char *str) {check_sleep51,1559
add_my_node(int arg1, void *arg2) {add_my_node61,1811
remove_my_node(int arg1, void *arg2) {remove_my_node86,2220
watch_dog(int arg1, void *arg2)watch_dog112,2649
sunghan_test(int arg1, void *arg2)sunghan_test124,2895
sunghan_deadlock_test(int arg1, void *arg2)sunghan_deadlock_test173,4093

kernel/proc/fork.c,119
fork_setup_stack(const regs_t *regs, void *kstack)fork_setup_stack46,1575
do_fork(struct regs *regs)do_fork64,2218

kernel/proc/kthread.c,1210
kthread_t *curthr; /* global */curthr29,1086
static slab_allocator_t *kthread_allocator = NULL;kthread_allocator30,1118
static proc_t *reapd = NULL;reapd34,1258
static kthread_t *reapd_thr = NULL;reapd_thr35,1287
static ktqueue_t reapd_waitq;reapd_waitq36,1323
static list_t kthread_reapd_deadlist; /* Threads to be cleaned */kthread_reapd_deadlist37,1353
kthread_init()kthread_init43,1487
alloc_stack(void)alloc_stack56,1777
free_stack(char *stack)free_stack72,2098
kthread_destroy(kthread_t *t)kthread_destroy78,2200
kthread_create(struct proc *p, kthread_func_t func, long arg1, void *arg2)kthread_create97,2721
kthread_cancel(kthread_t *kthr, void *retval)kthread_cancel162,4965
kthread_exit(void *retval)kthread_exit202,6157
kthread_clone(kthread_t *thr)kthread_clone231,7178
kthread_detach(kthread_t *kthr)kthread_detach244,7482
kthread_join(kthread_t *kthr, void **retval)kthread_join251,7593
kthread_reapd_init()kthread_reapd_init261,7966
init_func(kthread_reapd_init);kthread_reapd_init265,8047
init_depends(sched_init);sched_init266,8078
kthread_reapd_shutdown()kthread_reapd_shutdown269,8110
kthread_reapd_run(int arg1, void *arg2)kthread_reapd_run275,8214

kernel/include/drivers/blockdev.h,546
#define BLOCK_SIZE BLOCK_SIZE27,1029
typedef struct blockdev {blockdev34,1125
        devid_t bd_id;bd_id36,1211
        struct blockdev_ops  *bd_ops;bd_ops38,1235
        struct mmobj bd_mmobj;bd_mmobj41,1330
        list_link_t bd_link;bd_link44,1419
} blockdev_t;blockdev_t45,1448
typedef struct blockdev_ops {blockdev_ops47,1463
        int (*read_block)(blockdev_t *bdev, char *buf,read_block58,1911
        int (*write_block)(blockdev_t *bdev, const char *buf,write_block71,2441
} blockdev_ops_t;blockdev_ops_t73,2561

kernel/include/drivers/dev.h,472
#define MINOR_BITS MINOR_BITS45,1962
#define MINOR_MASK MINOR_MASK46,1996
#define MAJOR(MAJOR47,2053
#define MINOR(MINOR48,2122
#define MKDEVID(MKDEVID49,2190
#define NULL_DEVID NULL_DEVID52,2309
#define MEM_NULL_DEVID MEM_NULL_DEVID53,2357
#define MEM_ZERO_DEVID MEM_ZERO_DEVID54,2405
#define DISK_MAJOR DISK_MAJOR56,2454
#define MEM_MAJOR MEM_MAJOR58,2476
#define MEM_NULL_MINOR MEM_NULL_MINOR59,2502
#define MEM_ZERO_MINOR MEM_ZERO_MINOR60,2528

kernel/include/drivers/tty/virtterm.h,133
#define DISPLAY_WIDTH DISPLAY_WIDTH17,893
#define DISPLAY_HEIGHT DISPLAY_HEIGHT20,968
#define DISPLAY_SIZE DISPLAY_SIZE23,1042

kernel/include/drivers/tty/screen.h,0

kernel/include/drivers/tty/n_tty.h,45
typedef struct n_tty n_tty_t;n_tty_t21,922

kernel/include/drivers/tty/tty.h,335
#define TTY_MAJOR TTY_MAJOR16,855
typedef struct tty_device {tty_device21,914
        struct tty_driver *tty_driver;tty_driver22,942
        struct tty_ldisc  *tty_ldisc;tty_ldisc23,981
        int                tty_id;tty_id24,1019
        bytedev_t          tty_cdev;tty_cdev25,1054
} tty_device_t;tty_device_t26,1091

kernel/include/drivers/tty/driver.h,887
typedef void (*tty_driver_callback_t)(void *, char);tty_driver_callback_t17,864
typedef struct tty_driver_ops {tty_driver_ops19,918
        void (*provide_char)(struct tty_driver *ttyd, char c);provide_char26,1140
        tty_driver_callback_t (*register_callback_handler)(register_callback_handler38,1635
        tty_driver_callback_t (*unregister_callback_handler)(unregister_callback_handler50,2040
        void *(*block_io)(struct tty_driver *ttyd);block_io61,2434
        void (*unblock_io)(struct tty_driver *ttyd, void *data);unblock_io70,2727
} tty_driver_ops_t;tty_driver_ops_t71,2792
typedef struct tty_driver {tty_driver73,2813
        tty_driver_ops_t     *ttd_ops;ttd_ops74,2841
        tty_driver_callback_t ttd_callback;ttd_callback75,2880
        void                 *ttd_callback_arg;ttd_callback_arg76,2924
} tty_driver_t;tty_driver_t77,2972

kernel/include/drivers/tty/keyboard.h,78
typedef void (*keyboard_char_handler_t)(char);keyboard_char_handler_t14,825

kernel/include/drivers/tty/ldisc.h,662
typedef struct tty_ldisc_ops {tty_ldisc_ops17,863
        void (*attach)(struct tty_ldisc *ldisc, struct tty_device *tty);attach25,1168
        void (*detach)(struct tty_ldisc *ldisc, struct tty_device *tty);detach34,1502
        int (*read)(struct tty_ldisc *ldisc, void *buf, int len);read44,1867
        const char *(*receive_char)(struct tty_ldisc *ldisc, char c);receive_char54,2236
        const char *(*process_char)(struct tty_ldisc *ldisc, char c);process_char64,2586
} tty_ldisc_ops_t;tty_ldisc_ops_t65,2656
typedef struct tty_ldisc {tty_ldisc67,2676
        tty_ldisc_ops_t   *ld_ops;ld_ops68,2703
} tty_ldisc_t;tty_ldisc_t69,2738

kernel/include/drivers/memdevs.h,0

kernel/include/drivers/bytedev.h,843
typedef struct bytedev {bytedev24,954
        devid_t             cd_id;cd_id25,979
        struct bytedev_ops *cd_ops;cd_ops26,1014
        list_link_t         cd_link;cd_link27,1050
} bytedev_t;bytedev_t28,1087
typedef struct bytedev_ops {bytedev_ops30,1101
        int (*read)(bytedev_t *dev, int offset, void *buf, int count);read31,1130
        int (*write)(bytedev_t *dev, int offset, const void *buf, int count);write32,1201
        int (*mmap)(struct vnode *file, struct vmarea *vma, struct mmobj **ret);mmap33,1279
        int (*fillpage)(struct vnode *file, off_t offset, void *pagebuf);fillpage34,1360
        int (*dirtypage)(struct vnode *file, off_t offset);dirtypage35,1434
        int (*cleanpage)(struct vnode *file, off_t offset, void *pagebuf);cleanpage36,1494
} bytedev_ops_t;bytedev_ops_t37,1569

kernel/include/drivers/pci.h,2034
#define PCIDEVICES	PCIDEVICES20,941
#define PCIBUSES	PCIBUSES21,964
#define PCIFUNCS	PCIFUNCS22,984
#define PCI_CONFIGURATION_ADDRESS PCI_CONFIGURATION_ADDRESS24,1004
#define PCI_CONFIGURATION_DATA PCI_CONFIGURATION_DATA25,1045
#define PCI_VENDOR_ID PCI_VENDOR_ID26,1083
#define PCI_DEVICE_ID PCI_DEVICE_ID27,1112
#define PCI_COMMAND PCI_COMMAND28,1141
#define PCI_STATUS PCI_STATUS29,1170
#define PCI_REVISION PCI_REVISION30,1199
#define PCI_CLASS PCI_CLASS31,1228
#define PCI_SUBCLASS PCI_SUBCLASS32,1257
#define PCI_INTERFACE PCI_INTERFACE33,1286
#define PCI_HEADERTYPE PCI_HEADERTYPE34,1315
#define PCI_BAR0 PCI_BAR035,1344
#define PCI_BAR1 PCI_BAR136,1373
#define PCI_BAR2 PCI_BAR237,1402
#define PCI_BAR3 PCI_BAR338,1431
#define PCI_BAR4 PCI_BAR439,1460
#define PCI_BAR5 PCI_BAR540,1489
#define PCI_CAPLIST PCI_CAPLIST41,1518
#define PCI_IRQLINE PCI_IRQLINE42,1547
#define PCI_CMD_IO	PCI_CMD_IO44,1577
#define PCI_CMD_MMIO	PCI_CMD_MMIO45,1604
#define PCI_CMD_BUSMASTER	PCI_CMD_BUSMASTER46,1633
	PCI_MMIO, PCI_IO, PCI_INVALIDBARPCI_MMIO49,1674
	PCI_MMIO, PCI_IO, PCI_INVALIDBARPCI_IO49,1674
	PCI_MMIO, PCI_IO, PCI_INVALIDBARPCI_INVALIDBAR49,1674
#define PCI_LOOKUP_WILDCARD PCI_LOOKUP_WILDCARD52,1712
typedef struct pcibar {pcibar54,1746
	uint32_t base_addr;base_addr55,1770
	size_t mem_size;mem_size56,1791
	uint8_t mem_type;mem_type57,1809
} pcibar_t;pcibar_t58,1828
typedef struct pcidev {pcidev60,1841
	uint8_t pci_bus;pci_bus61,1865
	uint8_t pci_device;pci_device62,1883
	uint8_t pci_func;pci_func63,1904
	uint16_t pci_vendorid;pci_vendorid64,1923
	uint16_t pci_deviceid;pci_deviceid65,1947
	uint8_t pci_classid;pci_classid66,1971
	uint8_t pci_subclassid;pci_subclassid67,1993
	uint8_t pci_interfaceid;pci_interfaceid68,2018
	uint8_t pci_revid;pci_revid69,2044
	uint8_t pci_irq;pci_irq70,2064
	pcibar_t pci_bar[6];pci_bar71,2082
	void* pci_data;pci_data72,2104
	list_link_t pci_link;pci_link74,2160
} pcidev_t;pcidev_t75,2183

kernel/include/drivers/disk/ata.h,0

kernel/include/drivers/disk/dma.h,110
#define DMA_COMMAND DMA_COMMAND15,870
#define DMA_STATUS DMA_STATUS16,895
#define DMA_PRD DMA_PRD17,920

kernel/include/globals.h,0

kernel/include/config.h,676
#define DEFAULT_STACK_SIZE DEFAULT_STACK_SIZE25,991
#define TICK_MSECS TICK_MSECS26,1054
#define KMEM_FRAC(KMEM_FRAC36,1300
#define PF_HASH_SIZE PF_HASH_SIZE39,1411
#define PAGEOUTD_FREE_TARGET_SHIFT PAGEOUTD_FREE_TARGET_SHIFT41,1532
#define PAGEOUTD_FREE_MIN_SHIFT PAGEOUTD_FREE_MIN_SHIFT42,1586
#define MAXPATHLEN MAXPATHLEN49,1692
#define MAX_FILES MAX_FILES50,1765
#define MAX_VFS MAX_VFS51,1831
#define MAX_VNODES MAX_VNODES52,1892
#define NAME_LEN NAME_LEN53,1967
#define NFILES NFILES54,2044
#define VFS_ROOTFS_DEV VFS_ROOTFS_DEV57,2179
#    define VFS_ROOTFS_TYPE VFS_ROOTFS_TYPE61,2322
#    define VFS_ROOTFS_TYPE VFS_ROOTFS_TYPE63,2363

kernel/include/kernel.h,403
#define inline inline34,1447
#define unlikely(unlikely35,1499
#define likely(likely36,1544
#define offsetof(offsetof38,1588
#define NOT_YET_IMPLEMENTED(NOT_YET_IMPLEMENTED41,1685
#define MIN(MIN46,1842
#define MAX(MAX49,1903
#define CONTAINER_OF(CONTAINER_OF52,1953
#define QUOTE_BY_NAME(QUOTE_BY_NAME63,2426
#define QUOTE_BY_VALUE(QUOTE_BY_VALUE64,2466
#define QUOTE(QUOTE66,2545

kernel/include/test/vfstest/vfstest.h,1054
#define fprintf(fprintf17,870
#define printf(printf18,932
#define errno errno21,1002
#define malloc malloc24,1054
#define free free25,1077
#define ksyscall(ksyscall28,1129
#define ksys_exit ksys_exit53,2383
int ksys_getdents(int fd, struct dirent *dirp, unsigned int count)ksys_getdents56,2428
#define mkdir(mkdir88,3273
#define rmdir rmdir89,3311
#define mount mount90,3346
#define umount umount91,3381
#define open(open92,3417
#define close close93,3456
#define link link94,3491
#define rename rename95,3525
#define unlink unlink96,3561
#define read read97,3597
#define write write98,3631
#define lseek lseek99,3666
#define dup dup100,3701
#define dup2 dup2101,3734
#define chdir chdir102,3768
#define stat(stat103,3803
#define getdents(getdents104,3842
#define exit(exit105,3887
#define RAND_MAX RAND_MAX109,3991
#define RANDOM(RANDOM110,4016
static unsigned long long randseed = 123456L;randseed112,4112
static int rand(void)rand114,4159
static void srand(unsigned int seed)srand120,4269

kernel/include/test/kshell/io.h,0

kernel/include/test/kshell/kshell.h,142
typedef struct kshell kshell_t;kshell_t16,845
typedef int (*kshell_cmd_func_t)(kshell_t *, int argc, char **argv);kshell_cmd_func_t17,877

kernel/include/test/usertest.h,411
#define test_assert(test_assert13,131
#define test_fork_begin(test_fork_begin17,261
#define test_fork_end(test_fork_end23,489
typedef void (*test_pass_func_t)(int val, const char *file, int line, const char *name, const char *fmt, va_list args);test_pass_func_t36,848
typedef void (*test_fail_func_t)(const char *file, int line, const char *name, const char *fmt, va_list args);test_fail_func_t37,968

kernel/include/proc/sched.h,166
typedef struct ktqueue {ktqueue17,865
        list_t          tq_list;tq_list18,890
        int             tq_size;tq_size19,923
} ktqueue_t;ktqueue_t20,956

kernel/include/proc/kmutex.h,217
typedef struct kmutex {kmutex16,850
        ktqueue_t       km_waitq;       /* wait queue */km_waitq17,874
        struct kthread *km_holder;      /* current holder */km_holder18,931
} kmutex_t;kmutex_t19,992

kernel/include/proc/context.h,534
typedef void *(*context_func_t)(int, void *);context_func_t22,977
typedef struct context {context24,1024
        uint32_t   c_eip; /* instruction pointer (EIP) */c_eip25,1049
        uint32_t   c_esp; /* stack pointer (ESP) */c_esp26,1107
        uint32_t   c_ebp; /* frame pointer (EBP) */c_ebp27,1159
        pagedir_t *c_pdptr; /* pointer to the page directory for this proc */c_pdptr29,1212
        uintptr_t  c_kstack;c_kstack31,1291
        size_t     c_kstacksz;c_kstacksz32,1320
} context_t;context_t33,1351

kernel/include/proc/kthread.h,1428
typedef context_func_t kthread_func_t;kthread_func_t24,974
typedef struct kthread {kthread27,1027
        context_t       kt_ctx;         /* this thread's context */kt_ctx28,1052
        char           *kt_kstack;      /* the kernel stack */kt_kstack29,1120
        void           *kt_retval;      /* this thread's return value */kt_retval30,1183
        int             kt_errno;       /* error no. of most recent syscall */kt_errno31,1256
        struct proc    *kt_proc;        /* the thread's process */kt_proc32,1335
        int             kt_cancelled;   /* 1 if this thread has been cancelled */kt_cancelled34,1403
        ktqueue_t      *kt_wchan;       /* The queue that this thread is blocked on */kt_wchan35,1485
        int             kt_state;       /* this thread's state */kt_state36,1572
        list_link_t     kt_qlink;       /* link on ktqueue */kt_qlink37,1638
        list_link_t     kt_plink;       /* link on proc thread list */kt_plink38,1700
        int             kt_detached;    /* if the thread has been detached */kt_detached40,1786
        ktqueue_t       kt_joinq;       /* thread waiting to join with this thread */kt_joinq41,1864
} kthread_t;kthread_t43,1957
#define KT_NO_STATE KT_NO_STATE46,1991
#define KT_RUN KT_RUN47,2051
#define KT_SLEEP KT_SLEEP48,2127
#define KT_SLEEP_CANCELLABLE KT_SLEEP_CANCELLABLE49,2214
#define KT_EXITED KT_EXITED50,2301

kernel/include/proc/proc.h,1642
#define PROC_MAX_COUNT PROC_MAX_COUNT24,943
#define PROC_NAME_LEN PROC_NAME_LEN25,973
typedef struct proc {proc29,1016
        pid_t           p_pid;                 /* our pid */p_pid30,1038
        char            p_comm[PROC_NAME_LEN]; /* process name */p_comm31,1099
        list_t          p_threads;       /* the process's thread list */p_threads33,1166
        list_t          p_children;      /* the process's children list */p_children34,1239
        struct proc    *p_pproc;         /* our parent process */p_pproc35,1314
        int             p_status;        /* exit status */p_status37,1381
        int             p_state;         /* running/sleeping/etc. */p_state38,1440
        ktqueue_t       p_wait;          /* queue for wait(2) */p_wait39,1509
        pagedir_t      *p_pagedir;p_pagedir41,1575
        list_link_t     p_list_link;     /* link on the list of all processes */p_list_link43,1611
        list_link_t     p_child_link;    /* link on proc list of children */p_child_link44,1692
        struct file    *p_files[NFILES]; /* open files */p_files47,1797
        struct vnode   *p_cwd;           /* current working dir */p_cwd48,1855
        void           *p_brk;           /* process break; see brk(2) */p_brk51,1940
        void           *p_start_brk;     /* initial value of process break */p_start_brk52,2013
        struct vmmap   *p_vmmap;         /* list of areas mapped intop_vmmap53,2091
} proc_t;proc_t56,2280
#define PROC_RUNNING PROC_RUNNING59,2313
#define PROC_DEAD PROC_DEAD60,2371
#define PID_IDLE PID_IDLE64,2489
#define PID_INIT PID_INIT65,2512

kernel/include/errno.h,4567
#define errno errno18,902
#define EPERM EPERM23,967
#define ENOENT ENOENT24,1029
#define ESRCH ESRCH25,1093
#define EINTR EINTR26,1147
#define EIO EIO27,1209
#define ENXIO ENXIO28,1257
#define E2BIG E2BIG29,1321
#define ENOEXEC ENOEXEC30,1382
#define EBADF EBADF31,1438
#define ECHILD ECHILD32,1492
#define EAGAIN EAGAIN33,1549
#define ENOMEM ENOMEM34,1597
#define EACCES EACCES35,1649
#define EFAULT EFAULT36,1705
#define ENOTBLK ENOTBLK37,1755
#define EBUSY EBUSY38,1815
#define EEXIST EEXIST39,1877
#define EXDEV EXDEV40,1927
#define ENODEV ENODEV41,1983
#define ENOTDIR ENOTDIR42,2036
#define EISDIR EISDIR43,2090
#define EINVAL EINVAL44,2143
#define ENFILE ENFILE45,2198
#define EMFILE EMFILE46,2256
#define ENOTTY ENOTTY47,2314
#define ETXTBSY ETXTBSY48,2369
#define EFBIG EFBIG49,2422
#define ENOSPC ENOSPC50,2475
#define ESPIPE ESPIPE51,2537
#define EROFS EROFS52,2588
#define EMLINK EMLINK53,2648
#define EPIPE EPIPE54,2701
#define EDOM EDOM55,2751
#define ERANGE ERANGE56,2825
#define EDEADLK EDEADLK58,2894
#define ENAMETOOLONG ENAMETOOLONG59,2962
#define ENOLCK ENOLCK60,3019
#define ENOSYS ENOSYS61,3083
#define ENOTEMPTY ENOTEMPTY62,3146
#define ELOOP ELOOP63,3204
#define EWOULDBLOCK EWOULDBLOCK64,3278
#define ENOMSG ENOMSG65,3338
#define EIDRM EIDRM66,3403
#define ECHRNG ECHRNG67,3460
#define EL2NSYNC EL2NSYNC68,3526
#define EL3HLT EL3HLT69,3589
#define EL3RST EL3RST70,3642
#define ELNRNG ELNRNG71,3694
#define EUNATCH EUNATCH72,3757
#define ENOCSI ENOCSI73,3824
#define EL2HLT EL2HLT74,3889
#define EBADE EBADE75,3942
#define EBADR EBADR76,3997
#define EXFULL EXFULL77,4062
#define ENOANO ENOANO78,4114
#define EBADRQC EBADRQC79,4161
#define EBADSLT EBADSLT80,4220
#define EDEADLOCK EDEADLOCK82,4272
#define EBFONT EBFONT84,4305
#define ENOSTR ENOSTR85,4364
#define ENODATA ENODATA86,4422
#define ETIME ETIME87,4478
#define ENOSR ENOSR88,4530
#define ENONET ENONET89,4593
#define ENOPKG ENOPKG90,4661
#define EREMOTE EREMOTE91,4721
#define ENOLINK ENOLINK92,4776
#define EADV EADV93,4836
#define ESRMNT ESRMNT94,4890
#define ECOMM ECOMM95,4942
#define EPROTO EPROTO96,5008
#define EMULTIHOP EMULTIHOP97,5061
#define EDOTDOT EDOTDOT98,5118
#define EBADMSG EBADMSG99,5175
#define EOVERFLOW EOVERFLOW100,5232
#define ENOTUNIQ ENOTUNIQ101,5308
#define EBADFD EBADFD102,5373
#define EREMCHG EREMCHG103,5440
#define ELIBACC ELIBACC104,5501
#define ELIBBAD ELIBBAD105,5578
#define ELIBSCN ELIBSCN106,5653
#define ELIBMAX ELIBMAX107,5723
#define ELIBEXEC ELIBEXEC108,5809
#define EILSEQ EILSEQ109,5885
#define ERESTART ERESTART110,5945
#define ESTRPIPE ESTRPIPE111,6027
#define EUSERS EUSERS112,6084
#define ENOTSOCK ENOTSOCK113,6137
#define EDESTADDRREQ EDESTADDRREQ114,6206
#define EMSGSIZE EMSGSIZE115,6273
#define EPROTOTYPE EPROTOTYPE116,6328
#define ENOPROTOOPT ENOPROTOOPT117,6397
#define EPROTONOSUPPORT EPROTONOSUPPORT118,6458
#define ESOCKTNOSUPPORT ESOCKTNOSUPPORT119,6519
#define EOPNOTSUPP EOPNOTSUPP120,6583
#define EPFNOSUPPORT EPFNOSUPPORT121,6667
#define EAFNOSUPPORT EAFNOSUPPORT122,6735
#define EADDRINUSE EADDRINUSE123,6814
#define EADDRNOTAVAIL EADDRNOTAVAIL124,6875
#define ENETDOWN ENETDOWN125,6945
#define ENETUNREACH ENETUNREACH126,6999
#define ENETRESET ENETRESET127,7060
#define ECONNABORTED ECONNABORTED128,7142
#define ECONNRESET ECONNRESET129,7213
#define ENOBUFS ENOBUFS130,7276
#define EISCONN EISCONN131,7340
#define ENOTCONN ENOTCONN132,7418
#define ESHUTDOWN ESHUTDOWN133,7492
#define ETOOMANYREFS ETOOMANYREFS134,7576
#define ETIMEDOUT ETIMEDOUT135,7649
#define ECONNREFUSED ECONNREFUSED136,7708
#define EHOSTDOWN EHOSTDOWN137,7765
#define EHOSTUNREACH EHOSTUNREACH138,7816
#define EALREADY EALREADY139,7871
#define EINPROGRESS EINPROGRESS140,7939
#define ESTALE ESTALE141,8003
#define EUCLEAN EUCLEAN142,8063
#define ENOTNAM ENOTNAM143,8126
#define ENAVAIL ENAVAIL144,8192
#define EISNAM EISNAM145,8260
#define EREMOTEIO EREMOTEIO146,8319
#define EDQUOT EDQUOT147,8374
#define ENOMEDIUM ENOMEDIUM149,8428
#define EMEDIUMTYPE EMEDIUMTYPE150,8482
#define ECANCELED ECANCELED151,8538
#define ENOKEY ENOKEY152,8595
#define EKEYEXPIRED EKEYEXPIRED153,8660
#define EKEYREVOKED EKEYREVOKED154,8714
#define EKEYREJECTED EKEYREJECTED155,8773
#define EOWNERDEAD EOWNERDEAD158,8865
#define ENOTRECOVERABLE ENOTRECOVERABLE159,8914
#define ENOTSUP ENOTSUP162,9005

kernel/include/vm/brk.h,0

kernel/include/vm/shadowd.h,0

kernel/include/vm/anon.h,0

kernel/include/vm/shadow.h,0

kernel/include/vm/vmmap.h,1121
#define VMMAP_DIR_LOHI VMMAP_DIR_LOHI18,869
#define VMMAP_DIR_HILO VMMAP_DIR_HILO19,894
typedef struct vmmap {vmmap25,962
        list_t       vmm_list;vmm_list26,985
        struct proc *vmm_proc;vmm_proc27,1016
} vmmap_t;vmmap_t28,1047
typedef struct vmarea {vmarea32,1164
        uint32_t       vma_start;    /* [starting vfn, */vma_start33,1188
        uint32_t       vma_end;      /*  ending vfn) */vma_end34,1246
        uint32_t       vma_off;      /* offset from beginning of vma_obj in pages */vma_off35,1302
        int            vma_prot;     /* permissions on mapping */vma_prot37,1388
        int            vma_flags;    /* either MAP_SHARED or MAP_PRIVATE */vma_flags38,1454
        struct vmmap  *vma_vmmap;    /* address space that this area belongs to */vma_vmmap40,1531
        struct mmobj  *vma_obj;      /* the vm object to read pages from */vma_obj41,1614
        list_link_t    vma_plink;    /* link on process vmmap maps list */vma_plink42,1690
        list_link_t    vma_olink;    /* link on the list of all vm_areasvma_olink43,1765
} vmarea_t;vmarea_t46,1976

kernel/include/vm/pagefault.h,206
#define FAULT_PRESENT FAULT_PRESENT16,845
#define FAULT_WRITE FAULT_WRITE17,873
#define FAULT_USER FAULT_USER18,901
#define FAULT_RESERVED FAULT_RESERVED19,929
#define FAULT_EXEC FAULT_EXEC20,957

kernel/include/vm/mmap.h,0

kernel/include/stdarg.h,132
typedef char *va_list;va_list14,825
#define va_start(va_start16,849
#define va_end(va_end17,897
#define va_arg(va_arg18,941

kernel/include/api/exec.h,0

kernel/include/api/utsname.h,353
#define _UTSNAME_LENGTH _UTSNAME_LENGTH14,825
struct utsname {utsname16,854
        char sysname[_UTSNAME_LENGTH];sysname17,871
        char nodename[_UTSNAME_LENGTH];nodename18,910
        char release[_UTSNAME_LENGTH];release19,950
        char version[_UTSNAME_LENGTH];version20,989
        char machine[_UTSNAME_LENGTH];machine21,1028

kernel/include/api/access.h,0

kernel/include/api/syscall.h,5065
#define INTR_SYSCALL INTR_SYSCALL23,974
#define SYS_syscall SYS_syscall27,1033
#define SYS_exit SYS_exit28,1067
#define SYS_fork SYS_fork29,1101
#define SYS_read SYS_read30,1135
#define SYS_write SYS_write31,1169
#define SYS_open SYS_open32,1203
#define SYS_close SYS_close33,1237
#define SYS_waitpid SYS_waitpid34,1271
#define SYS_link SYS_link35,1305
#define SYS_unlink SYS_unlink36,1339
#define SYS_execve SYS_execve37,1373
#define SYS_chdir SYS_chdir38,1408
#define SYS_sleep SYS_sleep39,1443
#define SYS_lseek SYS_lseek40,1488
#define SYS_sync SYS_sync41,1523
#define SYS_nuke SYS_nuke42,1558
#define SYS_dup SYS_dup43,1603
#define SYS_pipe SYS_pipe44,1638
#define SYS_ioctl SYS_ioctl45,1683
#define SYS_rmdir SYS_rmdir46,1728
#define SYS_mkdir SYS_mkdir47,1763
#define SYS_getdents SYS_getdents48,1798
#define SYS_mmap SYS_mmap49,1833
#define SYS_mprotect SYS_mprotect50,1868
#define SYS_munmap SYS_munmap51,1913
#define SYS_rename SYS_rename52,1948
#define SYS_uname SYS_uname53,1993
#define SYS_thr_create SYS_thr_create54,2028
#define SYS_thr_cancel SYS_thr_cancel55,2073
#define SYS_thr_exit SYS_thr_exit56,2108
#define SYS_thr_yield SYS_thr_yield57,2143
#define SYS_thr_join SYS_thr_join58,2178
#define SYS_gettid SYS_gettid59,2223
#define SYS_getpid SYS_getpid60,2268
#define SYS_errno SYS_errno61,2303
#define SYS_halt SYS_halt62,2338
#define SYS_get_free_mem SYS_get_free_mem63,2373
#define SYS_set_errno SYS_set_errno64,2418
#define SYS_dup2 SYS_dup265,2453
#define SYS_brk SYS_brk66,2488
#define SYS_mount SYS_mount67,2523
#define SYS_umount SYS_umount68,2558
#define SYS_stat SYS_stat69,2593
#define SYS_debug SYS_debug76,2724
#define SYS_kshell SYS_kshell77,2761
typedef struct argstr {argstr82,2826
        const char *as_str;as_str83,2850
        size_t      as_len; /* Not including null character */as_len84,2878
} argstr_t;argstr_t85,2941
typedef struct argvec {argvec87,2954
        argstr_t   *av_vec;av_vec88,2978
        size_t      av_len; /* Not including null entry */av_len89,3006
} argvec_t;argvec_t90,3065
typedef struct waitpid_args {waitpid_args92,3078
        pid_t  wpa_pid;wpa_pid93,3108
        int    wpa_options;wpa_options94,3132
        int   *wpa_status;wpa_status95,3160
} waitpid_args_t;waitpid_args_t96,3187
typedef struct mmap_args {mmap_args98,3206
        void   *mma_addr;mma_addr99,3233
        size_t  mma_len;mma_len100,3259
        int     mma_prot;mma_prot101,3284
        int     mma_flags;mma_flags102,3310
        int     mma_fd;mma_fd103,3337
        off_t   mma_off;mma_off104,3361
} mmap_args_t;mmap_args_t105,3386
typedef struct munmap_args {munmap_args107,3402
        void   *addr;addr108,3431
        size_t  len;len109,3453
} munmap_args_t;munmap_args_t110,3474
typedef struct open_args {open_args112,3492
        argstr_t filename;filename113,3519
        int      flags;flags114,3546
        int      mode;mode115,3570
} open_args_t;open_args_t116,3593
typedef struct read_args {read_args118,3609
        int     fd;fd119,3636
        void   *buf;buf120,3656
        size_t  nbytes;nbytes121,3677
} read_args_t;read_args_t122,3701
typedef struct write_args {write_args124,3717
        int     fd;fd125,3745
        void   *buf;buf126,3765
        size_t  nbytes;nbytes127,3786
} write_args_t;write_args_t128,3810
typedef struct mkdir_args {mkdir_args130,3827
        argstr_t path;path131,3855
        int      mode;mode132,3878
} mkdir_args_t;mkdir_args_t133,3901
typedef struct link_args {link_args135,3918
        argstr_t to;to136,3945
        argstr_t from;from137,3966
} link_args_t;link_args_t138,3989
typedef struct execve_args {execve_args140,4005
        argstr_t filename;filename141,4034
        argvec_t argv;argv142,4061
        argvec_t envp;envp143,4084
} execve_args_t;execve_args_t144,4107
typedef struct rename_args {rename_args146,4125
        argstr_t oldname;oldname147,4154
        argstr_t newname;newname148,4180
} rename_args_t;rename_args_t149,4206
typedef struct getdents_args {getdents_args151,4224
        int            fd;fd152,4255
        struct dirent *dirp;dirp153,4282
        size_t         count;count154,4311
} getdents_args_t;getdents_args_t155,4341
typedef struct lseek_args {lseek_args157,4361
        int fd;fd158,4389
        int offset;offset159,4405
        int whence;whence160,4425
} lseek_args_t;lseek_args_t161,4445
typedef struct dup2_args {dup2_args163,4462
        int ofd;ofd164,4489
        int nfd;nfd165,4506
} dup2_args_t;dup2_args_t166,4523
typedef struct mount_args {mount_args169,4559
        argstr_t spec;spec170,4587
        argstr_t dir;dir171,4610
        argstr_t fstype;fstype172,4632
} mount_args_t;mount_args_t173,4657
typedef struct stat_args {stat_args176,4681
        argstr_t     path;path177,4708
        struct stat *buf;buf178,4735
} stat_args_t;stat_args_t179,4761

kernel/include/api/elf.h,97829
typedef uint16_t Elf32_Half;Elf32_Half44,1910
typedef uint16_t Elf64_Half;Elf64_Half45,1939
typedef uint32_t Elf32_Word;Elf32_Word48,2025
typedef int32_t  Elf32_Sword;Elf32_Sword49,2054
typedef uint32_t Elf64_Word;Elf64_Word50,2084
typedef int32_t  Elf64_Sword;Elf64_Sword51,2113
typedef uint64_t Elf32_Xword;Elf32_Xword54,2200
typedef int64_t  Elf32_Sxword;Elf32_Sxword55,2230
typedef uint64_t Elf64_Xword;Elf64_Xword56,2261
typedef int64_t  Elf64_Sxword;Elf64_Sxword57,2291
typedef uint32_t Elf32_Addr;Elf32_Addr60,2349
typedef uint64_t Elf64_Addr;Elf64_Addr61,2378
typedef uint32_t Elf32_Off;Elf32_Off64,2437
typedef uint64_t Elf64_Off;Elf64_Off65,2465
typedef uint16_t Elf32_Section;Elf32_Section68,2556
typedef uint16_t Elf64_Section;Elf64_Section69,2588
typedef Elf32_Half Elf32_Versym;Elf32_Versym72,2665
typedef Elf64_Half Elf64_Versym;Elf64_Versym73,2698
#define EI_NIDENT EI_NIDENT78,2808
        unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */e_ident81,2849
        Elf32_Half    e_type;                 /* Object file type */e_type82,2929
        Elf32_Half    e_machine;              /* Architecture */e_machine83,2998
        Elf32_Word    e_version;              /* Object file version */e_version84,3063
        Elf32_Addr    e_entry;                /* Entry point virtual address */e_entry85,3135
        Elf32_Off     e_phoff;                /* Program header table file offset */e_phoff86,3215
        Elf32_Off     e_shoff;                /* Section header table file offset */e_shoff87,3300
        Elf32_Word    e_flags;                /* Processor-specific flags */e_flags88,3385
        Elf32_Half    e_ehsize;               /* ELF header size in bytes */e_ehsize89,3462
        Elf32_Half    e_phentsize;            /* Program header table entry size */e_phentsize90,3539
        Elf32_Half    e_phnum;                /* Program header table entry count */e_phnum91,3623
        Elf32_Half    e_shentsize;            /* Section header table entry size */e_shentsize92,3708
        Elf32_Half    e_shnum;                /* Section header table entry count */e_shnum93,3792
        Elf32_Half    e_shstrndx;             /* Section header string table index */e_shstrndx94,3877
} Elf32_Ehdr;Elf32_Ehdr95,3963
        unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */e_ident98,3995
        Elf64_Half    e_type;                 /* Object file type */e_type99,4075
        Elf64_Half    e_machine;              /* Architecture */e_machine100,4144
        Elf64_Word    e_version;              /* Object file version */e_version101,4209
        Elf64_Addr    e_entry;                /* Entry point virtual address */e_entry102,4281
        Elf64_Off     e_phoff;                /* Program header table file offset */e_phoff103,4361
        Elf64_Off     e_shoff;                /* Section header table file offset */e_shoff104,4446
        Elf64_Word    e_flags;                /* Processor-specific flags */e_flags105,4531
        Elf64_Half    e_ehsize;               /* ELF header size in bytes */e_ehsize106,4608
        Elf64_Half    e_phentsize;            /* Program header table entry size */e_phentsize107,4685
        Elf64_Half    e_phnum;                /* Program header table entry count */e_phnum108,4769
        Elf64_Half    e_shentsize;            /* Section header table entry size */e_shentsize109,4854
        Elf64_Half    e_shnum;                /* Section header table entry count */e_shnum110,4938
        Elf64_Half    e_shstrndx;             /* Section header string table index */e_shstrndx111,5023
} Elf64_Ehdr;Elf64_Ehdr112,5109
#define EI_MAG0 EI_MAG0118,5280
#define ELFMAG0 ELFMAG0119,5359
#define EI_MAG1 EI_MAG1121,5426
#define ELFMAG1 ELFMAG1122,5505
#define EI_MAG2 EI_MAG2124,5572
#define ELFMAG2 ELFMAG2125,5651
#define EI_MAG3 EI_MAG3127,5718
#define ELFMAG3 ELFMAG3128,5797
#define ELFMAG ELFMAG131,5943
#define SELFMAG SELFMAG132,5977
#define EI_CLASS EI_CLASS134,6004
#define ELFCLASSNONE ELFCLASSNONE135,6072
#define ELFCLASS32 ELFCLASS32136,6132
#define ELFCLASS64 ELFCLASS64137,6193
#define ELFCLASSNUM ELFCLASSNUM138,6254
#define EI_DATA EI_DATA140,6281
#define ELFDATANONE ELFDATANONE141,6352
#define ELFDATA2LSB ELFDATA2LSB142,6420
#define ELFDATA2MSB ELFDATA2MSB143,6496
#define ELFDATANUM ELFDATANUM144,6569
#define EI_VERSION EI_VERSION146,6596
#define EI_OSABI EI_OSABI149,6698
#define ELFOSABI_NONE ELFOSABI_NONE150,6766
#define ELFOSABI_SYSV ELFOSABI_SYSV151,6830
#define ELFOSABI_HPUX ELFOSABI_HPUX152,6884
#define ELFOSABI_NETBSD ELFOSABI_NETBSD153,6936
#define ELFOSABI_LINUX ELFOSABI_LINUX154,6991
#define ELFOSABI_SOLARIS ELFOSABI_SOLARIS155,7045
#define ELFOSABI_AIX ELFOSABI_AIX156,7105
#define ELFOSABI_IRIX ELFOSABI_IRIX157,7161
#define ELFOSABI_FREEBSD ELFOSABI_FREEBSD158,7218
#define ELFOSABI_TRU64 ELFOSABI_TRU64159,7274
#define ELFOSABI_MODESTO ELFOSABI_MODESTO160,7340
#define ELFOSABI_OPENBSD ELFOSABI_OPENBSD161,7403
#define ELFOSABI_ARM ELFOSABI_ARM162,7459
#define ELFOSABI_STANDALONE ELFOSABI_STANDALONE163,7509
#define EI_ABIVERSION EI_ABIVERSION165,7590
#define EI_PAD EI_PAD167,7649
#define ET_NONE ET_NONE171,7776
#define ET_REL ET_REL172,7835
#define ET_EXEC ET_EXEC173,7898
#define ET_DYN ET_DYN174,7960
#define ET_CORE ET_CORE175,8025
#define ET_NUM ET_NUM176,8081
#define ET_LOOS ET_LOOS177,8151
#define ET_HIOS ET_HIOS178,8221
#define ET_LOPROC ET_LOPROC179,8289
#define ET_HIPROC ET_HIPROC180,8366
#define EM_NONE EM_NONE184,8493
#define EM_M32 EM_M32185,8550
#define EM_SPARC EM_SPARC186,8610
#define EM_386 EM_386187,8666
#define EM_68K EM_68K188,8724
#define EM_88K EM_88K189,8791
#define EM_860 EM_860190,8858
#define EM_MIPS EM_MIPS191,8916
#define EM_S370 EM_S370192,8984
#define EM_MIPS_RS3_LE EM_MIPS_RS3_LE193,9045
#define EM_PARISC EM_PARISC195,9117
#define EM_VPP500 EM_VPP500196,9168
#define EM_SPARC32PLUS EM_SPARC32PLUS197,9229
#define EM_960 EM_960198,9290
#define EM_PPC EM_PPC199,9348
#define EM_PPC64 EM_PPC64200,9402
#define EM_S390 EM_S390201,9463
#define EM_V800 EM_V800203,9519
#define EM_FR20 EM_FR20204,9581
#define EM_RH32 EM_RH32205,9640
#define EM_RCE EM_RCE206,9696
#define EM_ARM EM_ARM207,9755
#define EM_FAKE_ALPHA EM_FAKE_ALPHA208,9805
#define EM_SH EM_SH209,9865
#define EM_SPARCV9 EM_SPARCV9210,9922
#define EM_TRICORE EM_TRICORE211,9984
#define EM_ARC EM_ARC212,10046
#define EM_H8_300 EM_H8_300213,10111
#define EM_H8_300H EM_H8_300H214,10172
#define EM_H8S EM_H8S215,10234
#define EM_H8_500 EM_H8_500216,10292
#define EM_IA_64 EM_IA_64217,10353
#define EM_MIPS_X EM_MIPS_X218,10412
#define EM_COLDFIRE EM_COLDFIRE219,10474
#define EM_68HC12 EM_68HC12220,10538
#define EM_MMA EM_MMA221,10601
#define EM_PCP EM_PCP222,10681
#define EM_NCPU EM_NCPU223,10739
#define EM_NDR1 EM_NDR1224,10809
#define EM_STARCORE EM_STARCORE225,10881
#define EM_ME16 EM_ME16226,10957
#define EM_ST100 EM_ST100227,11025
#define EM_TINYJ EM_TINYJ228,11105
#define EM_X86_64 EM_X86_64229,11185
#define EM_PDSP EM_PDSP230,11255
#define EM_FX66 EM_FX66232,11321
#define EM_ST9PLUS EM_ST9PLUS233,11396
#define EM_ST7 EM_ST7234,11474
#define EM_68HC16 EM_68HC16235,11552
#define EM_68HC11 EM_68HC11236,11632
#define EM_68HC08 EM_68HC08237,11712
#define EM_68HC05 EM_68HC05238,11792
#define EM_SVX EM_SVX239,11872
#define EM_ST19 EM_ST19240,11939
#define EM_VAX EM_VAX241,12018
#define EM_CRIS EM_CRIS242,12076
#define EM_JAVELIN EM_JAVELIN243,12168
#define EM_FIREPATH EM_FIREPATH244,12262
#define EM_ZSP EM_ZSP245,12340
#define EM_MMIX EM_MMIX246,12417
#define EM_HUANY EM_HUANY247,12507
#define EM_PRISM EM_PRISM248,12605
#define EM_AVR EM_AVR249,12664
#define EM_FR30 EM_FR30250,12742
#define EM_D10V EM_D10V251,12801
#define EM_D30V EM_D30V252,12863
#define EM_V850 EM_V850253,12925
#define EM_M32R EM_M32R254,12980
#define EM_MN10300 EM_MN10300255,13042
#define EM_MN10200 EM_MN10200256,13107
#define EM_PJ EM_PJ257,13172
#define EM_OPENRISC EM_OPENRISC258,13227
#define EM_ARC_A5 EM_ARC_A5259,13308
#define EM_XTENSA EM_XTENSA260,13375
#define EM_NUM EM_NUM261,13451
#define EM_ALPHA EM_ALPHA267,13687
#define EV_NONE EV_NONE271,13765
#define EV_CURRENT EV_CURRENT272,13831
#define EV_NUM EV_NUM273,13893
        Elf32_Word    sh_name;                /* Section name (string tbl index) */sh_name278,13961
        Elf32_Word    sh_type;                /* Section type */sh_type279,14045
        Elf32_Word    sh_flags;               /* Section flags */sh_flags280,14110
        Elf32_Addr    sh_addr;                /* Section virtual addr at execution */sh_addr281,14176
        Elf32_Off     sh_offset;              /* Section file offset */sh_offset282,14262
        Elf32_Word    sh_size;                /* Section size in bytes */sh_size283,14334
        Elf32_Word    sh_link;                /* Link to another section */sh_link284,14408
        Elf32_Word    sh_info;                /* Additional section information */sh_info285,14484
        Elf32_Word    sh_addralign;           /* Section alignment */sh_addralign286,14567
        Elf32_Word    sh_entsize;             /* Entry size if section holds table */sh_entsize287,14637
} Elf32_Shdr;Elf32_Shdr288,14723
        Elf64_Word    sh_name;                /* Section name (string tbl index) */sh_name291,14755
        Elf64_Word    sh_type;                /* Section type */sh_type292,14839
        Elf64_Xword   sh_flags;               /* Section flags */sh_flags293,14904
        Elf64_Addr    sh_addr;                /* Section virtual addr at execution */sh_addr294,14970
        Elf64_Off     sh_offset;              /* Section file offset */sh_offset295,15056
        Elf64_Xword   sh_size;                /* Section size in bytes */sh_size296,15128
        Elf64_Word    sh_link;                /* Link to another section */sh_link297,15202
        Elf64_Word    sh_info;                /* Additional section information */sh_info298,15278
        Elf64_Xword   sh_addralign;           /* Section alignment */sh_addralign299,15361
        Elf64_Xword   sh_entsize;             /* Entry size if section holds table */sh_entsize300,15431
} Elf64_Shdr;Elf64_Shdr301,15517
#define SHN_UNDEF SHN_UNDEF305,15565
#define SHN_LORESERVE SHN_LORESERVE306,15629
#define SHN_LOPROC SHN_LOPROC307,15701
#define SHN_BEFORE SHN_BEFORE308,15775
#define SHN_AFTER SHN_AFTER310,15865
#define SHN_HIPROC SHN_HIPROC312,15954
#define SHN_LOOS SHN_LOOS313,16026
#define SHN_HIOS SHN_HIOS314,16093
#define SHN_ABS SHN_ABS315,16158
#define SHN_COMMON SHN_COMMON316,16234
#define SHN_XINDEX SHN_XINDEX317,16308
#define SHN_HIRESERVE SHN_HIRESERVE318,16380
#define SHT_NULL SHT_NULL322,16500
#define SHT_PROGBITS SHT_PROGBITS323,16580
#define SHT_SYMTAB SHT_SYMTAB324,16639
#define SHT_STRTAB SHT_STRTAB325,16698
#define SHT_RELA SHT_RELA326,16757
#define SHT_HASH SHT_HASH327,16835
#define SHT_DYNAMIC SHT_DYNAMIC328,16899
#define SHT_NOTE SHT_NOTE329,16973
#define SHT_NOBITS SHT_NOBITS330,17025
#define SHT_REL SHT_REL331,17104
#define SHT_SHLIB SHT_SHLIB332,17181
#define SHT_DYNSYM SHT_DYNSYM333,17236
#define SHT_INIT_ARRAY SHT_INIT_ARRAY334,17310
#define SHT_FINI_ARRAY SHT_FINI_ARRAY335,17378
#define SHT_PREINIT_ARRAY SHT_PREINIT_ARRAY336,17445
#define SHT_GROUP SHT_GROUP337,17517
#define SHT_SYMTAB_SHNDX SHT_SYMTAB_SHNDX338,17577
#define SHT_NUM SHT_NUM339,17648
#define SHT_LOOS SHT_LOOS340,17720
#define SHT_GNU_LIBLIST SHT_GNU_LIBLIST341,17784
#define SHT_CHECKSUM SHT_CHECKSUM342,17851
#define SHT_LOSUNW SHT_LOSUNW343,17924
#define SHT_SUNW_move SHT_SUNW_move344,17995
#define SHT_SUNW_COMDAT SHT_SUNW_COMDAT345,18032
#define SHT_SUNW_syminfo SHT_SUNW_syminfo346,18069
#define SHT_GNU_verdef SHT_GNU_verdef347,18106
#define SHT_GNU_verneed SHT_GNU_verneed348,18181
#define SHT_GNU_versym SHT_GNU_versym349,18251
#define SHT_HISUNW SHT_HISUNW350,18320
#define SHT_HIOS SHT_HIOS351,18392
#define SHT_LOPROC SHT_LOPROC352,18459
#define SHT_HIPROC SHT_HIPROC353,18533
#define SHT_LOUSER SHT_LOUSER354,18605
#define SHT_HIUSER SHT_HIUSER355,18681
#define SHF_WRITE SHF_WRITE359,18807
#define SHF_ALLOC SHF_ALLOC360,18862
#define SHF_EXECINSTR SHF_EXECINSTR361,18941
#define SHF_MERGE SHF_MERGE362,18998
#define SHF_STRINGS SHF_STRINGS363,19060
#define SHF_INFO_LINK SHF_INFO_LINK364,19138
#define SHF_LINK_ORDER SHF_LINK_ORDER365,19213
#define SHF_OS_NONCONFORMING SHF_OS_NONCONFORMING366,19290
#define SHF_GROUP SHF_GROUP368,19379
#define SHF_TLS SHF_TLS369,19456
#define SHF_MASKOS SHF_MASKOS370,19535
#define SHF_MASKPROC SHF_MASKPROC371,19595
#define SHF_ORDERED SHF_ORDERED372,19660
#define SHF_EXCLUDE SHF_EXCLUDE374,19747
#define GRP_COMDAT GRP_COMDAT378,19886
        Elf32_Word    st_name;                /* Symbol name (string tbl index) */st_name383,20001
        Elf32_Addr    st_value;               /* Symbol value */st_value384,20084
        Elf32_Word    st_size;                /* Symbol size */st_size385,20149
        unsigned char st_info;                /* Symbol type and binding */st_info386,20213
        unsigned char st_other;               /* Symbol visibility */st_other387,20289
        Elf32_Section st_shndx;               /* Section index */st_shndx388,20359
} Elf32_Sym;Elf32_Sym389,20425
        Elf64_Word    st_name;                /* Symbol name (string tbl index) */st_name392,20456
        unsigned char st_info;                /* Symbol type and binding */st_info393,20539
        unsigned char st_other;               /* Symbol visibility */st_other394,20615
        Elf64_Section st_shndx;               /* Section index */st_shndx395,20685
        Elf64_Addr    st_value;               /* Symbol value */st_value396,20751
        Elf64_Xword   st_size;                /* Symbol size */st_size397,20816
} Elf64_Sym;Elf64_Sym398,20880
        Elf32_Half si_boundto;                /* Direct bindings, symbol bound to */si_boundto404,21015
        Elf32_Half si_flags;                  /* Per symbol flags */si_flags405,21100
} Elf32_Syminfo;Elf32_Syminfo406,21169
        Elf64_Half si_boundto;                /* Direct bindings, symbol bound to */si_boundto409,21204
        Elf64_Half si_flags;                  /* Per symbol flags */si_flags410,21289
} Elf64_Syminfo;Elf64_Syminfo411,21358
#define SYMINFO_BT_SELF SYMINFO_BT_SELF414,21415
#define SYMINFO_BT_PARENT SYMINFO_BT_PARENT415,21482
#define SYMINFO_BT_LOWRESERVE SYMINFO_BT_LOWRESERVE416,21551
#define SYMINFO_FLG_DIRECT SYMINFO_FLG_DIRECT419,21667
#define SYMINFO_FLG_PASSTHRU SYMINFO_FLG_PASSTHRU420,21733
#define SYMINFO_FLG_COPY SYMINFO_FLG_COPY421,21811
#define SYMINFO_FLG_LAZYLOAD SYMINFO_FLG_LAZYLOAD422,21880
#define SYMINFO_NONE SYMINFO_NONE424,21998
#define SYMINFO_CURRENT SYMINFO_CURRENT425,22032
#define SYMINFO_NUM SYMINFO_NUM426,22066
#define ELF32_ST_BIND(ELF32_ST_BIND431,22175
#define ELF32_ST_TYPE(ELF32_ST_TYPE432,22246
#define ELF32_ST_INFO(ELF32_ST_INFO433,22300
#define ELF64_ST_BIND(ELF64_ST_BIND436,22447
#define ELF64_ST_TYPE(ELF64_ST_TYPE437,22507
#define ELF64_ST_INFO(ELF64_ST_INFO438,22567
#define STB_LOCAL STB_LOCAL442,22710
#define STB_GLOBAL STB_GLOBAL443,22769
#define STB_WEAK STB_WEAK444,22829
#define STB_NUM STB_NUM445,22887
#define STB_LOOS STB_LOOS446,22959
#define STB_HIOS STB_HIOS447,23026
#define STB_LOPROC STB_LOPROC448,23091
#define STB_HIPROC STB_HIPROC449,23165
#define STT_NOTYPE STT_NOTYPE453,23306
#define STT_OBJECT STT_OBJECT454,23379
#define STT_FUNC STT_FUNC455,23449
#define STT_SECTION STT_SECTION456,23519
#define STT_FILE STT_FILE457,23598
#define STT_COMMON STT_COMMON458,23671
#define STT_TLS STT_TLS459,23748
#define STT_NUM STT_NUM460,23828
#define STT_LOOS STT_LOOS461,23900
#define STT_HIOS STT_HIOS462,23967
#define STT_LOPROC STT_LOPROC463,24032
#define STT_HIPROC STT_HIPROC464,24106
#define STN_UNDEF STN_UNDEF471,24402
#define ELF32_ST_VISIBILITY(ELF32_ST_VISIBILITY476,24541
#define ELF64_ST_VISIBILITY(ELF64_ST_VISIBILITY479,24634
#define STV_DEFAULT STV_DEFAULT482,24761
#define STV_INTERNAL STV_INTERNAL483,24839
#define STV_HIDDEN STV_HIDDEN484,24917
#define STV_PROTECTED STV_PROTECTED485,24996
        Elf32_Addr    r_offset;               /* Address */r_offset491,25167
        Elf32_Word    r_info;                 /* Relocation type and symbol index */r_info492,25227
} Elf32_Rel;Elf32_Rel493,25312
        Elf64_Addr    r_offset;               /* Address */r_offset501,25584
        Elf64_Xword   r_info;                 /* Relocation type and symbol index */r_info502,25644
} Elf64_Rel;Elf64_Rel503,25729
        Elf32_Addr    r_offset;               /* Address */r_offset508,25834
        Elf32_Word    r_info;                 /* Relocation type and symbol index */r_info509,25894
        Elf32_Sword   r_addend;               /* Addend */r_addend510,25979
} Elf32_Rela;Elf32_Rela511,26038
        Elf64_Addr    r_offset;               /* Address */r_offset514,26070
        Elf64_Xword   r_info;                 /* Relocation type and symbol index */r_info515,26130
        Elf64_Sxword  r_addend;               /* Addend */r_addend516,26215
} Elf64_Rela;Elf64_Rela517,26274
#define ELF32_R_SYM(ELF32_R_SYM521,26361
#define ELF32_R_TYPE(ELF32_R_TYPE522,26414
#define ELF32_R_INFO(ELF32_R_INFO523,26469
#define ELF64_R_SYM(ELF64_R_SYM525,26543
#define ELF64_R_TYPE(ELF64_R_TYPE526,26595
#define ELF64_R_INFO(ELF64_R_INFO527,26654
        Elf32_Word    p_type;                 /* Segment type */p_type532,26785
        Elf32_Off     p_offset;               /* Segment file offset */p_offset533,26850
        Elf32_Addr    p_vaddr;                /* Segment virtual address */p_vaddr534,26922
        Elf32_Addr    p_paddr;                /* Segment physical address */p_paddr535,26998
        Elf32_Word    p_filesz;               /* Segment size in file */p_filesz536,27075
        Elf32_Word    p_memsz;                /* Segment size in memory */p_memsz537,27148
        Elf32_Word    p_flags;                /* Segment flags */p_flags538,27223
        Elf32_Word    p_align;                /* Segment alignment */p_align539,27289
} Elf32_Phdr;Elf32_Phdr540,27359
        Elf64_Word    p_type;                 /* Segment type */p_type543,27391
        Elf64_Word    p_flags;                /* Segment flags */p_flags544,27456
        Elf64_Off     p_offset;               /* Segment file offset */p_offset545,27522
        Elf64_Addr    p_vaddr;                /* Segment virtual address */p_vaddr546,27594
        Elf64_Addr    p_paddr;                /* Segment physical address */p_paddr547,27670
        Elf64_Xword   p_filesz;               /* Segment size in file */p_filesz548,27747
        Elf64_Xword   p_memsz;                /* Segment size in memory */p_memsz549,27820
        Elf64_Xword   p_align;                /* Segment alignment */p_align550,27895
} Elf64_Phdr;Elf64_Phdr551,27965
#define PT_NULL PT_NULL555,28028
#define PT_LOAD PT_LOAD556,28108
#define PT_DYNAMIC PT_DYNAMIC557,28179
#define PT_INTERP PT_INTERP558,28253
#define PT_NOTE PT_NOTE559,28319
#define PT_SHLIB PT_SHLIB560,28387
#define PT_PHDR PT_PHDR561,28442
#define PT_TLS PT_TLS562,28518
#define PT_NUM PT_NUM563,28593
#define PT_LOOS PT_LOOS564,28663
#define PT_GNU_EH_FRAME PT_GNU_EH_FRAME565,28730
#define PT_GNU_STACK PT_GNU_STACK566,28802
#define PT_GNU_RELRO PT_GNU_RELRO567,28878
#define PT_LOSUNW PT_LOSUNW568,28951
#define PT_SUNWBSS PT_SUNWBSS569,28986
#define PT_SUNWSTACK PT_SUNWSTACK570,29053
#define PT_HISUNW PT_HISUNW571,29113
#define PT_HIOS PT_HIOS572,29148
#define PT_LOPROC PT_LOPROC573,29213
#define PT_HIPROC PT_HIPROC574,29287
#define PF_X PF_X578,29410
#define PF_W PF_W579,29478
#define PF_R PF_R580,29544
#define PF_MASKOS PF_MASKOS581,29610
#define PF_MASKPROC PF_MASKPROC582,29668
#define NT_PRSTATUS NT_PRSTATUS586,29804
#define NT_FPREGSET NT_FPREGSET587,29883
#define NT_PRPSINFO NT_PRPSINFO588,29962
#define NT_PRXREG NT_PRXREG589,30041
#define NT_TASKSTRUCT NT_TASKSTRUCT590,30121
#define NT_PLATFORM NT_PLATFORM591,30199
#define NT_AUXV NT_AUXV592,30278
#define NT_GWINDOWS NT_GWINDOWS593,30352
#define NT_ASRS NT_ASRS594,30431
#define NT_PSTATUS NT_PSTATUS595,30508
#define NT_PSINFO NT_PSINFO596,30586
#define NT_PRCRED NT_PRCRED597,30663
#define NT_UTSNAME NT_UTSNAME598,30740
#define NT_LWPSTATUS NT_LWPSTATUS599,30818
#define NT_LWPSINFO NT_LWPSINFO600,30898
#define NT_PRFPXREG NT_PRFPXREG601,30976
#define NT_VERSION NT_VERSION605,31134
        Elf32_Sword   d_tag;                  /* Dynamic entry type */d_tag611,31258
                Elf32_Word d_val;                 /* Integer value */d_val613,31345
                Elf32_Addr d_ptr;                 /* Address value */d_ptr614,31415
        } d_un;d_un615,31485
} Elf32_Dyn;Elf32_Dyn616,31501
        Elf64_Sxword  d_tag;                  /* Dynamic entry type */d_tag619,31532
                Elf64_Xword d_val;                /* Integer value */d_val621,31619
                Elf64_Addr d_ptr;                 /* Address value */d_ptr622,31689
        } d_un;d_un623,31759
} Elf64_Dyn;Elf64_Dyn624,31775
#define DT_NULL DT_NULL628,31842
#define DT_NEEDED DT_NEEDED629,31917
#define DT_PLTRELSZ DT_PLTRELSZ630,31986
#define DT_PLTGOT DT_PLTGOT631,32060
#define DT_HASH DT_HASH632,32130
#define DT_STRTAB DT_STRTAB633,32205
#define DT_SYMTAB DT_SYMTAB634,32275
#define DT_RELA DT_RELA635,32345
#define DT_RELASZ DT_RELASZ636,32414
#define DT_RELAENT DT_RELAENT637,32486
#define DT_STRSZ DT_STRSZ638,32555
#define DT_SYMENT DT_SYMENT639,32622
#define DT_INIT DT_INIT640,32699
#define DT_FINI DT_FINI641,32770
#define DT_SONAME DT_SONAME642,32848
#define DT_RPATH DT_RPATH643,32916
#define DT_SYMBOLIC DT_SYMBOLIC644,32995
#define DT_REL DT_REL645,33066
#define DT_RELSZ DT_RELSZ646,33134
#define DT_RELENT DT_RELENT647,33205
#define DT_PLTREL DT_PLTREL648,33273
#define DT_DEBUG DT_DEBUG649,33340
#define DT_TEXTREL DT_TEXTREL650,33413
#define DT_JMPREL DT_JMPREL651,33484
#define DT_BIND_NOW DT_BIND_NOW652,33552
#define DT_INIT_ARRAY DT_INIT_ARRAY653,33628
#define DT_FINI_ARRAY DT_FINI_ARRAY654,33707
#define DT_INIT_ARRAYSZ DT_INIT_ARRAYSZ655,33786
#define DT_FINI_ARRAYSZ DT_FINI_ARRAYSZ656,33863
#define DT_RUNPATH DT_RUNPATH657,33940
#define DT_FLAGS DT_FLAGS658,34006
#define DT_ENCODING DT_ENCODING659,34086
#define DT_PREINIT_ARRAY DT_PREINIT_ARRAY660,34155
#define DT_PREINIT_ARRAYSZ DT_PREINIT_ARRAYSZ661,34236
#define DT_NUM DT_NUM662,34316
#define DT_LOOS DT_LOOS663,34374
#define DT_HIOS DT_HIOS664,34441
#define DT_LOPROC DT_LOPROC665,34506
#define DT_HIPROC DT_HIPROC666,34580
#define DT_PROCNUM DT_PROCNUM667,34652
#define DT_VALRNGLO DT_VALRNGLO672,34883
#define DT_GNU_PRELINKED DT_GNU_PRELINKED673,34918
#define DT_GNU_CONFLICTSZ DT_GNU_CONFLICTSZ674,34985
#define DT_GNU_LIBLISTSZ DT_GNU_LIBLISTSZ675,35056
#define DT_CHECKSUM DT_CHECKSUM676,35123
#define DT_PLTPADSZ DT_PLTPADSZ677,35158
#define DT_MOVEENT DT_MOVEENT678,35193
#define DT_MOVESZ DT_MOVESZ679,35228
#define DT_FEATURE_1 DT_FEATURE_1680,35263
#define DT_POSFLAG_1 DT_POSFLAG_1681,35337
#define DT_SYMINSZ DT_SYMINSZ683,35444
#define DT_SYMINENT DT_SYMINENT684,35523
#define DT_VALRNGHI DT_VALRNGHI685,35591
#define DT_VALTAGIDX(DT_VALTAGIDX686,35626
#define DT_VALNUM DT_VALNUM687,35703
#define DT_ADDRRNGLO DT_ADDRRNGLO694,35966
#define DT_GNU_CONFLICT DT_GNU_CONFLICT695,36001
#define DT_GNU_LIBLIST DT_GNU_LIBLIST696,36073
#define DT_CONFIG DT_CONFIG697,36132
#define DT_DEPAUDIT DT_DEPAUDIT698,36206
#define DT_AUDIT DT_AUDIT699,36274
#define DT_PLTPAD DT_PLTPAD700,36338
#define DT_MOVETAB DT_MOVETAB701,36398
#define DT_SYMINFO DT_SYMINFO702,36457
#define DT_ADDRRNGHI DT_ADDRRNGHI703,36519
#define DT_ADDRTAGIDX(DT_ADDRTAGIDX704,36554
#define DT_ADDRNUM DT_ADDRNUM705,36631
#define DT_VERSYM DT_VERSYM709,36744
#define DT_RELACOUNT DT_RELACOUNT711,36780
#define DT_RELCOUNT DT_RELCOUNT712,36815
#define DT_FLAGS_1 DT_FLAGS_1715,36884
#define DT_VERDEF DT_VERDEF716,36962
#define DT_VERDEFNUM DT_VERDEFNUM718,37044
#define DT_VERNEED DT_VERNEED719,37120
#define DT_VERNEEDNUM DT_VERNEEDNUM721,37204
#define DT_VERSIONTAGIDX(DT_VERSIONTAGIDX722,37276
#define DT_VERSIONTAGNUM DT_VERSIONTAGNUM723,37353
#define DT_AUXILIARY DT_AUXILIARY727,37490
#define DT_FILTER DT_FILTER728,37570
#define DT_EXTRATAGIDX(DT_EXTRATAGIDX729,37649
#define DT_EXTRANUM DT_EXTRANUM730,37727
#define DF_ORIGIN DF_ORIGIN733,37807
#define DF_SYMBOLIC DF_SYMBOLIC734,37878
#define DF_TEXTREL DF_TEXTREL735,37955
#define DF_BIND_NOW DF_BIND_NOW736,38034
#define DF_STATIC_TLS DF_STATIC_TLS737,38112
#define DF_1_NOW DF_1_NOW741,38301
#define DF_1_GLOBAL DF_1_GLOBAL742,38378
#define DF_1_GROUP DF_1_GROUP743,38458
#define DF_1_NODELETE DF_1_NODELETE744,38537
#define DF_1_LOADFLTR DF_1_LOADFLTR745,38617
#define DF_1_INITFIRST DF_1_INITFIRST746,38697
#define DF_1_NOOPEN DF_1_NOOPEN747,38777
#define DF_1_ORIGIN DF_1_ORIGIN748,38857
#define DF_1_DIRECT DF_1_DIRECT749,38929
#define DF_1_TRANS DF_1_TRANS750,39000
#define DF_1_INTERPOSE DF_1_INTERPOSE751,39035
#define DF_1_NODEFLIB DF_1_NODEFLIB752,39111
#define DF_1_NODUMP DF_1_NODUMP753,39190
#define DF_1_CONFALT DF_1_CONFALT754,39264
#define DF_1_ENDFILTEE DF_1_ENDFILTEE755,39344
#define DF_1_DISPRELDNE DF_1_DISPRELDNE756,39424
#define DF_1_DISPRELPND DF_1_DISPRELPND757,39504
#define DTF_1_PARINIT DTF_1_PARINIT760,39640
#define DTF_1_CONFEXP DTF_1_CONFEXP761,39675
#define DF_P1_LAZYLOAD DF_P1_LAZYLOAD764,39786
#define DF_P1_GROUPPERM DF_P1_GROUPPERM765,39860
        Elf32_Half    vd_version;             /* Version revision */vd_version771,40016
        Elf32_Half    vd_flags;               /* Version information */vd_flags772,40085
        Elf32_Half    vd_ndx;                 /* Version Index */vd_ndx773,40157
        Elf32_Half    vd_cnt;                 /* Number of associated aux entries */vd_cnt774,40223
        Elf32_Word    vd_hash;                /* Version name hash value */vd_hash775,40308
        Elf32_Word    vd_aux;                 /* Offset in bytes to verdaux array */vd_aux776,40384
        Elf32_Word    vd_next;                /* Offset in bytes to next verdefvd_next777,40469
} Elf32_Verdef;Elf32_Verdef779,40601
        Elf64_Half    vd_version;             /* Version revision */vd_version782,40635
        Elf64_Half    vd_flags;               /* Version information */vd_flags783,40704
        Elf64_Half    vd_ndx;                 /* Version Index */vd_ndx784,40776
        Elf64_Half    vd_cnt;                 /* Number of associated aux entries */vd_cnt785,40842
        Elf64_Word    vd_hash;                /* Version name hash value */vd_hash786,40927
        Elf64_Word    vd_aux;                 /* Offset in bytes to verdaux array */vd_aux787,41003
        Elf64_Word    vd_next;                /* Offset in bytes to next verdefvd_next788,41088
} Elf64_Verdef;Elf64_Verdef790,41220
#define VER_DEF_NONE VER_DEF_NONE794,41293
#define VER_DEF_CURRENT VER_DEF_CURRENT795,41350
#define VER_DEF_NUM VER_DEF_NUM796,41412
#define VER_FLG_BASE VER_FLG_BASE799,41542
#define VER_FLG_WEAK VER_FLG_WEAK800,41622
#define VER_NDX_LOCAL VER_NDX_LOCAL803,41728
#define VER_NDX_GLOBAL VER_NDX_GLOBAL804,41792
#define VER_NDX_LORESERVE VER_NDX_LORESERVE805,41857
#define VER_NDX_ELIMINATE VER_NDX_ELIMINATE806,41935
        Elf32_Word    vda_name;               /* Version or dependency names */vda_name811,42068
        Elf32_Word    vda_next;               /* Offset in bytes to next verdauxvda_next812,42148
} Elf32_Verdaux;Elf32_Verdaux814,42281
        Elf64_Word    vda_name;               /* Version or dependency names */vda_name817,42316
        Elf64_Word    vda_next;               /* Offset in bytes to next verdauxvda_next818,42396
} Elf64_Verdaux;Elf64_Verdaux820,42529
        Elf32_Half    vn_version;             /* Version of structure */vn_version826,42601
        Elf32_Half    vn_cnt;                 /* Number of associated aux entries */vn_cnt827,42674
        Elf32_Word    vn_file;                /* Offset of filename for thisvn_file828,42759
        Elf32_Word    vn_aux;                 /* Offset in bytes to vernaux array */vn_aux830,42893
        Elf32_Word    vn_next;                /* Offset in bytes to next verneedvn_next831,42978
} Elf32_Verneed;Elf32_Verneed833,43111
        Elf64_Half    vn_version;             /* Version of structure */vn_version836,43146
        Elf64_Half    vn_cnt;                 /* Number of associated aux entries */vn_cnt837,43219
        Elf64_Word    vn_file;                /* Offset of filename for thisvn_file838,43304
        Elf64_Word    vn_aux;                 /* Offset in bytes to vernaux array */vn_aux840,43438
        Elf64_Word    vn_next;                /* Offset in bytes to next verneedvn_next841,43523
} Elf64_Verneed;Elf64_Verneed843,43656
#define VER_NEED_NONE VER_NEED_NONE847,43730
#define VER_NEED_CURRENT VER_NEED_CURRENT848,43787
#define VER_NEED_NUM VER_NEED_NUM849,43849
        Elf32_Word    vna_hash;               /* Hash value of dependency name */vna_hash854,43980
        Elf32_Half    vna_flags;              /* Dependency specific information */vna_flags855,44062
        Elf32_Half    vna_other;              /* Unused */vna_other856,44146
        Elf32_Word    vna_name;               /* Dependency name string offset */vna_name857,44205
        Elf32_Word    vna_next;               /* Offset in bytes to next vernauxvna_next858,44287
} Elf32_Vernaux;Elf32_Vernaux860,44420
        Elf64_Word    vna_hash;               /* Hash value of dependency name */vna_hash863,44455
        Elf64_Half    vna_flags;              /* Dependency specific information */vna_flags864,44537
        Elf64_Half    vna_other;              /* Unused */vna_other865,44621
        Elf64_Word    vna_name;               /* Dependency name string offset */vna_name866,44680
        Elf64_Word    vna_next;               /* Offset in bytes to next vernauxvna_next867,44762
} Elf64_Vernaux;Elf64_Vernaux869,44895
#define VER_FLG_WEAK VER_FLG_WEAK873,44949
        int a_type;                   /* Entry type */a_type886,45465
                long int a_val;           /* Integer value */a_val888,45536
                void *a_ptr;              /* Pointer value */a_ptr889,45598
                void (*a_fcn)(void);      /* Function pointer value */a_fcn890,45660
        } a_un;a_un891,45731
} Elf32_auxv_t;Elf32_auxv_t892,45747
        long int a_type;              /* Entry type */a_type895,45781
                long int a_val;           /* Integer value */a_val897,45852
                void *a_ptr;              /* Pointer value */a_ptr898,45914
                void (*a_fcn)(void);      /* Function pointer value */a_fcn899,45976
        } a_un;a_un900,46047
} Elf64_auxv_t;Elf64_auxv_t901,46063
#define AT_NULL AT_NULL905,46126
#define AT_IGNORE AT_IGNORE906,46186
#define AT_EXECFD AT_EXECFD907,46256
#define AT_PHDR AT_PHDR908,46329
#define AT_PHENT AT_PHENT909,46403
#define AT_PHNUM AT_PHNUM910,46478
#define AT_PAGESZ AT_PAGESZ911,46550
#define AT_BASE AT_BASE912,46613
#define AT_FLAGS AT_FLAGS913,46687
#define AT_ENTRY AT_ENTRY914,46739
#define AT_NOTELF AT_NOTELF915,46808
#define AT_UID AT_UID916,46873
#define AT_EUID AT_EUID917,46928
#define AT_GID AT_GID918,46988
#define AT_EGID AT_EGID919,47043
#define AT_CLKTCK AT_CLKTCK920,47103
#define AT_PLATFORM AT_PLATFORM923,47235
#define AT_HWCAP AT_HWCAP924,47311
#define AT_FPUCW AT_FPUCW929,47511
#define AT_DCACHEBSIZE AT_DCACHEBSIZE932,47608
#define AT_ICACHEBSIZE AT_ICACHEBSIZE933,47678
#define AT_UCACHEBSIZE AT_UCACHEBSIZE934,47755
#define AT_IGNOREPPC AT_IGNOREPPC938,47948
#define AT_SECURE AT_SECURE940,48021
#define AT_SYSINFO AT_SYSINFO944,48189
#define AT_SYSINFO_EHDR AT_SYSINFO_EHDR945,48216
#define AT_L1I_CACHESHAPE AT_L1I_CACHESHAPE949,48377
#define AT_L1D_CACHESHAPE AT_L1D_CACHESHAPE950,48412
#define AT_L2_CACHESHAPE AT_L2_CACHESHAPE951,48447
#define AT_L3_CACHESHAPE AT_L3_CACHESHAPE952,48482
        Elf32_Word n_namesz;                  /* Length of the note's name.  */n_namesz958,48639
        Elf32_Word n_descsz;                  /* Length of the note's descriptor.  */n_descsz959,48719
        Elf32_Word n_type;                    /* Type of the note.  */n_type960,48805
} Elf32_Nhdr;Elf32_Nhdr961,48876
        Elf64_Word n_namesz;                  /* Length of the note's name.  */n_namesz964,48908
        Elf64_Word n_descsz;                  /* Length of the note's descriptor.  */n_descsz965,48988
        Elf64_Word n_type;                    /* Type of the note.  */n_type966,49074
} Elf64_Nhdr;Elf64_Nhdr967,49145
#define ELF_NOTE_SOLARIS ELF_NOTE_SOLARIS972,49249
#define ELF_NOTE_GNU ELF_NOTE_GNU975,49349
#define ELF_NOTE_PAGESIZE_HINT ELF_NOTE_PAGESIZE_HINT981,49507
#define ELF_NOTE_ABI ELF_NOTE_ABI992,49781
#define ELF_NOTE_OS_LINUX ELF_NOTE_OS_LINUX996,49911
#define ELF_NOTE_OS_GNU ELF_NOTE_OS_GNU997,49945
#define ELF_NOTE_OS_SOLARIS2 ELF_NOTE_OS_SOLARIS2998,49979
#define ELF_NOTE_OS_FREEBSD ELF_NOTE_OS_FREEBSD999,50013
        Elf32_Xword m_value;          /* Symbol value.  */m_value1004,50087
        Elf32_Word m_info;            /* Size and index.  */m_info1005,50146
        Elf32_Word m_poffset;         /* Symbol offset.  */m_poffset1006,50207
        Elf32_Half m_repeat;          /* Repeat count.  */m_repeat1007,50267
        Elf32_Half m_stride;          /* Stride info.  */m_stride1008,50326
} Elf32_Move;Elf32_Move1009,50384
        Elf64_Xword m_value;          /* Symbol value.  */m_value1012,50416
        Elf64_Xword m_info;           /* Size and index.  */m_info1013,50475
        Elf64_Xword m_poffset;        /* Symbol offset.  */m_poffset1014,50536
        Elf64_Half m_repeat;          /* Repeat count.  */m_repeat1015,50596
        Elf64_Half m_stride;          /* Stride info.  */m_stride1016,50655
} Elf64_Move;Elf64_Move1017,50713
#define ELF32_M_SYM(ELF32_M_SYM1020,50768
#define ELF32_M_SIZE(ELF32_M_SIZE1021,50814
#define ELF32_M_INFO(ELF32_M_INFO1022,50871
#define ELF64_M_SYM(ELF64_M_SYM1024,50944
#define ELF64_M_SIZE(ELF64_M_SIZE1025,50995
#define ELF64_M_INFO(ELF64_M_INFO1026,51047
#define EF_CPU32 EF_CPU321032,51187
#define R_68K_NONE R_68K_NONE1036,51244
#define R_68K_32 R_68K_321037,51299
#define R_68K_16 R_68K_161038,51360
#define R_68K_8 R_68K_81039,51421
#define R_68K_PC32 R_68K_PC321040,51481
#define R_68K_PC16 R_68K_PC161041,51546
#define R_68K_PC8 R_68K_PC81042,51611
#define R_68K_GOT32 R_68K_GOT321043,51675
#define R_68K_GOT16 R_68K_GOT161044,51750
#define R_68K_GOT8 R_68K_GOT81045,51825
#define R_68K_GOT32O R_68K_GOT32O1046,51899
#define R_68K_GOT16O R_68K_GOT16O1047,51963
#define R_68K_GOT8O R_68K_GOT8O1048,52027
#define R_68K_PLT32 R_68K_PLT321049,52090
#define R_68K_PLT16 R_68K_PLT161050,52167
#define R_68K_PLT8 R_68K_PLT81051,52244
#define R_68K_PLT32O R_68K_PLT32O1052,52320
#define R_68K_PLT16O R_68K_PLT16O1053,52384
#define R_68K_PLT8O R_68K_PLT8O1054,52448
#define R_68K_COPY R_68K_COPY1055,52511
#define R_68K_GLOB_DAT R_68K_GLOB_DAT1056,52580
#define R_68K_JMP_SLOT R_68K_JMP_SLOT1057,52643
#define R_68K_RELATIVE R_68K_RELATIVE1058,52706
#define R_68K_NUM R_68K_NUM1060,52808
#define R_386_NONE R_386_NONE1066,52899
#define R_386_32 R_386_321067,52954
#define R_386_PC32 R_386_PC321068,53015
#define R_386_GOT32 R_386_GOT321069,53080
#define R_386_PLT32 R_386_PLT321070,53143
#define R_386_COPY R_386_COPY1071,53208
#define R_386_GLOB_DAT R_386_GLOB_DAT1072,53277
#define R_386_JMP_SLOT R_386_JMP_SLOT1073,53340
#define R_386_RELATIVE R_386_RELATIVE1074,53403
#define R_386_GOTOFF R_386_GOTOFF1075,53472
#define R_386_GOTPC R_386_GOTPC1076,53539
#define R_386_32PLT R_386_32PLT1077,53618
#define R_386_TLS_TPOFF R_386_TLS_TPOFF1078,53648
#define R_386_TLS_IE R_386_TLS_IE1079,53721
#define R_386_TLS_GOTIE R_386_TLS_GOTIE1081,53816
#define R_386_TLS_LE R_386_TLS_LE1083,53900
#define R_386_TLS_GD R_386_TLS_GD1085,53982
#define R_386_TLS_LDM R_386_TLS_LDM1087,54095
#define R_386_16 R_386_161090,54217
#define R_386_PC16 R_386_PC161091,54247
#define R_386_8 R_386_81092,54277
#define R_386_PC8 R_386_PC81093,54307
#define R_386_TLS_GD_32 R_386_TLS_GD_321094,54337
#define R_386_TLS_GD_PUSH R_386_TLS_GD_PUSH1096,54435
#define R_386_TLS_GD_CALL R_386_TLS_GD_CALL1097,54510
#define R_386_TLS_GD_POP R_386_TLS_GD_POP1099,54596
#define R_386_TLS_LDM_32 R_386_TLS_LDM_321100,54670
#define R_386_TLS_LDM_PUSH R_386_TLS_LDM_PUSH1102,54777
#define R_386_TLS_LDM_CALL R_386_TLS_LDM_CALL1103,54853
#define R_386_TLS_LDM_POP R_386_TLS_LDM_POP1105,54951
#define R_386_TLS_LDO_32 R_386_TLS_LDO_321106,55026
#define R_386_TLS_IE_32 R_386_TLS_IE_321107,55101
#define R_386_TLS_LE_32 R_386_TLS_LE_321109,55193
#define R_386_TLS_DTPMOD32 R_386_TLS_DTPMOD321111,55283
#define R_386_TLS_DTPOFF32 R_386_TLS_DTPOFF321112,55360
#define R_386_TLS_TPOFF32 R_386_TLS_TPOFF321113,55426
#define R_386_NUM R_386_NUM1115,55540
#define STT_SPARC_REGISTER STT_SPARC_REGISTER1121,55679
#define EF_SPARCV9_MM EF_SPARCV9_MM1125,55798
#define EF_SPARCV9_TSO EF_SPARCV9_TSO1126,55832
#define EF_SPARCV9_PSO EF_SPARCV9_PSO1127,55866
#define EF_SPARCV9_RMO EF_SPARCV9_RMO1128,55900
#define EF_SPARC_LEDATA EF_SPARC_LEDATA1129,55934
#define EF_SPARC_EXT_MASK EF_SPARC_EXT_MASK1130,56000
#define EF_SPARC_32PLUS EF_SPARC_32PLUS1131,56041
#define EF_SPARC_SUN_US1 EF_SPARC_SUN_US11132,56109
#define EF_SPARC_HAL_R1 EF_SPARC_HAL_R11133,56183
#define EF_SPARC_SUN_US3 EF_SPARC_SUN_US31134,56248
#define R_SPARC_NONE R_SPARC_NONE1138,56347
#define R_SPARC_8 R_SPARC_81139,56402
#define R_SPARC_16 R_SPARC_161140,56461
#define R_SPARC_32 R_SPARC_321141,56521
#define R_SPARC_DISP8 R_SPARC_DISP81142,56581
#define R_SPARC_DISP16 R_SPARC_DISP161143,56645
#define R_SPARC_DISP32 R_SPARC_DISP321144,56710
#define R_SPARC_WDISP30 R_SPARC_WDISP301145,56775
#define R_SPARC_WDISP22 R_SPARC_WDISP221146,56848
#define R_SPARC_HI22 R_SPARC_HI221147,56921
#define R_SPARC_22 R_SPARC_221148,56979
#define R_SPARC_13 R_SPARC_131149,57039
#define R_SPARC_LO10 R_SPARC_LO101150,57099
#define R_SPARC_GOT10 R_SPARC_GOT101151,57162
#define R_SPARC_GOT13 R_SPARC_GOT131152,57235
#define R_SPARC_GOT22 R_SPARC_GOT221153,57298
#define R_SPARC_PC10 R_SPARC_PC101154,57369
#define R_SPARC_PC22 R_SPARC_PC221155,57444
#define R_SPARC_WPLT30 R_SPARC_WPLT301156,57517
#define R_SPARC_COPY R_SPARC_COPY1157,57594
#define R_SPARC_GLOB_DAT R_SPARC_GLOB_DAT1158,57663
#define R_SPARC_JMP_SLOT R_SPARC_JMP_SLOT1159,57726
#define R_SPARC_RELATIVE R_SPARC_RELATIVE1160,57789
#define R_SPARC_UA32 R_SPARC_UA321161,57858
#define R_SPARC_PLT32 R_SPARC_PLT321165,57964
#define R_SPARC_HIPLT22 R_SPARC_HIPLT221166,58041
#define R_SPARC_LOPLT10 R_SPARC_LOPLT101167,58109
#define R_SPARC_PCPLT32 R_SPARC_PCPLT321168,58182
#define R_SPARC_PCPLT22 R_SPARC_PCPLT221169,58259
#define R_SPARC_PCPLT10 R_SPARC_PCPLT101170,58334
#define R_SPARC_10 R_SPARC_101171,58410
#define R_SPARC_11 R_SPARC_111172,58470
#define R_SPARC_64 R_SPARC_641173,58530
#define R_SPARC_OLO10 R_SPARC_OLO101174,58590
#define R_SPARC_HH22 R_SPARC_HH221175,58670
#define R_SPARC_HM10 R_SPARC_HM101176,58745
#define R_SPARC_LM22 R_SPARC_LM221177,58818
#define R_SPARC_PC_HH22 R_SPARC_PC_HH221178,58890
#define R_SPARC_PC_HM10 R_SPARC_PC_HM101179,58965
#define R_SPARC_PC_LM22 R_SPARC_PC_LM221180,59037
#define R_SPARC_WDISP16 R_SPARC_WDISP161181,59109
#define R_SPARC_WDISP19 R_SPARC_WDISP191182,59182
#define R_SPARC_7 R_SPARC_71183,59255
#define R_SPARC_5 R_SPARC_51184,59314
#define R_SPARC_6 R_SPARC_61185,59373
#define R_SPARC_DISP64 R_SPARC_DISP641186,59432
#define R_SPARC_PLT64 R_SPARC_PLT641187,59497
#define R_SPARC_HIX22 R_SPARC_HIX221188,59574
#define R_SPARC_LOX10 R_SPARC_LOX101189,59645
#define R_SPARC_H44 R_SPARC_H441190,59721
#define R_SPARC_M44 R_SPARC_M441191,59792
#define R_SPARC_L44 R_SPARC_L441192,59862
#define R_SPARC_REGISTER R_SPARC_REGISTER1193,59932
#define R_SPARC_UA64 R_SPARC_UA641194,60000
#define R_SPARC_UA16 R_SPARC_UA161195,60070
#define R_SPARC_TLS_GD_HI22 R_SPARC_TLS_GD_HI221196,60140
#define R_SPARC_TLS_GD_LO10 R_SPARC_TLS_GD_LO101197,60175
#define R_SPARC_TLS_GD_ADD R_SPARC_TLS_GD_ADD1198,60210
#define R_SPARC_TLS_GD_CALL R_SPARC_TLS_GD_CALL1199,60245
#define R_SPARC_TLS_LDM_HI22 R_SPARC_TLS_LDM_HI221200,60280
#define R_SPARC_TLS_LDM_LO10 R_SPARC_TLS_LDM_LO101201,60315
#define R_SPARC_TLS_LDM_ADD R_SPARC_TLS_LDM_ADD1202,60350
#define R_SPARC_TLS_LDM_CALL R_SPARC_TLS_LDM_CALL1203,60385
#define R_SPARC_TLS_LDO_HIX22 R_SPARC_TLS_LDO_HIX221204,60420
#define R_SPARC_TLS_LDO_LOX10 R_SPARC_TLS_LDO_LOX101205,60455
#define R_SPARC_TLS_LDO_ADD R_SPARC_TLS_LDO_ADD1206,60490
#define R_SPARC_TLS_IE_HI22 R_SPARC_TLS_IE_HI221207,60525
#define R_SPARC_TLS_IE_LO10 R_SPARC_TLS_IE_LO101208,60560
#define R_SPARC_TLS_IE_LD R_SPARC_TLS_IE_LD1209,60595
#define R_SPARC_TLS_IE_LDX R_SPARC_TLS_IE_LDX1210,60630
#define R_SPARC_TLS_IE_ADD R_SPARC_TLS_IE_ADD1211,60665
#define R_SPARC_TLS_LE_HIX22 R_SPARC_TLS_LE_HIX221212,60700
#define R_SPARC_TLS_LE_LOX10 R_SPARC_TLS_LE_LOX101213,60735
#define R_SPARC_TLS_DTPMOD32 R_SPARC_TLS_DTPMOD321214,60770
#define R_SPARC_TLS_DTPMOD64 R_SPARC_TLS_DTPMOD641215,60805
#define R_SPARC_TLS_DTPOFF32 R_SPARC_TLS_DTPOFF321216,60840
#define R_SPARC_TLS_DTPOFF64 R_SPARC_TLS_DTPOFF641217,60875
#define R_SPARC_TLS_TPOFF32 R_SPARC_TLS_TPOFF321218,60910
#define R_SPARC_TLS_TPOFF64 R_SPARC_TLS_TPOFF641219,60945
#define R_SPARC_NUM R_SPARC_NUM1221,61013
#define DT_SPARC_REGISTER DT_SPARC_REGISTER1225,61107
#define DT_SPARC_NUM DT_SPARC_NUM1226,61144
#define HWCAP_SPARC_FLUSH HWCAP_SPARC_FLUSH1230,61228
#define HWCAP_SPARC_STBAR HWCAP_SPARC_STBAR1231,61304
#define HWCAP_SPARC_SWAP HWCAP_SPARC_SWAP1232,61338
#define HWCAP_SPARC_MULDIV HWCAP_SPARC_MULDIV1233,61372
#define HWCAP_SPARC_V9 HWCAP_SPARC_V91234,61406
#define HWCAP_SPARC_ULTRA3 HWCAP_SPARC_ULTRA31235,61485
#define EF_MIPS_NOREORDER EF_MIPS_NOREORDER1241,61616
#define EF_MIPS_PIC EF_MIPS_PIC1242,61694
#define EF_MIPS_CPIC EF_MIPS_CPIC1243,61758
#define EF_MIPS_XGOT EF_MIPS_XGOT1244,61830
#define EF_MIPS_64BIT_WHIRL EF_MIPS_64BIT_WHIRL1245,61860
#define EF_MIPS_ABI2 EF_MIPS_ABI21246,61891
#define EF_MIPS_ABI_ON32 EF_MIPS_ABI_ON321247,61922
#define EF_MIPS_ARCH EF_MIPS_ARCH1248,61953
#define EF_MIPS_ARCH_1 EF_MIPS_ARCH_11252,62074
#define EF_MIPS_ARCH_2 EF_MIPS_ARCH_21253,62134
#define EF_MIPS_ARCH_3 EF_MIPS_ARCH_31254,62194
#define EF_MIPS_ARCH_4 EF_MIPS_ARCH_41255,62254
#define EF_MIPS_ARCH_5 EF_MIPS_ARCH_51256,62314
#define EF_MIPS_ARCH_32 EF_MIPS_ARCH_321257,62374
#define EF_MIPS_ARCH_64 EF_MIPS_ARCH_641258,62434
#define E_MIPS_ARCH_1 E_MIPS_ARCH_11262,62564
#define E_MIPS_ARCH_2 E_MIPS_ARCH_21263,62624
#define E_MIPS_ARCH_3 E_MIPS_ARCH_31264,62684
#define E_MIPS_ARCH_4 E_MIPS_ARCH_41265,62744
#define E_MIPS_ARCH_5 E_MIPS_ARCH_51266,62804
#define E_MIPS_ARCH_32 E_MIPS_ARCH_321267,62864
#define E_MIPS_ARCH_64 E_MIPS_ARCH_641268,62924
#define SHN_MIPS_ACOMMON SHN_MIPS_ACOMMON1272,63018
#define SHN_MIPS_TEXT SHN_MIPS_TEXT1273,63089
#define SHN_MIPS_DATA SHN_MIPS_DATA1274,63160
#define SHN_MIPS_SCOMMON SHN_MIPS_SCOMMON1275,63231
#define SHN_MIPS_SUNDEFINED SHN_MIPS_SUNDEFINED1276,63298
#define SHT_MIPS_LIBLIST SHT_MIPS_LIBLIST1280,63423
#define SHT_MIPS_MSYM SHT_MIPS_MSYM1281,63499
#define SHT_MIPS_CONFLICT SHT_MIPS_CONFLICT1282,63541
#define SHT_MIPS_GPTAB SHT_MIPS_GPTAB1283,63609
#define SHT_MIPS_UCODE SHT_MIPS_UCODE1284,63680
#define SHT_MIPS_DEBUG SHT_MIPS_DEBUG1285,63760
#define SHT_MIPS_REGINFO SHT_MIPS_REGINFO1286,63840
#define SHT_MIPS_PACKAGE SHT_MIPS_PACKAGE1287,63915
#define SHT_MIPS_PACKSYM SHT_MIPS_PACKSYM1288,63957
#define SHT_MIPS_RELD SHT_MIPS_RELD1289,63999
#define SHT_MIPS_IFACE SHT_MIPS_IFACE1290,64041
#define SHT_MIPS_CONTENT SHT_MIPS_CONTENT1291,64083
#define SHT_MIPS_OPTIONS SHT_MIPS_OPTIONS1292,64125
#define SHT_MIPS_SHDR SHT_MIPS_SHDR1293,64197
#define SHT_MIPS_FDESC SHT_MIPS_FDESC1294,64239
#define SHT_MIPS_EXTSYM SHT_MIPS_EXTSYM1295,64281
#define SHT_MIPS_DENSE SHT_MIPS_DENSE1296,64323
#define SHT_MIPS_PDESC SHT_MIPS_PDESC1297,64365
#define SHT_MIPS_LOCSYM SHT_MIPS_LOCSYM1298,64407
#define SHT_MIPS_AUXSYM SHT_MIPS_AUXSYM1299,64449
#define SHT_MIPS_OPTSYM SHT_MIPS_OPTSYM1300,64491
#define SHT_MIPS_LOCSTR SHT_MIPS_LOCSTR1301,64533
#define SHT_MIPS_LINE SHT_MIPS_LINE1302,64575
#define SHT_MIPS_RFDESC SHT_MIPS_RFDESC1303,64617
#define SHT_MIPS_DELTASYM SHT_MIPS_DELTASYM1304,64659
#define SHT_MIPS_DELTAINST SHT_MIPS_DELTAINST1305,64701
#define SHT_MIPS_DELTACLASS SHT_MIPS_DELTACLASS1306,64743
#define SHT_MIPS_DWARF SHT_MIPS_DWARF1307,64785
#define SHT_MIPS_DELTADECL SHT_MIPS_DELTADECL1308,64863
#define SHT_MIPS_SYMBOL_LIB SHT_MIPS_SYMBOL_LIB1309,64905
#define SHT_MIPS_EVENTS SHT_MIPS_EVENTS1310,64947
#define SHT_MIPS_TRANSLATE SHT_MIPS_TRANSLATE1311,65011
#define SHT_MIPS_PIXIE SHT_MIPS_PIXIE1312,65053
#define SHT_MIPS_XLATE SHT_MIPS_XLATE1313,65095
#define SHT_MIPS_XLATE_DEBUG SHT_MIPS_XLATE_DEBUG1314,65137
#define SHT_MIPS_WHIRL SHT_MIPS_WHIRL1315,65179
#define SHT_MIPS_EH_REGION SHT_MIPS_EH_REGION1316,65221
#define SHT_MIPS_XLATE_OLD SHT_MIPS_XLATE_OLD1317,65263
#define SHT_MIPS_PDR_EXCEPTION SHT_MIPS_PDR_EXCEPTION1318,65305
#define SHF_MIPS_GPREL SHF_MIPS_GPREL1322,65403
#define SHF_MIPS_MERGE SHF_MIPS_MERGE1323,65482
#define SHF_MIPS_ADDR SHF_MIPS_ADDR1324,65518
#define SHF_MIPS_STRINGS SHF_MIPS_STRINGS1325,65554
#define SHF_MIPS_NOSTRIP SHF_MIPS_NOSTRIP1326,65590
#define SHF_MIPS_LOCAL SHF_MIPS_LOCAL1327,65626
#define SHF_MIPS_NAMES SHF_MIPS_NAMES1328,65662
#define SHF_MIPS_NODUPE SHF_MIPS_NODUPE1329,65698
#define STO_MIPS_DEFAULT STO_MIPS_DEFAULT1335,65803
#define STO_MIPS_INTERNAL STO_MIPS_INTERNAL1336,65847
#define STO_MIPS_HIDDEN STO_MIPS_HIDDEN1337,65891
#define STO_MIPS_PROTECTED STO_MIPS_PROTECTED1338,65935
#define STO_MIPS_SC_ALIGN_UNUSED STO_MIPS_SC_ALIGN_UNUSED1339,65979
#define STB_MIPS_SPLIT_COMMON STB_MIPS_SPLIT_COMMON1342,66068
                Elf32_Word gt_current_g_value;    /* -G value used for compilation */gt_current_g_value1348,66203
                Elf32_Word gt_unused;             /* Not used */gt_unused1349,66289
        } gt_header;                        /* First entry in section */gt_header1350,66354
                Elf32_Word gt_g_value;            /* If this value were used for -G */gt_g_value1352,66444
                Elf32_Word gt_bytes;              /* This many bytes would be used */gt_bytes1353,66531
        } gt_entry;                         /* Subsequent entries in section */gt_entry1354,66617
} Elf32_gptab;Elf32_gptab1355,66697
        Elf32_Word    ri_gprmask;             /* General registers used */ri_gprmask1360,66788
        Elf32_Word    ri_cprmask[4];          /* Coprocessor registers used */ri_cprmask1361,66863
        Elf32_Sword   ri_gp_value;            /* $gp register value */ri_gp_value1362,66942
} Elf32_RegInfo;Elf32_RegInfo1363,67013
        unsigned char kind;           /* Determines interpretation of thekind1368,67108
        unsigned char size;           /* Size of descriptor, including header.  */size1370,67250
        Elf32_Section section;        /* Section header index of section affected,section1371,67333
        Elf32_Word info;              /* Kind-specific information.  */info1373,67477
} Elf_Options;Elf_Options1374,67549
#define ODK_NULL ODK_NULL1378,67613
#define ODK_REGINFO ODK_REGINFO1379,67663
#define ODK_EXCEPTIONS ODK_EXCEPTIONS1380,67730
#define ODK_PAD ODK_PAD1381,67799
#define ODK_HWPATCH ODK_HWPATCH1382,67863
#define ODK_FILL ODK_FILL1383,67932
#define ODK_TAGS ODK_TAGS1384,68012
#define ODK_HWAND ODK_HWAND1385,68092
#define ODK_HWOR ODK_HWOR1386,68172
#define OEX_FPU_MIN OEX_FPU_MIN1390,68322
#define OEX_FPU_MAX OEX_FPU_MAX1391,68390
#define OEX_PAGE0 OEX_PAGE01392,68457
#define OEX_SMM OEX_SMM1393,68522
#define OEX_FPDBUG OEX_FPDBUG1394,68591
#define OEX_PRECISEFP OEX_PRECISEFP1395,68663
#define OEX_DISMISS OEX_DISMISS1396,68698
#define OEX_FPU_INVAL OEX_FPU_INVAL1398,68770
#define OEX_FPU_DIV0 OEX_FPU_DIV01399,68799
#define OEX_FPU_OFLO OEX_FPU_OFLO1400,68828
#define OEX_FPU_UFLO OEX_FPU_UFLO1401,68857
#define OEX_FPU_INEX OEX_FPU_INEX1402,68886
#define OHW_R4KEOP OHW_R4KEOP1406,68982
#define OHW_R8KPFETCH OHW_R8KPFETCH1407,69046
#define OHW_R5KEOP OHW_R5KEOP1408,69116
#define OHW_R5KCVTL OHW_R5KCVTL1409,69180
#define OPAD_PREFIX OPAD_PREFIX1411,69252
#define OPAD_POSTFIX OPAD_POSTFIX1412,69280
#define OPAD_SYMBOL OPAD_SYMBOL1413,69308
        Elf32_Word hwp_flags1;        /* Extra flags.  */hwp_flags11418,69397
        Elf32_Word hwp_flags2;        /* Extra flags.  */hwp_flags21419,69455
} Elf_Options_Hw;Elf_Options_Hw1420,69513
#define OHWA0_R4KEOP_CHECKED OHWA0_R4KEOP_CHECKED1424,69607
#define OHWA1_R4KEOP_CLEAN OHWA1_R4KEOP_CLEAN1425,69650
#define R_MIPS_NONE R_MIPS_NONE1429,69715
#define R_MIPS_16 R_MIPS_161430,69770
#define R_MIPS_32 R_MIPS_321431,69830
#define R_MIPS_REL32 R_MIPS_REL321432,69890
#define R_MIPS_26 R_MIPS_261433,69955
#define R_MIPS_HI16 R_MIPS_HI161434,70023
#define R_MIPS_LO16 R_MIPS_LO161435,70081
#define R_MIPS_GPREL16 R_MIPS_GPREL161436,70138
#define R_MIPS_LITERAL R_MIPS_LITERAL1437,70203
#define R_MIPS_GOT16 R_MIPS_GOT161438,70270
#define R_MIPS_PC16 R_MIPS_PC161439,70333
#define R_MIPS_CALL16 R_MIPS_CALL161440,70398
#define R_MIPS_GPREL32 R_MIPS_GPREL321441,70474
#define R_MIPS_SHIFT5 R_MIPS_SHIFT51443,70540
#define R_MIPS_SHIFT6 R_MIPS_SHIFT61444,70575
#define R_MIPS_64 R_MIPS_641445,70610
#define R_MIPS_GOT_DISP R_MIPS_GOT_DISP1446,70645
#define R_MIPS_GOT_PAGE R_MIPS_GOT_PAGE1447,70680
#define R_MIPS_GOT_OFST R_MIPS_GOT_OFST1448,70715
#define R_MIPS_GOT_HI16 R_MIPS_GOT_HI161449,70750
#define R_MIPS_GOT_LO16 R_MIPS_GOT_LO161450,70785
#define R_MIPS_SUB R_MIPS_SUB1451,70820
#define R_MIPS_INSERT_A R_MIPS_INSERT_A1452,70855
#define R_MIPS_INSERT_B R_MIPS_INSERT_B1453,70890
#define R_MIPS_DELETE R_MIPS_DELETE1454,70925
#define R_MIPS_HIGHER R_MIPS_HIGHER1455,70960
#define R_MIPS_HIGHEST R_MIPS_HIGHEST1456,70995
#define R_MIPS_CALL_HI16 R_MIPS_CALL_HI161457,71030
#define R_MIPS_CALL_LO16 R_MIPS_CALL_LO161458,71065
#define R_MIPS_SCN_DISP R_MIPS_SCN_DISP1459,71100
#define R_MIPS_REL16 R_MIPS_REL161460,71135
#define R_MIPS_ADD_IMMEDIATE R_MIPS_ADD_IMMEDIATE1461,71170
#define R_MIPS_PJUMP R_MIPS_PJUMP1462,71205
#define R_MIPS_RELGOT R_MIPS_RELGOT1463,71240
#define R_MIPS_JALR R_MIPS_JALR1464,71275
#define R_MIPS_NUM R_MIPS_NUM1466,71343
#define PT_MIPS_REGINFO PT_MIPS_REGINFO1470,71432
#define PT_MIPS_RTPROC PT_MIPS_RTPROC1471,71505
#define PT_MIPS_OPTIONS PT_MIPS_OPTIONS1472,71576
#define PF_MIPS_LOCAL PF_MIPS_LOCAL1476,71650
#define DT_MIPS_RLD_VERSION DT_MIPS_RLD_VERSION1480,71737
#define DT_MIPS_TIME_STAMP DT_MIPS_TIME_STAMP1481,71816
#define DT_MIPS_ICHECKSUM DT_MIPS_ICHECKSUM1482,71872
#define DT_MIPS_IVERSION DT_MIPS_IVERSION1483,71927
#define DT_MIPS_FLAGS DT_MIPS_FLAGS1484,72007
#define DT_MIPS_BASE_ADDRESS DT_MIPS_BASE_ADDRESS1485,72059
#define DT_MIPS_MSYM DT_MIPS_MSYM1486,72118
#define DT_MIPS_CONFLICT DT_MIPS_CONFLICT1487,72158
#define DT_MIPS_LIBLIST DT_MIPS_LIBLIST1488,72232
#define DT_MIPS_LOCAL_GOTNO DT_MIPS_LOCAL_GOTNO1489,72305
#define DT_MIPS_CONFLICTNO DT_MIPS_CONFLICTNO1490,72379
#define DT_MIPS_LIBLISTNO DT_MIPS_LIBLISTNO1491,72452
#define DT_MIPS_SYMTABNO DT_MIPS_SYMTABNO1492,72524
#define DT_MIPS_UNREFEXTNO DT_MIPS_UNREFEXTNO1493,72595
#define DT_MIPS_GOTSYM DT_MIPS_GOTSYM1494,72663
#define DT_MIPS_HIPAGENO DT_MIPS_HIPAGENO1495,72735
#define DT_MIPS_RLD_MAP DT_MIPS_RLD_MAP1496,72814
#define DT_MIPS_DELTA_CLASS DT_MIPS_DELTA_CLASS1497,72893
#define DT_MIPS_DELTA_CLASS_NO DT_MIPS_DELTA_CLASS_NO1498,72968
#define DT_MIPS_DELTA_INSTANCE DT_MIPS_DELTA_INSTANCE1500,73062
#define DT_MIPS_DELTA_INSTANCE_NO DT_MIPS_DELTA_INSTANCE_NO1501,73141
#define DT_MIPS_DELTA_RELOC DT_MIPS_DELTA_RELOC1503,73238
#define DT_MIPS_DELTA_RELOC_NO DT_MIPS_DELTA_RELOC_NO1504,73304
#define DT_MIPS_DELTA_SYM DT_MIPS_DELTA_SYM1506,73395
#define DT_MIPS_DELTA_SYM_NO DT_MIPS_DELTA_SYM_NO1508,73489
#define DT_MIPS_DELTA_CLASSSYM DT_MIPS_DELTA_CLASSSYM1510,73576
#define DT_MIPS_DELTA_CLASSSYM_NO DT_MIPS_DELTA_CLASSSYM_NO1512,73672
#define DT_MIPS_CXX_FLAGS DT_MIPS_CXX_FLAGS1514,73777
#define DT_MIPS_PIXIE_INIT DT_MIPS_PIXIE_INIT1515,73857
#define DT_MIPS_SYMBOL_LIB DT_MIPS_SYMBOL_LIB1516,73897
#define DT_MIPS_LOCALPAGE_GOTIDX DT_MIPS_LOCALPAGE_GOTIDX1517,73937
#define DT_MIPS_LOCAL_GOTIDX DT_MIPS_LOCAL_GOTIDX1518,73981
#define DT_MIPS_HIDDEN_GOTIDX DT_MIPS_HIDDEN_GOTIDX1519,74021
#define DT_MIPS_PROTECTED_GOTIDX DT_MIPS_PROTECTED_GOTIDX1520,74062
#define DT_MIPS_OPTIONS DT_MIPS_OPTIONS1521,74106
#define DT_MIPS_INTERFACE DT_MIPS_INTERFACE1522,74174
#define DT_MIPS_DYNSTR_ALIGN DT_MIPS_DYNSTR_ALIGN1523,74244
#define DT_MIPS_INTERFACE_SIZE DT_MIPS_INTERFACE_SIZE1524,74284
#define DT_MIPS_RLD_TEXT_RESOLVE_ADDR DT_MIPS_RLD_TEXT_RESOLVE_ADDR1525,74364
#define DT_MIPS_PERF_SUFFIX DT_MIPS_PERF_SUFFIX1527,74479
#define DT_MIPS_COMPACT_SIZE DT_MIPS_COMPACT_SIZE1529,74594
#define DT_MIPS_GP_VALUE DT_MIPS_GP_VALUE1530,74674
#define DT_MIPS_AUX_DYNAMIC DT_MIPS_AUX_DYNAMIC1531,74744
#define DT_MIPS_NUM DT_MIPS_NUM1532,74816
#define RHF_NONE RHF_NONE1536,74907
#define RHF_QUICKSTART RHF_QUICKSTART1537,74970
#define RHF_NOTPOT RHF_NOTPOT1538,75039
#define RHF_NO_LIBRARY_REPLACEMENT RHF_NO_LIBRARY_REPLACEMENT1539,75118
#define RHF_NO_MOVE RHF_NO_MOVE1540,75195
#define RHF_SGI_ONLY RHF_SGI_ONLY1541,75239
#define RHF_GUARANTEE_INIT RHF_GUARANTEE_INIT1542,75283
#define RHF_DELTA_C_PLUS_PLUS RHF_DELTA_C_PLUS_PLUS1543,75327
#define RHF_GUARANTEE_START_INIT RHF_GUARANTEE_START_INIT1544,75371
#define RHF_PIXIE RHF_PIXIE1545,75415
#define RHF_DEFAULT_DELAY_LOAD RHF_DEFAULT_DELAY_LOAD1546,75459
#define RHF_REQUICKSTART RHF_REQUICKSTART1547,75503
#define RHF_REQUICKSTARTED RHF_REQUICKSTARTED1548,75548
#define RHF_CORD RHF_CORD1549,75593
#define RHF_NO_UNRES_UNDEF RHF_NO_UNRES_UNDEF1550,75638
#define RHF_RLD_ORDER_SAFE RHF_RLD_ORDER_SAFE1551,75683
                Elf32_Word l_name;            /* Name (string table index) */l_name1556,75822
                Elf32_Word l_time_stamp;      /* Timestamp */l_time_stamp1557,75900
                Elf32_Word l_checksum;        /* Checksum */l_checksum1558,75962
                Elf32_Word l_version;         /* Interface version */l_version1559,76023
                Elf32_Word l_flags;           /* Flags */l_flags1560,76093
        } Elf32_Lib;Elf32_Lib1561,76151
        Elf64_Word l_name;            /* Name (string table index) */l_name1564,76190
        Elf64_Word l_time_stamp;      /* Timestamp */l_time_stamp1565,76260
        Elf64_Word l_checksum;        /* Checksum */l_checksum1566,76314
        Elf64_Word l_version;         /* Interface version */l_version1567,76367
        Elf64_Word l_flags;           /* Flags */l_flags1568,76429
} Elf64_Lib;Elf64_Lib1569,76479
#define LL_NONE LL_NONE1574,76528
#define LL_EXACT_MATCH LL_EXACT_MATCH1575,76556
#define LL_IGNORE_INT_VER LL_IGNORE_INT_VER1576,76622
#define LL_REQUIRE_MINOR LL_REQUIRE_MINOR1577,76693
#define LL_EXPORTS LL_EXPORTS1578,76728
#define LL_DELAY_LOAD LL_DELAY_LOAD1579,76763
#define LL_DELTA LL_DELTA1580,76798
typedef Elf32_Addr Elf32_Conflict;Elf32_Conflict1584,76895
#define EF_PARISC_TRAPNIL EF_PARISC_TRAPNIL1591,77021
#define EF_PARISC_EXT EF_PARISC_EXT1592,77101
#define EF_PARISC_LSB EF_PARISC_LSB1593,77181
#define EF_PARISC_WIDE EF_PARISC_WIDE1594,77261
#define EF_PARISC_NO_KABP EF_PARISC_NO_KABP1595,77338
#define EF_PARISC_LAZYSWAP EF_PARISC_LAZYSWAP1597,77426
#define EF_PARISC_ARCH EF_PARISC_ARCH1598,77497
#define EFA_PARISC_1_0 EFA_PARISC_1_01602,77629
#define EFA_PARISC_1_1 EFA_PARISC_1_11603,77703
#define EFA_PARISC_2_0 EFA_PARISC_2_01604,77777
#define SHN_PARISC_ANSI_COMMON SHN_PARISC_ANSI_COMMON1608,77888
#define SHN_PARISC_HUGE_COMMON SHN_PARISC_HUGE_COMMON1610,77989
#define SHT_PARISC_EXT SHT_PARISC_EXT1614,78123
#define SHT_PARISC_UNWIND SHT_PARISC_UNWIND1615,78203
#define SHT_PARISC_DOC SHT_PARISC_DOC1616,78273
#define SHF_PARISC_SHORT SHF_PARISC_SHORT1620,78409
#define SHF_PARISC_HUGE SHF_PARISC_HUGE1621,78489
#define SHF_PARISC_SBP SHF_PARISC_SBP1622,78560
#define STT_PARISC_MILLICODE STT_PARISC_MILLICODE1626,78709
#define STT_HP_OPAQUE STT_HP_OPAQUE1628,78789
#define STT_HP_STUB STT_HP_STUB1629,78838
#define R_PARISC_NONE R_PARISC_NONE1633,78909
#define R_PARISC_DIR32 R_PARISC_DIR321634,78966
#define R_PARISC_DIR21L R_PARISC_DIR21L1635,79038
#define R_PARISC_DIR17R R_PARISC_DIR17R1636,79115
#define R_PARISC_DIR17F R_PARISC_DIR17F1637,79193
#define R_PARISC_DIR14R R_PARISC_DIR14R1638,79265
#define R_PARISC_PCREL32 R_PARISC_PCREL321639,79343
#define R_PARISC_PCREL21L R_PARISC_PCREL21L1640,79411
#define R_PARISC_PCREL17R R_PARISC_PCREL17R1641,79488
#define R_PARISC_PCREL17F R_PARISC_PCREL17F1642,79566
#define R_PARISC_PCREL14R R_PARISC_PCREL14R1643,79638
#define R_PARISC_DPREL21L R_PARISC_DPREL21L1644,79716
#define R_PARISC_DPREL14R R_PARISC_DPREL14R1645,79793
#define R_PARISC_GPREL21L R_PARISC_GPREL21L1646,79871
#define R_PARISC_GPREL14R R_PARISC_GPREL14R1647,79945
#define R_PARISC_LTOFF21L R_PARISC_LTOFF21L1648,80020
#define R_PARISC_LTOFF14R R_PARISC_LTOFF14R1649,80094
#define R_PARISC_SECREL32 R_PARISC_SECREL321650,80169
#define R_PARISC_SEGBASE R_PARISC_SEGBASE1651,80246
#define R_PARISC_SEGREL32 R_PARISC_SEGREL321652,80326
#define R_PARISC_PLTOFF21L R_PARISC_PLTOFF21L1653,80403
#define R_PARISC_PLTOFF14R R_PARISC_PLTOFF14R1654,80482
#define R_PARISC_LTOFF_FPTR32 R_PARISC_LTOFF_FPTR321655,80562
#define R_PARISC_LTOFF_FPTR21L R_PARISC_LTOFF_FPTR21L1656,80642
#define R_PARISC_LTOFF_FPTR14R R_PARISC_LTOFF_FPTR14R1657,80719
#define R_PARISC_FPTR64 R_PARISC_FPTR641658,80797
#define R_PARISC_PLABEL32 R_PARISC_PLABEL321659,80870
#define R_PARISC_PLABEL21L R_PARISC_PLABEL21L1660,80943
#define R_PARISC_PLABEL14R R_PARISC_PLABEL14R1661,81015
#define R_PARISC_PCREL64 R_PARISC_PCREL641662,81087
#define R_PARISC_PCREL22F R_PARISC_PCREL22F1663,81159
#define R_PARISC_PCREL14WR R_PARISC_PCREL14WR1664,81231
#define R_PARISC_PCREL14DR R_PARISC_PCREL14DR1665,81310
#define R_PARISC_PCREL16F R_PARISC_PCREL16F1666,81389
#define R_PARISC_PCREL16WF R_PARISC_PCREL16WF1667,81461
#define R_PARISC_PCREL16DF R_PARISC_PCREL16DF1668,81533
#define R_PARISC_DIR64 R_PARISC_DIR641669,81605
#define R_PARISC_DIR14WR R_PARISC_DIR14WR1670,81677
#define R_PARISC_DIR14DR R_PARISC_DIR14DR1671,81749
#define R_PARISC_DIR16F R_PARISC_DIR16F1672,81821
#define R_PARISC_DIR16WF R_PARISC_DIR16WF1673,81893
#define R_PARISC_DIR16DF R_PARISC_DIR16DF1674,81965
#define R_PARISC_GPREL64 R_PARISC_GPREL641675,82037
#define R_PARISC_GPREL14WR R_PARISC_GPREL14WR1676,82112
#define R_PARISC_GPREL14DR R_PARISC_GPREL14DR1677,82191
#define R_PARISC_GPREL16F R_PARISC_GPREL16F1678,82270
#define R_PARISC_GPREL16WF R_PARISC_GPREL16WF1679,82342
#define R_PARISC_GPREL16DF R_PARISC_GPREL16DF1680,82414
#define R_PARISC_LTOFF64 R_PARISC_LTOFF641681,82486
#define R_PARISC_LTOFF14WR R_PARISC_LTOFF14WR1682,82558
#define R_PARISC_LTOFF14DR R_PARISC_LTOFF14DR1683,82637
#define R_PARISC_LTOFF16F R_PARISC_LTOFF16F1684,82716
#define R_PARISC_LTOFF16WF R_PARISC_LTOFF16WF1685,82788
#define R_PARISC_LTOFF16DF R_PARISC_LTOFF16DF1686,82860
#define R_PARISC_SECREL64 R_PARISC_SECREL641687,82932
#define R_PARISC_SEGREL64 R_PARISC_SEGREL641688,83009
#define R_PARISC_PLTOFF14WR R_PARISC_PLTOFF14WR1689,83086
#define R_PARISC_PLTOFF14DR R_PARISC_PLTOFF14DR1690,83166
#define R_PARISC_PLTOFF16F R_PARISC_PLTOFF16F1691,83246
#define R_PARISC_PLTOFF16WF R_PARISC_PLTOFF16WF1692,83318
#define R_PARISC_PLTOFF16DF R_PARISC_PLTOFF16DF1693,83391
#define R_PARISC_LTOFF_FPTR64 R_PARISC_LTOFF_FPTR641694,83464
#define R_PARISC_LTOFF_FPTR14WR R_PARISC_LTOFF_FPTR14WR1695,83541
#define R_PARISC_LTOFF_FPTR14DR R_PARISC_LTOFF_FPTR14DR1696,83621
#define R_PARISC_LTOFF_FPTR16F R_PARISC_LTOFF_FPTR16F1697,83701
#define R_PARISC_LTOFF_FPTR16WF R_PARISC_LTOFF_FPTR16WF1698,83778
#define R_PARISC_LTOFF_FPTR16DF R_PARISC_LTOFF_FPTR16DF1699,83855
#define R_PARISC_LORESERVE R_PARISC_LORESERVE1700,83932
#define R_PARISC_COPY R_PARISC_COPY1701,83968
#define R_PARISC_IPLT R_PARISC_IPLT1702,84032
#define R_PARISC_EPLT R_PARISC_EPLT1703,84106
#define R_PARISC_TPREL32 R_PARISC_TPREL321704,84180
#define R_PARISC_TPREL21L R_PARISC_TPREL21L1705,84252
#define R_PARISC_TPREL14R R_PARISC_TPREL14R1706,84330
#define R_PARISC_LTOFF_TP21L R_PARISC_LTOFF_TP21L1707,84409
#define R_PARISC_LTOFF_TP14R R_PARISC_LTOFF_TP14R1708,84489
#define R_PARISC_LTOFF_TP14F R_PARISC_LTOFF_TP14F1709,84569
#define R_PARISC_TPREL64 R_PARISC_TPREL641710,84644
#define R_PARISC_TPREL14WR R_PARISC_TPREL14WR1711,84716
#define R_PARISC_TPREL14DR R_PARISC_TPREL14DR1712,84795
#define R_PARISC_TPREL16F R_PARISC_TPREL16F1713,84874
#define R_PARISC_TPREL16WF R_PARISC_TPREL16WF1714,84946
#define R_PARISC_TPREL16DF R_PARISC_TPREL16DF1715,85018
#define R_PARISC_LTOFF_TP64 R_PARISC_LTOFF_TP641716,85090
#define R_PARISC_LTOFF_TP14WR R_PARISC_LTOFF_TP14WR1717,85165
#define R_PARISC_LTOFF_TP14DR R_PARISC_LTOFF_TP14DR1718,85245
#define R_PARISC_LTOFF_TP16F R_PARISC_LTOFF_TP16F1719,85325
#define R_PARISC_LTOFF_TP16WF R_PARISC_LTOFF_TP16WF1720,85400
#define R_PARISC_LTOFF_TP16DF R_PARISC_LTOFF_TP16DF1721,85475
#define R_PARISC_HIRESERVE R_PARISC_HIRESERVE1722,85550
#define PT_HP_TLS PT_HP_TLS1726,85651
#define PT_HP_CORE_NONE PT_HP_CORE_NONE1727,85699
#define PT_HP_CORE_VERSION PT_HP_CORE_VERSION1728,85747
#define PT_HP_CORE_KERNEL PT_HP_CORE_KERNEL1729,85795
#define PT_HP_CORE_COMM PT_HP_CORE_COMM1730,85843
#define PT_HP_CORE_PROC PT_HP_CORE_PROC1731,85891
#define PT_HP_CORE_LOADABLE PT_HP_CORE_LOADABLE1732,85939
#define PT_HP_CORE_STACK PT_HP_CORE_STACK1733,85987
#define PT_HP_CORE_SHM PT_HP_CORE_SHM1734,86035
#define PT_HP_CORE_MMF PT_HP_CORE_MMF1735,86083
#define PT_HP_PARALLEL PT_HP_PARALLEL1736,86131
#define PT_HP_FASTBIND PT_HP_FASTBIND1737,86180
#define PT_HP_OPT_ANNOT PT_HP_OPT_ANNOT1738,86229
#define PT_HP_HSL_ANNOT PT_HP_HSL_ANNOT1739,86278
#define PT_HP_STACK PT_HP_STACK1740,86327
#define PT_PARISC_ARCHEXT PT_PARISC_ARCHEXT1742,86377
#define PT_PARISC_UNWIND PT_PARISC_UNWIND1743,86420
#define PF_PARISC_SBP PF_PARISC_SBP1747,86529
#define PF_HP_PAGE_SIZE PF_HP_PAGE_SIZE1749,86573
#define PF_HP_FAR_SHARED PF_HP_FAR_SHARED1750,86616
#define PF_HP_NEAR_SHARED PF_HP_NEAR_SHARED1751,86659
#define PF_HP_CODE PF_HP_CODE1752,86702
#define PF_HP_MODIFY PF_HP_MODIFY1753,86745
#define PF_HP_LAZYSWAP PF_HP_LAZYSWAP1754,86788
#define PF_HP_SBP PF_HP_SBP1755,86831
#define EF_ALPHA_32BIT EF_ALPHA_32BIT1762,86966
#define EF_ALPHA_CANRELAX EF_ALPHA_CANRELAX1763,87042
#define SHT_ALPHA_DEBUG SHT_ALPHA_DEBUG1768,87244
#define SHT_ALPHA_REGINFO SHT_ALPHA_REGINFO1769,87287
#define SHF_ALPHA_GPREL SHF_ALPHA_GPREL1773,87386
#define STO_ALPHA_NOPV STO_ALPHA_NOPV1776,87483
#define STO_ALPHA_STD_GPLOAD STO_ALPHA_STD_GPLOAD1777,87546
#define R_ALPHA_NONE R_ALPHA_NONE1781,87647
#define R_ALPHA_REFLONG R_ALPHA_REFLONG1782,87702
#define R_ALPHA_REFQUAD R_ALPHA_REFQUAD1783,87762
#define R_ALPHA_GPREL32 R_ALPHA_GPREL321784,87822
#define R_ALPHA_LITERAL R_ALPHA_LITERAL1785,87887
#define R_ALPHA_LITUSE R_ALPHA_LITUSE1786,87967
#define R_ALPHA_GPDISP R_ALPHA_GPDISP1787,88043
#define R_ALPHA_BRADDR R_ALPHA_BRADDR1788,88112
#define R_ALPHA_HINT R_ALPHA_HINT1789,88187
#define R_ALPHA_SREL16 R_ALPHA_SREL161790,88262
#define R_ALPHA_SREL32 R_ALPHA_SREL321791,88327
#define R_ALPHA_SREL64 R_ALPHA_SREL641792,88392
#define R_ALPHA_GPRELHIGH R_ALPHA_GPRELHIGH1793,88457
#define R_ALPHA_GPRELLOW R_ALPHA_GPRELLOW1794,88536
#define R_ALPHA_GPREL16 R_ALPHA_GPREL161795,88614
#define R_ALPHA_COPY R_ALPHA_COPY1796,88679
#define R_ALPHA_GLOB_DAT R_ALPHA_GLOB_DAT1797,88748
#define R_ALPHA_JMP_SLOT R_ALPHA_JMP_SLOT1798,88811
#define R_ALPHA_RELATIVE R_ALPHA_RELATIVE1799,88874
#define R_ALPHA_TLS_GD_HI R_ALPHA_TLS_GD_HI1800,88943
#define R_ALPHA_TLSGD R_ALPHA_TLSGD1801,88978
#define R_ALPHA_TLS_LDM R_ALPHA_TLS_LDM1802,89013
#define R_ALPHA_DTPMOD64 R_ALPHA_DTPMOD641803,89048
#define R_ALPHA_GOTDTPREL R_ALPHA_GOTDTPREL1804,89083
#define R_ALPHA_DTPREL64 R_ALPHA_DTPREL641805,89118
#define R_ALPHA_DTPRELHI R_ALPHA_DTPRELHI1806,89153
#define R_ALPHA_DTPRELLO R_ALPHA_DTPRELLO1807,89188
#define R_ALPHA_DTPREL16 R_ALPHA_DTPREL161808,89223
#define R_ALPHA_GOTTPREL R_ALPHA_GOTTPREL1809,89258
#define R_ALPHA_TPREL64 R_ALPHA_TPREL641810,89293
#define R_ALPHA_TPRELHI R_ALPHA_TPRELHI1811,89328
#define R_ALPHA_TPRELLO R_ALPHA_TPRELLO1812,89363
#define R_ALPHA_TPREL16 R_ALPHA_TPREL161813,89398
#define R_ALPHA_NUM R_ALPHA_NUM1815,89466
#define LITUSE_ALPHA_ADDR LITUSE_ALPHA_ADDR1818,89555
#define LITUSE_ALPHA_BASE LITUSE_ALPHA_BASE1819,89589
#define LITUSE_ALPHA_BYTOFF LITUSE_ALPHA_BYTOFF1820,89623
#define LITUSE_ALPHA_JSR LITUSE_ALPHA_JSR1821,89657
#define LITUSE_ALPHA_TLS_GD LITUSE_ALPHA_TLS_GD1822,89691
#define LITUSE_ALPHA_TLS_LDM LITUSE_ALPHA_TLS_LDM1823,89725
#define EF_PPC_EMB EF_PPC_EMB1829,89839
#define EF_PPC_RELOCATABLE EF_PPC_RELOCATABLE1832,89946
#define EF_PPC_RELOCATABLE_LIB EF_PPC_RELOCATABLE_LIB1833,90026
#define R_PPC_NONE R_PPC_NONE1837,90158
#define R_PPC_ADDR32 R_PPC_ADDR321838,90192
#define R_PPC_ADDR24 R_PPC_ADDR241839,90261
#define R_PPC_ADDR16 R_PPC_ADDR161840,90339
#define R_PPC_ADDR16_LO R_PPC_ADDR16_LO1841,90408
#define R_PPC_ADDR16_HI R_PPC_ADDR16_HI1842,90486
#define R_PPC_ADDR16_HA R_PPC_ADDR16_HA1843,90563
#define R_PPC_ADDR14 R_PPC_ADDR141844,90629
#define R_PPC_ADDR14_BRTAKEN R_PPC_ADDR14_BRTAKEN1845,90705
#define R_PPC_ADDR14_BRNTAKEN R_PPC_ADDR14_BRNTAKEN1846,90739
#define R_PPC_REL24 R_PPC_REL241847,90773
#define R_PPC_REL14 R_PPC_REL141848,90838
#define R_PPC_REL14_BRTAKEN R_PPC_REL14_BRTAKEN1849,90903
#define R_PPC_REL14_BRNTAKEN R_PPC_REL14_BRNTAKEN1850,90938
#define R_PPC_GOT16 R_PPC_GOT161851,90973
#define R_PPC_GOT16_LO R_PPC_GOT16_LO1852,91008
#define R_PPC_GOT16_HI R_PPC_GOT16_HI1853,91043
#define R_PPC_GOT16_HA R_PPC_GOT16_HA1854,91078
#define R_PPC_PLTREL24 R_PPC_PLTREL241855,91113
#define R_PPC_COPY R_PPC_COPY1856,91148
#define R_PPC_GLOB_DAT R_PPC_GLOB_DAT1857,91183
#define R_PPC_JMP_SLOT R_PPC_JMP_SLOT1858,91218
#define R_PPC_RELATIVE R_PPC_RELATIVE1859,91253
#define R_PPC_LOCAL24PC R_PPC_LOCAL24PC1860,91288
#define R_PPC_UADDR32 R_PPC_UADDR321861,91323
#define R_PPC_UADDR16 R_PPC_UADDR161862,91358
#define R_PPC_REL32 R_PPC_REL321863,91393
#define R_PPC_PLT32 R_PPC_PLT321864,91428
#define R_PPC_PLTREL32 R_PPC_PLTREL321865,91463
#define R_PPC_PLT16_LO R_PPC_PLT16_LO1866,91498
#define R_PPC_PLT16_HI R_PPC_PLT16_HI1867,91533
#define R_PPC_PLT16_HA R_PPC_PLT16_HA1868,91568
#define R_PPC_SDAREL16 R_PPC_SDAREL161869,91603
#define R_PPC_SECTOFF R_PPC_SECTOFF1870,91638
#define R_PPC_SECTOFF_LO R_PPC_SECTOFF_LO1871,91673
#define R_PPC_SECTOFF_HI R_PPC_SECTOFF_HI1872,91708
#define R_PPC_SECTOFF_HA R_PPC_SECTOFF_HA1873,91743
#define R_PPC_TLS R_PPC_TLS1876,91838
#define R_PPC_DTPMOD32 R_PPC_DTPMOD321877,91903
#define R_PPC_TPREL16 R_PPC_TPREL161878,91971
#define R_PPC_TPREL16_LO R_PPC_TPREL16_LO1879,92038
#define R_PPC_TPREL16_HI R_PPC_TPREL16_HI1880,92107
#define R_PPC_TPREL16_HA R_PPC_TPREL16_HA1881,92176
#define R_PPC_TPREL32 R_PPC_TPREL321882,92246
#define R_PPC_DTPREL16 R_PPC_DTPREL161883,92313
#define R_PPC_DTPREL16_LO R_PPC_DTPREL16_LO1884,92381
#define R_PPC_DTPREL16_HI R_PPC_DTPREL16_HI1885,92451
#define R_PPC_DTPREL16_HA R_PPC_DTPREL16_HA1886,92521
#define R_PPC_DTPREL32 R_PPC_DTPREL321887,92592
#define R_PPC_GOT_TLSGD16 R_PPC_GOT_TLSGD161888,92660
#define R_PPC_GOT_TLSGD16_LO R_PPC_GOT_TLSGD16_LO1889,92731
#define R_PPC_GOT_TLSGD16_HI R_PPC_GOT_TLSGD16_HI1890,92804
#define R_PPC_GOT_TLSGD16_HA R_PPC_GOT_TLSGD16_HA1891,92877
#define R_PPC_GOT_TLSLD16 R_PPC_GOT_TLSLD161892,92951
#define R_PPC_GOT_TLSLD16_LO R_PPC_GOT_TLSLD16_LO1893,93022
#define R_PPC_GOT_TLSLD16_HI R_PPC_GOT_TLSLD16_HI1894,93095
#define R_PPC_GOT_TLSLD16_HA R_PPC_GOT_TLSLD16_HA1895,93168
#define R_PPC_GOT_TPREL16 R_PPC_GOT_TPREL161896,93242
#define R_PPC_GOT_TPREL16_LO R_PPC_GOT_TPREL16_LO1897,93313
#define R_PPC_GOT_TPREL16_HI R_PPC_GOT_TPREL16_HI1898,93386
#define R_PPC_GOT_TPREL16_HA R_PPC_GOT_TPREL16_HA1899,93459
#define R_PPC_GOT_DTPREL16 R_PPC_GOT_DTPREL161900,93533
#define R_PPC_GOT_DTPREL16_LO R_PPC_GOT_DTPREL16_LO1901,93605
#define R_PPC_GOT_DTPREL16_HI R_PPC_GOT_DTPREL16_HI1902,93679
#define R_PPC_GOT_DTPREL16_HA R_PPC_GOT_DTPREL16_HA1903,93753
#define R_PPC_NUM R_PPC_NUM1906,93862
#define R_PPC_EMB_NADDR32 R_PPC_EMB_NADDR321910,93993
#define R_PPC_EMB_NADDR16 R_PPC_EMB_NADDR161911,94029
#define R_PPC_EMB_NADDR16_LO R_PPC_EMB_NADDR16_LO1912,94065
#define R_PPC_EMB_NADDR16_HI R_PPC_EMB_NADDR16_HI1913,94101
#define R_PPC_EMB_NADDR16_HA R_PPC_EMB_NADDR16_HA1914,94137
#define R_PPC_EMB_SDAI16 R_PPC_EMB_SDAI161915,94173
#define R_PPC_EMB_SDA2I16 R_PPC_EMB_SDA2I161916,94209
#define R_PPC_EMB_SDA2REL R_PPC_EMB_SDA2REL1917,94245
#define R_PPC_EMB_SDA21 R_PPC_EMB_SDA211918,94281
#define R_PPC_EMB_MRKREF R_PPC_EMB_MRKREF1919,94348
#define R_PPC_EMB_RELSEC16 R_PPC_EMB_RELSEC161920,94384
#define R_PPC_EMB_RELST_LO R_PPC_EMB_RELST_LO1921,94420
#define R_PPC_EMB_RELST_HI R_PPC_EMB_RELST_HI1922,94456
#define R_PPC_EMB_RELST_HA R_PPC_EMB_RELST_HA1923,94492
#define R_PPC_EMB_BIT_FLD R_PPC_EMB_BIT_FLD1924,94528
#define R_PPC_EMB_RELSDA R_PPC_EMB_RELSDA1925,94564
#define R_PPC_DIAB_SDA21_LO R_PPC_DIAB_SDA21_LO1928,94671
#define R_PPC_DIAB_SDA21_HI R_PPC_DIAB_SDA21_HI1929,94750
#define R_PPC_DIAB_SDA21_HA R_PPC_DIAB_SDA21_HA1930,94828
#define R_PPC_DIAB_RELSDA_LO R_PPC_DIAB_RELSDA_LO1931,94907
#define R_PPC_DIAB_RELSDA_HI R_PPC_DIAB_RELSDA_HI1932,94987
#define R_PPC_DIAB_RELSDA_HA R_PPC_DIAB_RELSDA_HA1933,95066
#define R_PPC_TOC16 R_PPC_TOC161937,95259
#define R_PPC64_NONE R_PPC64_NONE1941,95345
#define R_PPC64_ADDR32 R_PPC64_ADDR321942,95388
#define R_PPC64_ADDR24 R_PPC64_ADDR241943,95462
#define R_PPC64_ADDR16 R_PPC64_ADDR161944,95541
#define R_PPC64_ADDR16_LO R_PPC64_ADDR16_LO1945,95615
#define R_PPC64_ADDR16_HI R_PPC64_ADDR16_HI1946,95693
#define R_PPC64_ADDR16_HA R_PPC64_ADDR16_HA1947,95771
#define R_PPC64_ADDR14 R_PPC64_ADDR141948,95848
#define R_PPC64_ADDR14_BRTAKEN R_PPC64_ADDR14_BRTAKEN1949,95927
#define R_PPC64_ADDR14_BRNTAKEN R_PPC64_ADDR14_BRNTAKEN1950,95980
#define R_PPC64_REL24 R_PPC64_REL241951,96034
#define R_PPC64_REL14 R_PPC64_REL141952,96113
#define R_PPC64_REL14_BRTAKEN R_PPC64_REL14_BRTAKEN1953,96182
#define R_PPC64_REL14_BRNTAKEN R_PPC64_REL14_BRNTAKEN1954,96234
#define R_PPC64_GOT16 R_PPC64_GOT161955,96287
#define R_PPC64_GOT16_LO R_PPC64_GOT16_LO1956,96331
#define R_PPC64_GOT16_HI R_PPC64_GOT16_HI1957,96378
#define R_PPC64_GOT16_HA R_PPC64_GOT16_HA1958,96425
#define R_PPC64_COPY R_PPC64_COPY1960,96473
#define R_PPC64_GLOB_DAT R_PPC64_GLOB_DAT1961,96516
#define R_PPC64_JMP_SLOT R_PPC64_JMP_SLOT1962,96563
#define R_PPC64_RELATIVE R_PPC64_RELATIVE1963,96610
#define R_PPC64_UADDR32 R_PPC64_UADDR321965,96658
#define R_PPC64_UADDR16 R_PPC64_UADDR161966,96704
#define R_PPC64_REL32 R_PPC64_REL321967,96750
#define R_PPC64_PLT32 R_PPC64_PLT321968,96794
#define R_PPC64_PLTREL32 R_PPC64_PLTREL321969,96838
#define R_PPC64_PLT16_LO R_PPC64_PLT16_LO1970,96885
#define R_PPC64_PLT16_HI R_PPC64_PLT16_HI1971,96932
#define R_PPC64_PLT16_HA R_PPC64_PLT16_HA1972,96979
#define R_PPC64_SECTOFF R_PPC64_SECTOFF1974,97027
#define R_PPC64_SECTOFF_LO R_PPC64_SECTOFF_LO1975,97073
#define R_PPC64_SECTOFF_HI R_PPC64_SECTOFF_HI1976,97122
#define R_PPC64_SECTOFF_HA R_PPC64_SECTOFF_HA1977,97171
#define R_PPC64_ADDR30 R_PPC64_ADDR301978,97220
#define R_PPC64_ADDR64 R_PPC64_ADDR641979,97285
#define R_PPC64_ADDR16_HIGHER R_PPC64_ADDR16_HIGHER1980,97345
#define R_PPC64_ADDR16_HIGHERA R_PPC64_ADDR16_HIGHERA1981,97408
#define R_PPC64_ADDR16_HIGHEST R_PPC64_ADDR16_HIGHEST1982,97472
#define R_PPC64_ADDR16_HIGHESTA R_PPC64_ADDR16_HIGHESTA1983,97536
#define R_PPC64_UADDR64 R_PPC64_UADDR641984,97601
#define R_PPC64_REL64 R_PPC64_REL641985,97661
#define R_PPC64_PLT64 R_PPC64_PLT641986,97725
#define R_PPC64_PLTREL64 R_PPC64_PLTREL641987,97785
#define R_PPC64_TOC16 R_PPC64_TOC161988,97849
#define R_PPC64_TOC16_LO R_PPC64_TOC16_LO1989,97911
#define R_PPC64_TOC16_HI R_PPC64_TOC16_HI1990,97978
#define R_PPC64_TOC16_HA R_PPC64_TOC16_HA1991,98045
#define R_PPC64_TOC R_PPC64_TOC1992,98112
#define R_PPC64_PLTGOT16 R_PPC64_PLTGOT161993,98171
#define R_PPC64_PLTGOT16_LO R_PPC64_PLTGOT16_LO1994,98226
#define R_PPC64_PLTGOT16_HI R_PPC64_PLTGOT16_HI1995,98285
#define R_PPC64_PLTGOT16_HA R_PPC64_PLTGOT16_HA1996,98344
#define R_PPC64_ADDR16_DS R_PPC64_ADDR16_DS1998,98404
#define R_PPC64_ADDR16_LO_DS R_PPC64_ADDR16_LO_DS1999,98468
#define R_PPC64_GOT16_DS R_PPC64_GOT16_DS2000,98535
#define R_PPC64_GOT16_LO_DS R_PPC64_GOT16_LO_DS2001,98599
#define R_PPC64_PLT16_LO_DS R_PPC64_PLT16_LO_DS2002,98666
#define R_PPC64_SECTOFF_DS R_PPC64_SECTOFF_DS2003,98733
#define R_PPC64_SECTOFF_LO_DS R_PPC64_SECTOFF_LO_DS2004,98797
#define R_PPC64_TOC16_DS R_PPC64_TOC16_DS2005,98864
#define R_PPC64_TOC16_LO_DS R_PPC64_TOC16_LO_DS2006,98936
#define R_PPC64_PLTGOT16_DS R_PPC64_PLTGOT16_DS2007,99011
#define R_PPC64_PLTGOT16_LO_DS R_PPC64_PLTGOT16_LO_DS2008,99075
#define R_PPC64_TLS R_PPC64_TLS2011,99204
#define R_PPC64_DTPMOD64 R_PPC64_DTPMOD642012,99269
#define R_PPC64_TPREL16 R_PPC64_TPREL162013,99340
#define R_PPC64_TPREL16_LO R_PPC64_TPREL16_LO2014,99407
#define R_PPC64_TPREL16_HI R_PPC64_TPREL16_HI2015,99476
#define R_PPC64_TPREL16_HA R_PPC64_TPREL16_HA2016,99545
#define R_PPC64_TPREL64 R_PPC64_TPREL642017,99615
#define R_PPC64_DTPREL16 R_PPC64_DTPREL162018,99685
#define R_PPC64_DTPREL16_LO R_PPC64_DTPREL16_LO2019,99753
#define R_PPC64_DTPREL16_HI R_PPC64_DTPREL16_HI2020,99823
#define R_PPC64_DTPREL16_HA R_PPC64_DTPREL16_HA2021,99893
#define R_PPC64_DTPREL64 R_PPC64_DTPREL642022,99964
#define R_PPC64_GOT_TLSGD16 R_PPC64_GOT_TLSGD162023,100035
#define R_PPC64_GOT_TLSGD16_LO R_PPC64_GOT_TLSGD16_LO2024,100106
#define R_PPC64_GOT_TLSGD16_HI R_PPC64_GOT_TLSGD16_HI2025,100179
#define R_PPC64_GOT_TLSGD16_HA R_PPC64_GOT_TLSGD16_HA2026,100252
#define R_PPC64_GOT_TLSLD16 R_PPC64_GOT_TLSLD162027,100326
#define R_PPC64_GOT_TLSLD16_LO R_PPC64_GOT_TLSLD16_LO2028,100397
#define R_PPC64_GOT_TLSLD16_HI R_PPC64_GOT_TLSLD16_HI2029,100470
#define R_PPC64_GOT_TLSLD16_HA R_PPC64_GOT_TLSLD16_HA2030,100543
#define R_PPC64_GOT_TPREL16_DS R_PPC64_GOT_TPREL16_DS2031,100617
#define R_PPC64_GOT_TPREL16_LO_DS R_PPC64_GOT_TPREL16_LO_DS2032,100688
#define R_PPC64_GOT_TPREL16_HI R_PPC64_GOT_TPREL16_HI2033,100762
#define R_PPC64_GOT_TPREL16_HA R_PPC64_GOT_TPREL16_HA2034,100835
#define R_PPC64_GOT_DTPREL16_DS R_PPC64_GOT_DTPREL16_DS2035,100909
#define R_PPC64_GOT_DTPREL16_LO_DS R_PPC64_GOT_DTPREL16_LO_DS2036,100981
#define R_PPC64_GOT_DTPREL16_HI R_PPC64_GOT_DTPREL16_HI2037,101057
#define R_PPC64_GOT_DTPREL16_HA R_PPC64_GOT_DTPREL16_HA2038,101131
#define R_PPC64_TPREL16_DS R_PPC64_TPREL16_DS2039,101206
#define R_PPC64_TPREL16_LO_DS R_PPC64_TPREL16_LO_DS2040,101273
#define R_PPC64_TPREL16_HIGHER R_PPC64_TPREL16_HIGHER2041,101342
#define R_PPC64_TPREL16_HIGHERA R_PPC64_TPREL16_HIGHERA2042,101416
#define R_PPC64_TPREL16_HIGHEST R_PPC64_TPREL16_HIGHEST2043,101491
#define R_PPC64_TPREL16_HIGHESTA R_PPC64_TPREL16_HIGHESTA2044,101566
#define R_PPC64_DTPREL16_DS R_PPC64_DTPREL16_DS2045,101642
#define R_PPC64_DTPREL16_LO_DS R_PPC64_DTPREL16_LO_DS2046,101711
#define R_PPC64_DTPREL16_HIGHER R_PPC64_DTPREL16_HIGHER2047,101781
#define R_PPC64_DTPREL16_HIGHERA R_PPC64_DTPREL16_HIGHERA2048,101856
#define R_PPC64_DTPREL16_HIGHEST R_PPC64_DTPREL16_HIGHEST2049,101932
#define R_PPC64_DTPREL16_HIGHESTA R_PPC64_DTPREL16_HIGHESTA2050,102008
#define R_PPC64_NUM R_PPC64_NUM2053,102119
#define DT_PPC64_GLINK DT_PPC64_GLINK2056,102214
#define DT_PPC64_OPD DT_PPC64_OPD2057,102254
#define DT_PPC64_OPDSZ DT_PPC64_OPDSZ2058,102294
#define DT_PPC64_NUM DT_PPC64_NUM2059,102334
#define EF_ARM_RELEXEC EF_ARM_RELEXEC2065,102461
#define EF_ARM_HASENTRY EF_ARM_HASENTRY2066,102493
#define EF_ARM_INTERWORK EF_ARM_INTERWORK2067,102525
#define EF_ARM_APCS_26 EF_ARM_APCS_262068,102557
#define EF_ARM_APCS_FLOAT EF_ARM_APCS_FLOAT2069,102589
#define EF_ARM_PIC EF_ARM_PIC2070,102621
#define EF_ARM_ALIGN8 EF_ARM_ALIGN82071,102653
#define EF_ARM_NEW_ABI EF_ARM_NEW_ABI2072,102735
#define EF_ARM_OLD_ABI EF_ARM_OLD_ABI2073,102767
#define EF_ARM_SYMSARESORTED EF_ARM_SYMSARESORTED2077,102920
#define EF_ARM_DYNSYMSUSESEGIDX EF_ARM_DYNSYMSUSESEGIDX2078,102957
#define EF_ARM_MAPSYMSFIRST EF_ARM_MAPSYMSFIRST2079,102994
#define EF_ARM_EABIMASK EF_ARM_EABIMASK2080,103031
#define EF_ARM_EABI_VERSION(EF_ARM_EABI_VERSION2082,103075
#define EF_ARM_EABI_UNKNOWN EF_ARM_EABI_UNKNOWN2083,103138
#define EF_ARM_EABI_VER1 EF_ARM_EABI_VER12084,103178
#define EF_ARM_EABI_VER2 EF_ARM_EABI_VER22085,103218
#define STT_ARM_TFUNC STT_ARM_TFUNC2088,103299
#define SHF_ARM_ENTRYSECT SHF_ARM_ENTRYSECT2091,103370
#define SHF_ARM_COMDEF SHF_ARM_COMDEF2092,103448
#define PF_ARM_SB PF_ARM_SB2096,103595
#define R_ARM_NONE R_ARM_NONE2100,103720
#define R_ARM_PC24 R_ARM_PC242101,103775
#define R_ARM_ABS32 R_ARM_ABS322102,103847
#define R_ARM_REL32 R_ARM_REL322103,103908
#define R_ARM_PC13 R_ARM_PC132104,103973
#define R_ARM_ABS16 R_ARM_ABS162105,104007
#define R_ARM_ABS12 R_ARM_ABS122106,104067
#define R_ARM_THM_ABS5 R_ARM_THM_ABS52107,104127
#define R_ARM_ABS8 R_ARM_ABS82108,104161
#define R_ARM_SBREL32 R_ARM_SBREL322109,104220
#define R_ARM_THM_PC22 R_ARM_THM_PC222110,104254
#define R_ARM_THM_PC8 R_ARM_THM_PC82111,104289
#define R_ARM_AMP_VCALL9 R_ARM_AMP_VCALL92112,104324
#define R_ARM_SWI24 R_ARM_SWI242113,104359
#define R_ARM_THM_SWI8 R_ARM_THM_SWI82114,104394
#define R_ARM_XPC25 R_ARM_XPC252115,104429
#define R_ARM_THM_XPC22 R_ARM_THM_XPC222116,104464
#define R_ARM_COPY R_ARM_COPY2117,104499
#define R_ARM_GLOB_DAT R_ARM_GLOB_DAT2118,104568
#define R_ARM_JUMP_SLOT R_ARM_JUMP_SLOT2119,104631
#define R_ARM_RELATIVE R_ARM_RELATIVE2120,104694
#define R_ARM_GOTOFF R_ARM_GOTOFF2121,104763
#define R_ARM_GOTPC R_ARM_GOTPC2122,104830
#define R_ARM_GOT32 R_ARM_GOT322123,104909
#define R_ARM_PLT32 R_ARM_PLT322124,104972
#define R_ARM_ALU_PCREL_7_0 R_ARM_ALU_PCREL_7_02125,105037
#define R_ARM_ALU_PCREL_15_8 R_ARM_ALU_PCREL_15_82126,105072
#define R_ARM_ALU_PCREL_23_15 R_ARM_ALU_PCREL_23_152127,105107
#define R_ARM_LDR_SBREL_11_0 R_ARM_LDR_SBREL_11_02128,105142
#define R_ARM_ALU_SBREL_19_12 R_ARM_ALU_SBREL_19_122129,105177
#define R_ARM_ALU_SBREL_27_20 R_ARM_ALU_SBREL_27_202130,105212
#define R_ARM_GNU_VTENTRY R_ARM_GNU_VTENTRY2131,105247
#define R_ARM_GNU_VTINHERIT R_ARM_GNU_VTINHERIT2132,105283
#define R_ARM_THM_PC11 R_ARM_THM_PC112133,105319
#define R_ARM_THM_PC9 R_ARM_THM_PC92134,105392
#define R_ARM_RXPC25 R_ARM_RXPC252135,105463
#define R_ARM_RSBREL32 R_ARM_RSBREL322136,105499
#define R_ARM_THM_RPC22 R_ARM_THM_RPC222137,105535
#define R_ARM_RREL32 R_ARM_RREL322138,105571
#define R_ARM_RABS22 R_ARM_RABS222139,105607
#define R_ARM_RPC24 R_ARM_RPC242140,105643
#define R_ARM_RBASE R_ARM_RBASE2141,105679
#define R_ARM_NUM R_ARM_NUM2143,105748
#define EF_IA_64_MASKOS EF_IA_64_MASKOS2148,105882
#define EF_IA_64_ABI64 EF_IA_64_ABI642149,105954
#define EF_IA_64_ARCH EF_IA_64_ARCH2150,106019
#define PT_IA_64_ARCHEXT PT_IA_64_ARCHEXT2153,106153
#define PT_IA_64_UNWIND PT_IA_64_UNWIND2154,106227
#define PT_IA_64_HP_OPT_ANOT PT_IA_64_HP_OPT_ANOT2155,106298
#define PT_IA_64_HP_HSL_ANOT PT_IA_64_HP_HSL_ANOT2156,106347
#define PT_IA_64_HP_STACK PT_IA_64_HP_STACK2157,106396
#define PF_IA_64_NORECOV PF_IA_64_NORECOV2160,106506
#define SHT_IA_64_EXT SHT_IA_64_EXT2163,106646
#define SHT_IA_64_UNWIND SHT_IA_64_UNWIND2164,106716
#define SHF_IA_64_SHORT SHF_IA_64_SHORT2167,106845
#define SHF_IA_64_NORECOV SHF_IA_64_NORECOV2168,106915
#define DT_IA_64_PLT_RESERVE DT_IA_64_PLT_RESERVE2171,107052
#define DT_IA_64_NUM DT_IA_64_NUM2172,107100
#define R_IA64_NONE R_IA64_NONE2175,107161
#define R_IA64_IMM14 R_IA64_IMM142176,107212
#define R_IA64_IMM22 R_IA64_IMM222177,107285
#define R_IA64_IMM64 R_IA64_IMM642178,107358
#define R_IA64_DIR32MSB R_IA64_DIR32MSB2179,107431
#define R_IA64_DIR32LSB R_IA64_DIR32LSB2180,107504
#define R_IA64_DIR64MSB R_IA64_DIR64MSB2181,107577
#define R_IA64_DIR64LSB R_IA64_DIR64LSB2182,107650
#define R_IA64_GPREL22 R_IA64_GPREL222183,107723
#define R_IA64_GPREL64I R_IA64_GPREL64I2184,107798
#define R_IA64_GPREL32MSB R_IA64_GPREL32MSB2185,107873
#define R_IA64_GPREL32LSB R_IA64_GPREL32LSB2186,107948
#define R_IA64_GPREL64MSB R_IA64_GPREL64MSB2187,108023
#define R_IA64_GPREL64LSB R_IA64_GPREL64LSB2188,108098
#define R_IA64_LTOFF22 R_IA64_LTOFF222189,108173
#define R_IA64_LTOFF64I R_IA64_LTOFF64I2190,108248
#define R_IA64_PLTOFF22 R_IA64_PLTOFF222191,108323
#define R_IA64_PLTOFF64I R_IA64_PLTOFF64I2192,108399
#define R_IA64_PLTOFF64MSB R_IA64_PLTOFF64MSB2193,108475
#define R_IA64_PLTOFF64LSB R_IA64_PLTOFF64LSB2194,108551
#define R_IA64_FPTR64I R_IA64_FPTR64I2195,108627
#define R_IA64_FPTR32MSB R_IA64_FPTR32MSB2196,108701
#define R_IA64_FPTR32LSB R_IA64_FPTR32LSB2197,108775
#define R_IA64_FPTR64MSB R_IA64_FPTR64MSB2198,108849
#define R_IA64_FPTR64LSB R_IA64_FPTR64LSB2199,108923
#define R_IA64_PCREL60B R_IA64_PCREL60B2200,108997
#define R_IA64_PCREL21B R_IA64_PCREL21B2201,109066
#define R_IA64_PCREL21M R_IA64_PCREL21M2202,109141
#define R_IA64_PCREL21F R_IA64_PCREL21F2203,109212
#define R_IA64_PCREL32MSB R_IA64_PCREL32MSB2204,109283
#define R_IA64_PCREL32LSB R_IA64_PCREL32LSB2205,109358
#define R_IA64_PCREL64MSB R_IA64_PCREL64MSB2206,109433
#define R_IA64_PCREL64LSB R_IA64_PCREL64LSB2207,109508
#define R_IA64_LTOFF_FPTR22 R_IA64_LTOFF_FPTR222208,109583
#define R_IA64_LTOFF_FPTR64I R_IA64_LTOFF_FPTR64I2209,109655
#define R_IA64_LTOFF_FPTR32MSB R_IA64_LTOFF_FPTR32MSB2210,109727
#define R_IA64_LTOFF_FPTR32LSB R_IA64_LTOFF_FPTR32LSB2211,109803
#define R_IA64_LTOFF_FPTR64MSB R_IA64_LTOFF_FPTR64MSB2212,109879
#define R_IA64_LTOFF_FPTR64LSB R_IA64_LTOFF_FPTR64LSB2213,109955
#define R_IA64_SEGREL32MSB R_IA64_SEGREL32MSB2214,110031
#define R_IA64_SEGREL32LSB R_IA64_SEGREL32LSB2215,110107
#define R_IA64_SEGREL64MSB R_IA64_SEGREL64MSB2216,110183
#define R_IA64_SEGREL64LSB R_IA64_SEGREL64LSB2217,110259
#define R_IA64_SECREL32MSB R_IA64_SECREL32MSB2218,110335
#define R_IA64_SECREL32LSB R_IA64_SECREL32LSB2219,110411
#define R_IA64_SECREL64MSB R_IA64_SECREL64MSB2220,110487
#define R_IA64_SECREL64LSB R_IA64_SECREL64LSB2221,110563
#define R_IA64_REL32MSB R_IA64_REL32MSB2222,110639
#define R_IA64_REL32LSB R_IA64_REL32LSB2223,110698
#define R_IA64_REL64MSB R_IA64_REL64MSB2224,110757
#define R_IA64_REL64LSB R_IA64_REL64LSB2225,110816
#define R_IA64_LTV32MSB R_IA64_LTV32MSB2226,110875
#define R_IA64_LTV32LSB R_IA64_LTV32LSB2227,110948
#define R_IA64_LTV64MSB R_IA64_LTV64MSB2228,111021
#define R_IA64_LTV64LSB R_IA64_LTV64LSB2229,111094
#define R_IA64_PCREL21BI R_IA64_PCREL21BI2230,111167
#define R_IA64_PCREL22 R_IA64_PCREL222231,111243
#define R_IA64_PCREL64I R_IA64_PCREL64I2232,111319
#define R_IA64_IPLTMSB R_IA64_IPLTMSB2233,111395
#define R_IA64_IPLTLSB R_IA64_IPLTLSB2234,111474
#define R_IA64_COPY R_IA64_COPY2235,111553
#define R_IA64_SUB R_IA64_SUB2236,111615
#define R_IA64_LTOFF22X R_IA64_LTOFF22X2237,111690
#define R_IA64_LDXMOV R_IA64_LDXMOV2238,111757
#define R_IA64_TPREL14 R_IA64_TPREL142239,111821
#define R_IA64_TPREL22 R_IA64_TPREL222240,111892
#define R_IA64_TPREL64I R_IA64_TPREL64I2241,111963
#define R_IA64_TPREL64MSB R_IA64_TPREL64MSB2242,112034
#define R_IA64_TPREL64LSB R_IA64_TPREL64LSB2243,112109
#define R_IA64_LTOFF_TPREL22 R_IA64_LTOFF_TPREL222244,112184
#define R_IA64_DTPMOD64MSB R_IA64_DTPMOD64MSB2245,112256
#define R_IA64_DTPMOD64LSB R_IA64_DTPMOD64LSB2246,112332
#define R_IA64_LTOFF_DTPMOD22 R_IA64_LTOFF_DTPMOD222247,112408
#define R_IA64_DTPREL14 R_IA64_DTPREL142248,112488
#define R_IA64_DTPREL22 R_IA64_DTPREL222249,112560
#define R_IA64_DTPREL64I R_IA64_DTPREL64I2250,112632
#define R_IA64_DTPREL32MSB R_IA64_DTPREL32MSB2251,112704
#define R_IA64_DTPREL32LSB R_IA64_DTPREL32LSB2252,112780
#define R_IA64_DTPREL64MSB R_IA64_DTPREL64MSB2253,112856
#define R_IA64_DTPREL64LSB R_IA64_DTPREL64LSB2254,112932
#define R_IA64_LTOFF_DTPREL22 R_IA64_LTOFF_DTPREL222255,113008
#define R_SH_NONE R_SH_NONE2260,113133
#define R_SH_DIR32 R_SH_DIR322261,113167
#define R_SH_REL32 R_SH_REL322262,113201
#define R_SH_DIR8WPN R_SH_DIR8WPN2263,113235
#define R_SH_IND12W R_SH_IND12W2264,113269
#define R_SH_DIR8WPL R_SH_DIR8WPL2265,113303
#define R_SH_DIR8WPZ R_SH_DIR8WPZ2266,113337
#define R_SH_DIR8BP R_SH_DIR8BP2267,113371
#define R_SH_DIR8W R_SH_DIR8W2268,113405
#define R_SH_DIR8L R_SH_DIR8L2269,113439
#define R_SH_SWITCH16 R_SH_SWITCH162270,113473
#define R_SH_SWITCH32 R_SH_SWITCH322271,113508
#define R_SH_USES R_SH_USES2272,113543
#define R_SH_COUNT R_SH_COUNT2273,113578
#define R_SH_ALIGN R_SH_ALIGN2274,113613
#define R_SH_CODE R_SH_CODE2275,113648
#define R_SH_DATA R_SH_DATA2276,113683
#define R_SH_LABEL R_SH_LABEL2277,113718
#define R_SH_SWITCH8 R_SH_SWITCH82278,113753
#define R_SH_GNU_VTINHERIT R_SH_GNU_VTINHERIT2279,113788
#define R_SH_GNU_VTENTRY R_SH_GNU_VTENTRY2280,113823
#define R_SH_TLS_GD_32 R_SH_TLS_GD_322281,113858
#define R_SH_TLS_LD_32 R_SH_TLS_LD_322282,113894
#define R_SH_TLS_LDO_32 R_SH_TLS_LDO_322283,113930
#define R_SH_TLS_IE_32 R_SH_TLS_IE_322284,113966
#define R_SH_TLS_LE_32 R_SH_TLS_LE_322285,114002
#define R_SH_TLS_DTPMOD32 R_SH_TLS_DTPMOD322286,114038
#define R_SH_TLS_DTPOFF32 R_SH_TLS_DTPOFF322287,114074
#define R_SH_TLS_TPOFF32 R_SH_TLS_TPOFF322288,114110
#define R_SH_GOT32 R_SH_GOT322289,114146
#define R_SH_PLT32 R_SH_PLT322290,114182
#define R_SH_COPY R_SH_COPY2291,114218
#define R_SH_GLOB_DAT R_SH_GLOB_DAT2292,114254
#define R_SH_JMP_SLOT R_SH_JMP_SLOT2293,114290
#define R_SH_RELATIVE R_SH_RELATIVE2294,114326
#define R_SH_GOTOFF R_SH_GOTOFF2295,114362
#define R_SH_GOTPC R_SH_GOTPC2296,114398
#define R_SH_NUM R_SH_NUM2298,114467
#define R_390_NONE R_390_NONE2302,114534
#define R_390_8 R_390_82303,114591
#define R_390_12 R_390_122304,114652
#define R_390_16 R_390_162305,114714
#define R_390_32 R_390_322306,114776
#define R_390_PC32 R_390_PC322307,114838
#define R_390_GOT12 R_390_GOT122308,114905
#define R_390_GOT32 R_390_GOT322309,114971
#define R_390_PLT32 R_390_PLT322310,115037
#define R_390_COPY R_390_COPY2311,115116
#define R_390_GLOB_DAT R_390_GLOB_DAT2312,115187
#define R_390_JMP_SLOT R_390_JMP_SLOT2313,115252
#define R_390_RELATIVE R_390_RELATIVE2314,115317
#define R_390_GOTOFF32 R_390_GOTOFF322315,115388
#define R_390_GOTPC R_390_GOTPC2316,115464
#define R_390_GOT16 R_390_GOT162317,115545
#define R_390_PC16 R_390_PC162318,115611
#define R_390_PC16DBL R_390_PC16DBL2319,115678
#define R_390_PLT16DBL R_390_PLT16DBL2320,115758
#define R_390_PC32DBL R_390_PC32DBL2321,115838
#define R_390_PLT32DBL R_390_PLT32DBL2322,115918
#define R_390_GOTPCDBL R_390_GOTPCDBL2323,115998
#define R_390_64 R_390_642324,116078
#define R_390_PC64 R_390_PC642325,116140
#define R_390_GOT64 R_390_GOT642326,116207
#define R_390_PLT64 R_390_PLT642327,116273
#define R_390_GOTENT R_390_GOTENT2328,116352
#define R_390_GOTOFF16 R_390_GOTOFF162329,116432
#define R_390_GOTOFF64 R_390_GOTOFF642330,116500
#define R_390_GOTPLT12 R_390_GOTPLT122331,116568
#define R_390_GOTPLT16 R_390_GOTPLT162332,116643
#define R_390_GOTPLT32 R_390_GOTPLT322333,116718
#define R_390_GOTPLT64 R_390_GOTPLT642334,116793
#define R_390_GOTPLTENT R_390_GOTPLTENT2335,116868
#define R_390_PLTOFF16 R_390_PLTOFF162336,116948
#define R_390_PLTOFF32 R_390_PLTOFF322337,117025
#define R_390_PLTOFF64 R_390_PLTOFF642338,117102
#define R_390_TLS_LOAD R_390_TLS_LOAD2339,117179
#define R_390_TLS_GDCALL R_390_TLS_GDCALL2340,117257
#define R_390_TLS_LDCALL R_390_TLS_LDCALL2342,117354
#define R_390_TLS_GD32 R_390_TLS_GD322344,117449
#define R_390_TLS_GD64 R_390_TLS_GD642346,117549
#define R_390_TLS_GOTIE12 R_390_TLS_GOTIE122348,117649
#define R_390_TLS_GOTIE32 R_390_TLS_GOTIE322350,117743
#define R_390_TLS_GOTIE64 R_390_TLS_GOTIE642352,117837
#define R_390_TLS_LDM32 R_390_TLS_LDM322354,117930
#define R_390_TLS_LDM64 R_390_TLS_LDM642356,118039
#define R_390_TLS_IE32 R_390_TLS_IE322358,118148
#define R_390_TLS_IE64 R_390_TLS_IE642360,118260
#define R_390_TLS_IEENT R_390_TLS_IEENT2362,118372
#define R_390_TLS_LE32 R_390_TLS_LE322364,118488
#define R_390_TLS_LE64 R_390_TLS_LE642366,118587
#define R_390_TLS_LDO32 R_390_TLS_LDO322368,118686
#define R_390_TLS_LDO64 R_390_TLS_LDO642370,118770
#define R_390_TLS_DTPMOD R_390_TLS_DTPMOD2372,118854
#define R_390_TLS_DTPOFF R_390_TLS_DTPOFF2373,118933
#define R_390_TLS_TPOFF R_390_TLS_TPOFF2374,119001
#define R_390_20 R_390_202376,119084
#define R_390_GOT20 R_390_GOT202377,119146
#define R_390_GOTPLT20 R_390_GOTPLT202378,119212
#define R_390_TLS_GOTIE20 R_390_TLS_GOTIE202379,119287
#define R_390_NUM R_390_NUM2382,119414
#define R_CRIS_NONE R_CRIS_NONE2386,119476
#define R_CRIS_8 R_CRIS_82387,119510
#define R_CRIS_16 R_CRIS_162388,119544
#define R_CRIS_32 R_CRIS_322389,119578
#define R_CRIS_8_PCREL R_CRIS_8_PCREL2390,119612
#define R_CRIS_16_PCREL R_CRIS_16_PCREL2391,119646
#define R_CRIS_32_PCREL R_CRIS_32_PCREL2392,119680
#define R_CRIS_GNU_VTINHERIT R_CRIS_GNU_VTINHERIT2393,119714
#define R_CRIS_GNU_VTENTRY R_CRIS_GNU_VTENTRY2394,119748
#define R_CRIS_COPY R_CRIS_COPY2395,119782
#define R_CRIS_GLOB_DAT R_CRIS_GLOB_DAT2396,119816
#define R_CRIS_JUMP_SLOT R_CRIS_JUMP_SLOT2397,119851
#define R_CRIS_RELATIVE R_CRIS_RELATIVE2398,119886
#define R_CRIS_16_GOT R_CRIS_16_GOT2399,119921
#define R_CRIS_32_GOT R_CRIS_32_GOT2400,119956
#define R_CRIS_16_GOTPLT R_CRIS_16_GOTPLT2401,119991
#define R_CRIS_32_GOTPLT R_CRIS_32_GOTPLT2402,120026
#define R_CRIS_32_GOTREL R_CRIS_32_GOTREL2403,120061
#define R_CRIS_32_PLT_GOTREL R_CRIS_32_PLT_GOTREL2404,120096
#define R_CRIS_32_PLT_PCREL R_CRIS_32_PLT_PCREL2405,120131
#define R_CRIS_NUM R_CRIS_NUM2407,120167
#define R_X86_64_NONE R_X86_64_NONE2411,120235
#define R_X86_64_64 R_X86_64_642412,120290
#define R_X86_64_PC32 R_X86_64_PC322413,120351
#define R_X86_64_GOT32 R_X86_64_GOT322414,120423
#define R_X86_64_PLT32 R_X86_64_PLT322415,120486
#define R_X86_64_COPY R_X86_64_COPY2416,120551
#define R_X86_64_GLOB_DAT R_X86_64_GLOB_DAT2417,120620
#define R_X86_64_JUMP_SLOT R_X86_64_JUMP_SLOT2418,120683
#define R_X86_64_RELATIVE R_X86_64_RELATIVE2419,120746
#define R_X86_64_GOTPCREL R_X86_64_GOTPCREL2420,120815
#define R_X86_64_32 R_X86_64_322422,120901
#define R_X86_64_32S R_X86_64_32S2423,120975
#define R_X86_64_16 R_X86_64_162424,121049
#define R_X86_64_PC16 R_X86_64_PC162425,121123
#define R_X86_64_8 R_X86_64_82426,121202
#define R_X86_64_PC8 R_X86_64_PC82427,121276
#define R_X86_64_DTPMOD64 R_X86_64_DTPMOD642428,121354
#define R_X86_64_DTPOFF64 R_X86_64_DTPOFF642429,121431
#define R_X86_64_TPOFF64 R_X86_64_TPOFF642430,121506
#define R_X86_64_TLSGD R_X86_64_TLSGD2431,121580
#define R_X86_64_TLSLD R_X86_64_TLSLD2433,121692
#define R_X86_64_DTPOFF32 R_X86_64_DTPOFF322435,121804
#define R_X86_64_GOTTPOFF R_X86_64_GOTTPOFF2436,121870
#define R_X86_64_TPOFF32 R_X86_64_TPOFF322438,121984
#define R_X86_64_NUM R_X86_64_NUM2440,122059
#define R_MN10300_NONE R_MN10300_NONE2444,122137
#define R_MN10300_32 R_MN10300_322445,122194
#define R_MN10300_16 R_MN10300_162446,122256
#define R_MN10300_8 R_MN10300_82447,122318
#define R_MN10300_PCREL32 R_MN10300_PCREL322448,122379
#define R_MN10300_PCREL16 R_MN10300_PCREL162449,122446
#define R_MN10300_PCREL8 R_MN10300_PCREL82450,122520
#define R_MN10300_GNU_VTINHERIT R_MN10300_GNU_VTINHERIT2451,122593
#define R_MN10300_GNU_VTENTRY R_MN10300_GNU_VTENTRY2452,122669
#define R_MN10300_24 R_MN10300_242453,122743
#define R_MN10300_GOTPC32 R_MN10300_GOTPC322454,122805
#define R_MN10300_GOTPC16 R_MN10300_GOTPC162455,122880
#define R_MN10300_GOTOFF32 R_MN10300_GOTOFF322456,122955
#define R_MN10300_GOTOFF24 R_MN10300_GOTOFF242457,123026
#define R_MN10300_GOTOFF16 R_MN10300_GOTOFF162458,123097
#define R_MN10300_PLT32 R_MN10300_PLT322459,123168
#define R_MN10300_PLT16 R_MN10300_PLT162460,123242
#define R_MN10300_GOT32 R_MN10300_GOT322461,123316
#define R_MN10300_GOT24 R_MN10300_GOT242462,123391
#define R_MN10300_GOT16 R_MN10300_GOT162463,123466
#define R_MN10300_COPY R_MN10300_COPY2464,123541
#define R_MN10300_GLOB_DAT R_MN10300_GLOB_DAT2465,123612
#define R_MN10300_JMP_SLOT R_MN10300_JMP_SLOT2466,123677
#define R_MN10300_RELATIVE R_MN10300_RELATIVE2467,123742
#define R_MN10300_NUM R_MN10300_NUM2469,123814
#define R_M32R_NONE R_M32R_NONE2473,123887
#define R_M32R_16 R_M32R_162474,123943
#define R_M32R_32 R_M32R_322475,124004
#define R_M32R_24 R_M32R_242476,124065
#define R_M32R_10_PCREL R_M32R_10_PCREL2477,124126
#define R_M32R_18_PCREL R_M32R_18_PCREL2478,124200
#define R_M32R_26_PCREL R_M32R_26_PCREL2479,124274
#define R_M32R_HI16_ULO R_M32R_HI16_ULO2480,124348
#define R_M32R_HI16_SLO R_M32R_HI16_SLO2481,124425
#define R_M32R_LO16 R_M32R_LO162482,124500
#define R_M32R_SDA16 R_M32R_SDA162483,124558
#define R_M32R_GNU_VTINHERIT R_M32R_GNU_VTINHERIT2484,124626
#define R_M32R_GNU_VTENTRY R_M32R_GNU_VTENTRY2485,124661
#define R_M32R_16_RELA R_M32R_16_RELA2487,124745
#define R_M32R_32_RELA R_M32R_32_RELA2488,124806
#define R_M32R_24_RELA R_M32R_24_RELA2489,124867
#define R_M32R_10_PCREL_RELA R_M32R_10_PCREL_RELA2490,124928
#define R_M32R_18_PCREL_RELA R_M32R_18_PCREL_RELA2491,125002
#define R_M32R_26_PCREL_RELA R_M32R_26_PCREL_RELA2492,125076
#define R_M32R_HI16_ULO_RELA R_M32R_HI16_ULO_RELA2493,125150
#define R_M32R_HI16_SLO_RELA R_M32R_HI16_SLO_RELA2494,125226
#define R_M32R_LO16_RELA R_M32R_LO16_RELA2495,125300
#define R_M32R_SDA16_RELA R_M32R_SDA16_RELA2496,125357
#define R_M32R_RELA_GNU_VTINHERIT R_M32R_RELA_GNU_VTINHERIT2497,125424
#define R_M32R_RELA_GNU_VTENTRY R_M32R_RELA_GNU_VTENTRY2498,125467
#define R_M32R_GOT24 R_M32R_GOT242500,125503
#define R_M32R_26_PLTREL R_M32R_26_PLTREL2501,125566
#define R_M32R_COPY R_M32R_COPY2502,125646
#define R_M32R_GLOB_DAT R_M32R_GLOB_DAT2503,125715
#define R_M32R_JMP_SLOT R_M32R_JMP_SLOT2504,125778
#define R_M32R_RELATIVE R_M32R_RELATIVE2505,125841
#define R_M32R_GOTOFF R_M32R_GOTOFF2506,125910
#define R_M32R_GOTPC24 R_M32R_GOTPC242507,125977
#define R_M32R_GOT16_HI_ULO R_M32R_GOT16_HI_ULO2508,126056
#define R_M32R_GOT16_HI_SLO R_M32R_GOT16_HI_SLO2510,126158
#define R_M32R_GOT16_LO R_M32R_GOT16_LO2512,126258
#define R_M32R_GOTPC_HI_ULO R_M32R_GOTPC_HI_ULO2513,126325
#define R_M32R_GOTPC_HI_SLO R_M32R_GOTPC_HI_SLO2515,126443
#define R_M32R_GOTPC_LO R_M32R_GOTPC_LO2517,126559
#define R_M32R_GOTOFF_HI_ULO R_M32R_GOTOFF_HI_ULO2519,126658
#define R_M32R_GOTOFF_HI_SLO R_M32R_GOTOFF_HI_SLO2521,126764
#define R_M32R_GOTOFF_LO R_M32R_GOTOFF_LO2523,126868
#define R_M32R_NUM R_M32R_NUM2524,126939

kernel/include/api/binfmt.h,89
typedef int(*binfmt_load_func_t)(const char *filename, int fd,binfmt_load_func_t16,848

kernel/include/ctype.h,913
#define _U _U30,1186
#define _L _L31,1222
#define _D _D32,1258
#define _C _C33,1294
#define _P _P34,1330
#define _S _S35,1366
#define _X _X36,1423
#define _SP _SP37,1463
static unsigned char _ctype[] = {_ctype40,1513
#define __ismask(__ismask67,3346
#define isalnum(isalnum69,3401
#define isalpha(isalpha70,3457
#define iscntrl(iscntrl71,3510
#define isdigit(isdigit72,3560
#define isgraph(isgraph73,3610
#define islower(islower74,3669
#define isprint(isprint75,3719
#define ispunct(ispunct76,3782
#define isspace(isspace77,3832
#define isupper(isupper78,3882
#define isxdigit(isxdigit79,3932
#define isascii(isascii81,3986
#define toascii(toascii82,4034
static inline unsigned char __tolower(unsigned char c)__tolower84,4082
static inline unsigned char __toupper(unsigned char c)__toupper91,4216
#define tolower(tolower98,4350
#define toupper(toupper99,4382

kernel/include/mm/phys.h,0

kernel/include/mm/slab.h,163
#define SLAB_REDZONE SLAB_REDZONE17,990
#define SLAB_CHECK_FREESLAB_CHECK_FREE21,1132
typedef struct slab_allocator slab_allocator_t;slab_allocator_t31,1570

kernel/include/mm/page.h,447
#define PAGE_SHIFT PAGE_SHIFT21,1150
#define PAGE_SIZE PAGE_SIZE22,1180
#define PAGE_MASK PAGE_MASK23,1237
#define PAGE_ALIGN_DOWN(PAGE_ALIGN_DOWN25,1290
#define PAGE_ALIGN_UP(PAGE_ALIGN_UP26,1355
#define PAGE_OFFSET(PAGE_OFFSET27,1436
#define PN_TO_ADDR(PN_TO_ADDR29,1492
#define ADDR_TO_PN(ADDR_TO_PN30,1556
#define PAGE_ALIGNED(PAGE_ALIGNED32,1611
#define PAGE_NSIZES PAGE_NSIZES34,1672
#define PAGE_SAME(PAGE_SAME36,1696

kernel/include/mm/pframe.h,1244
#define PF_BUSY PF_BUSY23,935
#define PF_DIRTY PF_DIRTY24,972
#define pframe_is_busy(pframe_is_busy26,1010
#define pframe_set_busy(pframe_set_busy27,1073
#define pframe_clear_busy(pframe_clear_busy28,1153
#define pframe_is_dirty(pframe_is_dirty30,1235
#define pframe_set_dirty(pframe_set_dirty31,1299
#define pframe_clear_dirty(pframe_clear_dirty32,1380
#define pframe_is_pinned(pframe_is_pinned34,1463
#define pframe_is_free(pframe_is_free35,1519
typedef struct pframe {pframe39,1698
        struct mmobj       *pf_obj;pf_obj43,1863
        uint32_t            pf_pagenum;pf_pagenum44,1899
        void               *pf_addr;pf_addr49,2149
        uint8_t             pf_flags;    /* PF_DIRTY, PF_BUSY */pf_flags52,2210
        ktqueue_t           pf_waitq;    /* wait on this if page is busy */pf_waitq53,2275
        int                 pf_pincount;pf_pincount54,2351
        list_link_t         pf_link;     /* link on {free,allocated,pinned}_list */pf_link55,2392
        list_link_t         pf_hlink;    /* link on hash chain of resident page hash */pf_hlink56,2476
        list_link_t         pf_olink;    /* link on object's list of resident pages */pf_olink57,2564
} pframe_t;pframe_t58,2651

kernel/include/mm/tlb.h,212
static inline void tlb_flush(uintptr_t vaddr)tlb_flush21,987
static inline void tlb_flush_range(uintptr_t vaddr, uint32_t count)tlb_flush_range30,1301
static inline void tlb_flush_all()tlb_flush_all39,1530

kernel/include/mm/pagetable.h,731
#define PD_PRESENT PD_PRESENT14,825
#define PD_WRITE PD_WRITE15,857
#define PD_USER PD_USER16,889
#define PD_WRITE_THROUGH PD_WRITE_THROUGH17,921
#define PD_CACHE_DISABLED PD_CACHE_DISABLED18,953
#define PD_ACCESSED PD_ACCESSED19,985
#define PT_PRESENT PT_PRESENT21,1018
#define PT_WRITE PT_WRITE22,1050
#define PT_USER PT_USER23,1082
#define PT_WRITE_THROUGH PT_WRITE_THROUGH24,1114
#define PT_CACHE_DISABLED PT_CACHE_DISABLED25,1146
#define PT_ACCESSED PT_ACCESSED26,1178
#define PT_DIRTY PT_DIRTY27,1210
#define PT_SIZE PT_SIZE28,1242
#define PT_GLOBAL PT_GLOBAL29,1274
typedef uint32_t pte_t;pte_t31,1307
typedef uint32_t pde_t;pde_t32,1331
typedef struct pagedir pagedir_t;pagedir_t34,1356

kernel/include/mm/mm.h,286
#define MM_POISON MM_POISON14,825
#define MM_POISON_ALLOC MM_POISON_ALLOC15,857
#define MM_POISON_FREE MM_POISON_FREE16,892
#define USER_MEM_LOW USER_MEM_LOW18,928
#define USER_MEM_HIGH USER_MEM_HIGH19,985
#define PTR_SIZE PTR_SIZE21,1043
#define PTR_MASK PTR_MASK22,1077

kernel/include/mm/mman.h,374
#define PROT_NONE PROT_NONE18,898
#define PROT_READ PROT_READ19,947
#define PROT_WRITE PROT_WRITE20,1004
#define PROT_EXEC PROT_EXEC21,1064
#define MAP_FAILED MAP_FAILED25,1168
#define MAP_SHARED MAP_SHARED29,1245
#define MAP_PRIVATE MAP_PRIVATE30,1271
#define MAP_TYPE MAP_TYPE31,1297
#define MAP_FIXED MAP_FIXED35,1376
#define MAP_ANON MAP_ANON36,1402

kernel/include/mm/mmobj.h,1333
typedef struct mmobj_ops mmobj_ops_t;mmobj_ops_t17,864
typedef struct mmobj {mmobj19,903
        mmobj_ops_t        *mmo_ops;mmo_ops20,926
        int                 mmo_refcount;   /* mmo_refcount >= mmo_nrespages >= 0 */mmo_refcount21,963
        int                 mmo_nrespages;mmo_nrespages27,1209
        list_t              mmo_respages;mmo_respages28,1252
                list_t            mmo_vmas;mmo_vmas36,1647
                struct mmobj     *mmo_bottom_obj;mmo_bottom_obj37,1691
        }                   mmo_un;mmo_un38,1741
        struct mmobj       *mmo_shadowed;   /* the object that we shadow */mmo_shadowed46,2020
} mmobj_t;mmobj_t47,2096
struct mmobj_ops {mmobj_ops49,2108
        void (*ref)(mmobj_t *o);ref53,2197
        void (*put)(mmobj_t *o);put57,2297
        int (*lookuppage)(mmobj_t *o, uint32_t pagenum, int forwrite, struct pframe **pf);lookuppage72,3045
        int (*fillpage)(mmobj_t *o, struct pframe *pf);fillpage79,3378
        int (*dirtypage)(mmobj_t *o, struct pframe *pf);dirtypage90,3992
        int (*cleanpage)(mmobj_t *o, struct pframe *pf);cleanpage99,4312
static inline void mmobj_init(mmobj_t *o, mmobj_ops_t *ops)mmobj_init107,4505
#define mmobj_bottom_obj(mmobj_bottom_obj117,4778
#define mmobj_bottom_vmas(mmobj_bottom_vmas121,4903

kernel/include/mm/kmalloc.h,0

kernel/include/limits.h,525
#define CHAR_BIT CHAR_BIT14,825
#define CHAR_MAX CHAR_MAX15,845
#define UCHAR_MAX UCHAR_MAX16,873
#define SCHAR_MAX SCHAR_MAX17,914
#define SCHAR_MIN SCHAR_MIN18,962
#define USHRT_MAX USHRT_MAX19,997
#define SHRT_MAX SHRT_MAX20,1039
#define SHRT_MIN SHRT_MIN21,1088
#define UINT_MAX UINT_MAX22,1122
#define INT_MAX INT_MAX23,1162
#define INT_MIN INT_MIN24,1208
#define ULONG_MAX ULONG_MAX25,1241
#define LONG_MAX LONG_MAX26,1283
#define LONG_MIN LONG_MIN27,1331
#define UPTR_MAX UPTR_MAX29,1366

kernel/include/types.h,1226
#define NULL NULL16,869
typedef signed char        int8_t;int8_t18,885
typedef unsigned char      uint8_t;uint8_t19,920
typedef signed short       int16_t;int16_t20,956
typedef unsigned short     uint16_t;uint16_t21,992
typedef signed int         int32_t;int32_t22,1029
typedef unsigned int       uint32_t;uint32_t23,1065
typedef signed long long   int64_t;int64_t25,1124
typedef unsigned long long uint64_t;uint64_t26,1160
typedef signed int         intptr_t;intptr_t27,1197
typedef unsigned int       uintptr_t;uintptr_t28,1234
typedef signed long        int64_t;int64_t30,1319
typedef unsigned long      uint64_t;uint64_t31,1355
typedef signed long        intptr_t;intptr_t32,1392
typedef unsigned long      uintptr_t;uintptr_t33,1429
typedef uint32_t           size_t;size_t36,1475
typedef int32_t            ssize_t;ssize_t37,1510
typedef int32_t            off_t;off_t38,1546
typedef int64_t            off64_t;off64_t39,1580
typedef int32_t            pid_t;pid_t40,1616
typedef uint16_t           mode_t;mode_t41,1650
typedef uint32_t           blocknum_t;blocknum_t42,1685
typedef uint32_t           ino_t;ino_t43,1724
typedef uint32_t           devid_t;devid_t44,1758

kernel/include/fs/vfs_privtest.h,0

kernel/include/fs/s5fs/s5fs_privtest.h,51
#define __S5FS_PRIVTEST_H__S5FS_PRIVTEST_H13,837

kernel/include/fs/s5fs/s5fs_subr.h,188
#define VNODE_TO_S5FS(VNODE_TO_S5FS44,1784
#define VNODE_TO_S5INODE(VNODE_TO_S5INODE45,1849
#define S5FS_TO_VMOBJ(S5FS_TO_VMOBJ46,1910
#define s5_dirty_inode(s5_dirty_inode52,2124

kernel/include/fs/s5fs/s5fs.h,2987
#define S5_SUPER_BLOCK S5_SUPER_BLOCK31,1097
#define S5_IS_SUPER(S5_IS_SUPER32,1173
#define S5_NBLKS_PER_FNODE S5_NBLKS_PER_FNODE33,1235
#define S5_BLOCK_SIZE S5_BLOCK_SIZE34,1270
#define S5_NDIRECT_BLOCKS S5_NDIRECT_BLOCKS35,1307
#define S5_INODES_PER_BLOCK S5_INODES_PER_BLOCK36,1342
#define S5_DIRENTS_PER_BLOCK S5_DIRENTS_PER_BLOCK37,1412
#define S5_MAX_FILE_BLOCKS S5_MAX_FILE_BLOCKS38,1482
#define S5_NAME_LEN S5_NAME_LEN39,1571
#define S5_TYPE_FREE S5_TYPE_FREE41,1607
#define S5_TYPE_DATA S5_TYPE_DATA42,1643
#define S5_TYPE_DIR S5_TYPE_DIR43,1679
#define S5_TYPE_CHR S5_TYPE_CHR44,1715
#define S5_TYPE_BLK S5_TYPE_BLK45,1751
#define S5_MAGIC S5_MAGIC47,1788
#define S5_CURRENT_VERSION S5_CURRENT_VERSION48,1827
#define S5_NIDIRECT_BLOCKS S5_NIDIRECT_BLOCKS51,1914
#define S5_DATA_BLOCK(S5_DATA_BLOCK54,2048
#define S5_DATA_OFFSET(S5_DATA_OFFSET57,2180
#define S5_INODE_BLOCK(S5_INODE_BLOCK60,2311
#define S5_INODE_OFFSET(S5_INODE_OFFSET66,2516
#define FS_TO_S5FS(FS_TO_S5FS69,2641
typedef struct s5_super {s5_super83,3043
        uint32_t s5s_magic;              /* the magic number */s5s_magic84,3069
        uint32_t s5s_free_inode;         /* the free inode pointer */s5s_free_inode85,3133
        uint32_t s5s_nfree;              /* number of blocks currently ins5s_nfree86,3203
        uint32_t s5s_free_blocks[S5_NBLKS_PER_FNODE];s5s_free_blocks89,3387
        uint32_t s5s_root_inode;         /* root inode */s5s_root_inode91,3442
        uint32_t s5s_num_inodes;         /* number of inodes */s5s_num_inodes92,3500
        uint32_t s5s_version;            /* version of this disk format */s5s_version93,3564
} s5_super_t;s5_super_t94,3639
typedef struct s5_inode {s5_inode97,3705
                uint32_t s5_next_free; /* inode free list ptr */s5_next_free99,3747
                uint32_t s5_size;      /* file size */s5_size100,3812
        } s5_un;s5_un101,3867
#define        s5_next_free s5_next_free102,3884
#define        s5_size s5_size103,3931
        uint32_t   s5_number;              /* this inode's number */s5_number104,3973
        uint16_t   s5_type;         /* one of S5_TYPE_{FREE,DATA,DIR} */s5_type105,4042
        int16_t    s5_linkcount;    /* link count of this inode */s5_linkcount106,4115
        uint32_t   s5_direct_blocks[S5_NDIRECT_BLOCKS];s5_direct_blocks107,4182
        uint32_t   s5_indirect_block;s5_indirect_block108,4238
} s5_inode_t;s5_inode_t109,4276
typedef struct s5_dirent {s5_dirent112,4351
        uint32_t   s5d_inode;s5d_inode113,4378
        char       s5d_name[S5_NAME_LEN];s5d_name114,4408
} s5_dirent_t;s5_dirent_t115,4450
typedef struct s5fs {s5fs119,4563
        blockdev_t              *s5f_bdev;s5f_bdev120,4585
        s5_super_t              *s5f_super;s5f_super121,4628
        kmutex_t                s5f_mutex;s5f_mutex122,4672
        fs_t                    *s5f_fs;s5f_fs123,4715
} s5fs_t;s5fs_t124,4756

kernel/include/fs/vfs.h,804
#define name_match(name_match25,1013
typedef struct fs_ops {fs_ops28,1134
        void (*read_vnode)(struct vnode *vn);read_vnode45,1645
        void (*delete_vnode)(struct vnode *vn);delete_vnode54,1969
        int (*query_vnode)(struct vnode *vn);query_vnode62,2329
        int (*umount)(struct fs *fs);umount71,2685
} fs_ops_t;fs_ops_t72,2723
#define STR_MAX STR_MAX75,2752
typedef struct fs {fs79,2817
        char            fs_dev[STR_MAX];fs_dev85,3081
        char            fs_type[STR_MAX];fs_type92,3419
        struct vnode    *fs_mtpt;fs_mtpt100,3729
        list_link_t     fs_link;fs_link106,3938
        fs_ops_t        *fs_op;fs_op118,4275
        struct vnode    *fs_root;fs_root125,4534
        void            *fs_i;fs_i128,4609
} fs_t;fs_t129,4640

kernel/include/fs/stat.h,878
struct stat {stat23,953
        int st_mode;st_mode24,967
        int st_ino;st_ino25,988
        int st_dev;st_dev26,1008
        int st_rdev;st_rdev27,1028
        int st_nlink;st_nlink28,1049
        int st_uid;st_uid29,1071
        int st_gid;st_gid30,1091
        int st_size;st_size31,1111
        int st_atime;st_atime32,1132
        int st_mtime;st_mtime33,1154
        int st_ctime;st_ctime34,1176
        int st_blksize;st_blksize35,1198
        int st_blocks;st_blocks36,1222
#define S_IFCHR S_IFCHR41,1276
#define S_IFDIR S_IFDIR42,1332
#define S_IFBLK S_IFBLK43,1379
#define S_IFREG S_IFREG44,1430
#define S_IFLNK S_IFLNK45,1475
#define _S_TYPE(_S_TYPE47,1521
#define S_ISCHR(S_ISCHR48,1560
#define S_ISDIR(S_ISDIR49,1608
#define S_ISBLK(S_ISBLK50,1656
#define S_ISREG(S_ISREG51,1704
#define S_ISLNK(S_ISLNK52,1752

kernel/include/fs/file.h,408
#define FMODE_READ FMODE_READ16,845
#define FMODE_WRITE FMODE_WRITE17,869
#define FMODE_APPEND FMODE_APPEND18,893
typedef struct file {file22,933
        off_t                   f_pos;f_pos28,1182
        int                     f_mode;f_mode36,1523
        int                     f_refcount;f_refcount42,1709
        struct vnode            *f_vnode;f_vnode47,1830
} file_t;file_t48,1872

kernel/include/fs/open.h,0

kernel/include/fs/ramfs/ramfs.h,0

kernel/include/fs/fcntl.h,200
#define O_RDONLY O_RDONLY21,952
#define O_WRONLY O_WRONLY22,978
#define O_RDWR O_RDWR23,1004
#define O_CREAT O_CREAT26,1067
#define O_TRUNC O_TRUNC27,1134
#define O_APPEND O_APPEND28,1197

kernel/include/fs/lseek.h,102
#define SEEK_SET SEEK_SET14,825
#define SEEK_CUR SEEK_CUR15,851
#define SEEK_END SEEK_END16,877

kernel/include/fs/vnode.h,2537
typedef struct vnode_ops {vnode_ops36,1212
        int (*read)(struct vnode *file, off_t offset, void *buf, size_t count);read49,1815
        int (*write)(struct vnode *file, off_t offset, const void *buf, size_t count);write58,2297
        int (*mmap)(struct vnode *file, struct vmarea *vma, struct mmobj **ret);mmap72,3072
        int (*create)(struct vnode *dir, const char *name,create80,3398
        int (*mknod)(struct vnode *dir, const char *name, size_t name_len,mknod87,3683
        int (*lookup)(struct vnode *dir, const char *name, size_t name_len,lookup92,3904
        int (*link)(struct vnode *oldvnode, struct vnode *dir,link98,4149
        int (*unlink)(struct vnode *dir, const char *name, size_t name_len);unlink103,4364
        int (*mkdir)(struct vnode *dir,  const char *name, size_t name_len);mkdir107,4520
        int (*rmdir)(struct vnode *dir,  const char *name, size_t name_len);rmdir112,4767
        int (*readdir)(struct vnode *dir, off_t offset, struct dirent *d);readdir121,5264
        int (*stat)(struct vnode *vnode, struct stat *buf);stat128,5532
        int (*fillpage)(struct vnode *vnode, off_t offset, void *pagebuf);fillpage138,5856
        int (*dirtypage)(struct vnode *vnode, off_t offset);dirtypage149,6458
        int (*cleanpage)(struct vnode *vnode, off_t offset, void *pagebuf);cleanpage155,6704
} vnode_ops_t;vnode_ops_t156,6780
#define VN_BUSY VN_BUSY159,6797
typedef struct vnode {vnode161,6825
        struct vnode_ops   *vn_ops;vn_ops166,7016
        struct fs          *vn_fs;vn_fs173,7251
        struct vnode       *vn_mount;vn_mount181,7655
        struct mmobj       vn_mmobj;vn_mmobj193,8081
#define                    vn_refcount vn_refcount199,8276
#define                    vn_nrespages vn_nrespages206,8550
        ino_t              vn_vno;vn_vno213,8821
        int                vn_mode;vn_mode218,8915
        off_t              vn_len;vn_len226,9231
        kmutex_t           vn_mutex;vn_mutex232,9421
        void              *vn_i;vn_i238,9586
        devid_t            vn_devid;vn_devid247,9879
        bytedev_t         *vn_cdev;vn_cdev254,10061
        blockdev_t        *vn_bdev;vn_bdev259,10232
        list_link_t        vn_link;        /* link on system vnode list */vn_link262,10343
        int                vn_flags;       /* VN_BUSY */vn_flags263,10418
        ktqueue_t          vn_waitq;       /* queue of threads waiting for vnodevn_waitq264,10475
} vnode_t;vnode_t266,10624

kernel/include/fs/vfs_syscall.h,0

kernel/include/fs/dirent.h,339
typedef struct dirent {dirent25,1024
        ino_t   d_ino;                  /* entry inode number */d_ino26,1048
        off_t   d_off;                  /* seek pointer of next entry */d_off27,1113
        char    d_name[NAME_LEN + 1];   /* filename */d_name28,1186
} dirent_t;dirent_t29,1241
#define d_fileno d_fileno31,1254

kernel/include/main/gdt.h,287
#define GDT_COUNT GDT_COUNT16,845
#define GDT_ZERO GDT_ZERO18,867
#define GDT_KERNEL_TEXT GDT_KERNEL_TEXT19,896
#define GDT_KERNEL_DATA GDT_KERNEL_DATA20,925
#define GDT_USER_TEXT GDT_USER_TEXT21,954
#define GDT_USER_DATA GDT_USER_DATA22,983
#define GDT_TSS GDT_TSS23,1012

kernel/include/main/cpuid.h,5588
#define CPUID_VENDOR_AMD CPUID_VENDOR_AMD15,847
#define CPUID_VENDOR_INTEL CPUID_VENDOR_INTEL16,896
#define CPUID_VENDOR_VIA CPUID_VENDOR_VIA17,945
#define CPUID_VENDOR_OLDTRANSMETA CPUID_VENDOR_OLDTRANSMETA18,994
#define CPUID_VENDOR_TRANSMETA CPUID_VENDOR_TRANSMETA19,1043
#define CPUID_VENDOR_CYRIX CPUID_VENDOR_CYRIX20,1092
#define CPUID_VENDOR_CENTAUR CPUID_VENDOR_CENTAUR21,1141
#define CPUID_VENDOR_NEXGEN CPUID_VENDOR_NEXGEN22,1190
#define CPUID_VENDOR_UMC CPUID_VENDOR_UMC23,1239
#define CPUID_VENDOR_SIS CPUID_VENDOR_SIS24,1288
#define CPUID_VENDOR_NSC CPUID_VENDOR_NSC25,1337
#define CPUID_VENDOR_RISE CPUID_VENDOR_RISE26,1386
        CPUID_FEAT_ECX_SSE3         = 1 << 0,CPUID_FEAT_ECX_SSE329,1443
        CPUID_FEAT_ECX_PCLMUL       = 1 << 1,CPUID_FEAT_ECX_PCLMUL30,1489
        CPUID_FEAT_ECX_DTES64       = 1 << 2,CPUID_FEAT_ECX_DTES6431,1535
        CPUID_FEAT_ECX_MONITOR      = 1 << 3,CPUID_FEAT_ECX_MONITOR32,1581
        CPUID_FEAT_ECX_DS_CPL       = 1 << 4,CPUID_FEAT_ECX_DS_CPL33,1627
        CPUID_FEAT_ECX_VMX          = 1 << 5,CPUID_FEAT_ECX_VMX34,1673
        CPUID_FEAT_ECX_SMX          = 1 << 6,CPUID_FEAT_ECX_SMX35,1719
        CPUID_FEAT_ECX_EST          = 1 << 7,CPUID_FEAT_ECX_EST36,1765
        CPUID_FEAT_ECX_TM2          = 1 << 8,CPUID_FEAT_ECX_TM237,1811
        CPUID_FEAT_ECX_SSSE3        = 1 << 9,CPUID_FEAT_ECX_SSSE338,1857
        CPUID_FEAT_ECX_CID          = 1 << 10,CPUID_FEAT_ECX_CID39,1903
        CPUID_FEAT_ECX_FMA          = 1 << 12,CPUID_FEAT_ECX_FMA40,1950
        CPUID_FEAT_ECX_CX16         = 1 << 13,CPUID_FEAT_ECX_CX1641,1997
        CPUID_FEAT_ECX_ETPRD        = 1 << 14,CPUID_FEAT_ECX_ETPRD42,2044
        CPUID_FEAT_ECX_PDCM         = 1 << 15,CPUID_FEAT_ECX_PDCM43,2091
        CPUID_FEAT_ECX_DCA          = 1 << 18,CPUID_FEAT_ECX_DCA44,2138
        CPUID_FEAT_ECX_SSE4_1       = 1 << 19,CPUID_FEAT_ECX_SSE4_145,2185
        CPUID_FEAT_ECX_SSE4_2       = 1 << 20,CPUID_FEAT_ECX_SSE4_246,2232
        CPUID_FEAT_ECX_x2APIC       = 1 << 21,CPUID_FEAT_ECX_x2APIC47,2279
        CPUID_FEAT_ECX_MOVBE        = 1 << 22,CPUID_FEAT_ECX_MOVBE48,2326
        CPUID_FEAT_ECX_POPCNT       = 1 << 23,CPUID_FEAT_ECX_POPCNT49,2373
        CPUID_FEAT_ECX_XSAVE        = 1 << 26,CPUID_FEAT_ECX_XSAVE50,2420
        CPUID_FEAT_ECX_OSXSAVE      = 1 << 27,CPUID_FEAT_ECX_OSXSAVE51,2467
        CPUID_FEAT_ECX_AVX          = 1 << 28,CPUID_FEAT_ECX_AVX52,2514
        CPUID_FEAT_EDX_FPU          = 1 << 0,CPUID_FEAT_EDX_FPU54,2562
        CPUID_FEAT_EDX_VME          = 1 << 1,CPUID_FEAT_EDX_VME55,2608
        CPUID_FEAT_EDX_DE           = 1 << 2,CPUID_FEAT_EDX_DE56,2654
        CPUID_FEAT_EDX_PSE          = 1 << 3,CPUID_FEAT_EDX_PSE57,2700
        CPUID_FEAT_EDX_TSC          = 1 << 4,CPUID_FEAT_EDX_TSC58,2746
        CPUID_FEAT_EDX_MSR          = 1 << 5,CPUID_FEAT_EDX_MSR59,2792
        CPUID_FEAT_EDX_PAE          = 1 << 6,CPUID_FEAT_EDX_PAE60,2838
        CPUID_FEAT_EDX_MCE          = 1 << 7,CPUID_FEAT_EDX_MCE61,2884
        CPUID_FEAT_EDX_CX8          = 1 << 8,CPUID_FEAT_EDX_CX862,2930
        CPUID_FEAT_EDX_APIC         = 1 << 9,CPUID_FEAT_EDX_APIC63,2976
        CPUID_FEAT_EDX_SEP          = 1 << 11,CPUID_FEAT_EDX_SEP64,3022
        CPUID_FEAT_EDX_MTRR         = 1 << 12,CPUID_FEAT_EDX_MTRR65,3069
        CPUID_FEAT_EDX_PGE          = 1 << 13,CPUID_FEAT_EDX_PGE66,3116
        CPUID_FEAT_EDX_MCA          = 1 << 14,CPUID_FEAT_EDX_MCA67,3163
        CPUID_FEAT_EDX_CMOV         = 1 << 15,CPUID_FEAT_EDX_CMOV68,3210
        CPUID_FEAT_EDX_PAT          = 1 << 16,CPUID_FEAT_EDX_PAT69,3257
        CPUID_FEAT_EDX_PSE36        = 1 << 17,CPUID_FEAT_EDX_PSE3670,3304
        CPUID_FEAT_EDX_PSN          = 1 << 18,CPUID_FEAT_EDX_PSN71,3351
        CPUID_FEAT_EDX_CLF          = 1 << 19,CPUID_FEAT_EDX_CLF72,3398
        CPUID_FEAT_EDX_DTES         = 1 << 21,CPUID_FEAT_EDX_DTES73,3445
        CPUID_FEAT_EDX_ACPI         = 1 << 22,CPUID_FEAT_EDX_ACPI74,3492
        CPUID_FEAT_EDX_MMX          = 1 << 23,CPUID_FEAT_EDX_MMX75,3539
        CPUID_FEAT_EDX_FXSR         = 1 << 24,CPUID_FEAT_EDX_FXSR76,3586
        CPUID_FEAT_EDX_SSE          = 1 << 25,CPUID_FEAT_EDX_SSE77,3633
        CPUID_FEAT_EDX_SSE2         = 1 << 26,CPUID_FEAT_EDX_SSE278,3680
        CPUID_FEAT_EDX_SS           = 1 << 27,CPUID_FEAT_EDX_SS79,3727
        CPUID_FEAT_EDX_HTT          = 1 << 28,CPUID_FEAT_EDX_HTT80,3774
        CPUID_FEAT_EDX_TM1          = 1 << 29,CPUID_FEAT_EDX_TM181,3821
        CPUID_FEAT_EDX_IA64         = 1 << 30,CPUID_FEAT_EDX_IA6482,3868
        CPUID_FEAT_EDX_PBE          = 1 << 31CPUID_FEAT_EDX_PBE83,3915
enum cpuid_requests {cpuid_requests86,3965
        CPUID_GETVENDORSTRING,CPUID_GETVENDORSTRING87,3987
        CPUID_GETFEATURES,CPUID_GETFEATURES88,4018
        CPUID_GETTLB,CPUID_GETTLB89,4045
        CPUID_GETSERIAL,CPUID_GETSERIAL90,4067
        CPUID_INTELEXTENDED = 0x80000000,CPUID_INTELEXTENDED92,4093
        CPUID_INTELFEATURES,CPUID_INTELFEATURES93,4135
        CPUID_INTELBRANDSTRING,CPUID_INTELBRANDSTRING94,4164
        CPUID_INTELBRANDSTRINGMORE,CPUID_INTELBRANDSTRINGMORE95,4196
        CPUID_INTELBRANDSTRINGEND,CPUID_INTELBRANDSTRINGEND96,4232
static inline void cpuid(int request, uint32_t *a, uint32_t *d)cpuid99,4271
static inline void cpuid_get_msr(uint32_t msr, uint32_t* lo, uint32_t* hi)cpuid_get_msr104,4407
static inline void cpuid_set_msr(uint32_t msr, uint32_t lo, uint32_t hi)cpuid_set_msr109,4544
static inline void io_wait(void)io_wait114,4676

kernel/include/main/io.h,356
static inline void outb(uint16_t port, uint8_t val)outb17,865
static inline uint8_t inb(uint16_t port)inb22,986
static inline void outw(uint16_t port, uint16_t val)outw29,1137
static inline uint16_t inw(uint16_t port)inw34,1259
static inline void outl(uint16_t port, uint32_t val)outl41,1412
static inline uint32_t inl(uint16_t port)inl46,1534

kernel/include/main/pit.h,0

kernel/include/main/entry.h,0

kernel/include/main/acpi.h,454
struct acpi_header {acpi_header14,825
        uint32_t ah_sign;ah_sign15,846
        uint32_t ah_size;ah_size16,872
        uint8_t ah_rev;ah_rev17,898
        uint8_t ah_checksum;ah_checksum18,922
        uint8_t ah_oemid[6];ah_oemid19,951
        uint8_t ah_tableid[8];ah_tableid20,980
        uint32_t ah_oemrev;ah_oemrev21,1011
        uint32_t ah_creatorid;ah_creatorid22,1039
        uint32_t ah_creatorrev;ah_creatorrev23,1070

kernel/include/main/interrupt.h,2644
#define INTR_DIVIDE_BY_ZERO INTR_DIVIDE_BY_ZERO19,889
#define INTR_INVALID_OPCODE INTR_INVALID_OPCODE20,922
#define INTR_GPF INTR_GPF21,955
#define INTR_PAGE_FAULT INTR_PAGE_FAULT22,977
#define INTR_PIT INTR_PIT24,1007
#define INTR_APICTIMER INTR_APICTIMER25,1029
#define INTR_KEYBOARD INTR_KEYBOARD26,1057
#define INTR_DISK_PRIMARY INTR_DISK_PRIMARY27,1084
#define INTR_DISK_SECONDARY INTR_DISK_SECONDARY28,1115
#define IPL_LOW IPL_LOW33,1264
#define IPL_HIGH IPL_HIGH34,1282
typedef struct regs {regs36,1307
        uint32_t r_es, r_ds; /* pushed manually */r_es37,1329
        uint32_t r_es, r_ds; /* pushed manually */r_ds37,1329
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_edi38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_esi38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_ebp38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_esp38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_ebx38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_edx38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_ecx38,1380
        uint32_t r_edi, r_esi, r_ebp, r_esp, r_ebx, r_edx, r_ecx, r_eax; /* pushed by pusha */r_eax38,1380
        uint32_t r_intr, r_err; /* intr number and error code */r_intr39,1475
        uint32_t r_intr, r_err; /* intr number and error code */r_err39,1475
        uint32_t r_eip, r_cs, r_eflags, r_useresp, r_ss; /* pushed by the processor automatically */r_eip40,1540
        uint32_t r_eip, r_cs, r_eflags, r_useresp, r_ss; /* pushed by the processor automatically */r_cs40,1540
        uint32_t r_eip, r_cs, r_eflags, r_useresp, r_ss; /* pushed by the processor automatically */r_eflags40,1540
        uint32_t r_eip, r_cs, r_eflags, r_useresp, r_ss; /* pushed by the processor automatically */r_useresp40,1540
        uint32_t r_eip, r_cs, r_eflags, r_useresp, r_ss; /* pushed by the processor automatically */r_ss40,1540
} regs_t;regs_t41,1641
typedef void (*intr_handler_t)(regs_t *regs);intr_handler_t50,1967
static inline void intr_enable()intr_enable60,2454
static inline void intr_disable()intr_disable65,2525
static inline void intr_wait()intr_wait74,2760
static inline void intr_setipl(uint8_t ipl)intr_setipl90,3480
static inline uint8_t intr_getipl()intr_getipl96,3609

kernel/include/main/apic.h,0

kernel/include/util/printf.h,0

kernel/include/util/list.h,968
typedef struct list {list62,2451
        struct list *l_next;l_next63,2473
        struct list *l_prev;l_prev64,2502
} list_t, list_link_t;list_t65,2531
} list_t, list_link_t;list_link_t65,2531
#define list_link_init(list_link_init67,2555
#define list_link_is_linked(list_link_is_linked72,2799
#define list_init(list_init75,2937
#define list_empty(list_empty80,3181
#define list_insert_before(list_insert_before83,3291
#define list_insert_head(list_insert_head93,3903
#define list_insert_tail(list_insert_tail96,4027
#define list_remove(list_remove99,4141
#define list_remove_head(list_remove_head109,4753
#define list_remove_tail(list_remove_tail112,4864
#define list_item(list_item115,4975
#define list_head(list_head118,5106
#define list_tail(list_tail121,5229
#define list_iterate_begin(list_iterate_begin124,5352
#define list_iterate_reverse(list_iterate_reverse135,6046
#define list_iterate_end(list_iterate_end146,6740

kernel/include/util/string.h,0

kernel/include/util/init.h,130
#define init_func(init_func14,825
#define init_depends(init_depends21,1136
typedef void (*init_func_t)();init_func_t29,1448

kernel/include/util/debug.h,2488
#define _NORMAL_ _NORMAL_24,1008
#define _BLACK_ _BLACK_25,1038
#define _RED_ _RED_26,1072
#define _GREEN_ _GREEN_27,1106
#define _YELLOW_ _YELLOW_28,1140
#define _BLUE_ _BLUE_29,1174
#define _MAGENTA_ _MAGENTA_30,1208
#define _CYAN_ _CYAN_31,1242
#define _WHITE_ _WHITE_32,1276
#define _BRED_ _BRED_34,1311
#define _BGREEN_ _BGREEN_35,1347
#define _BYELLOW_ _BYELLOW_36,1383
#define _BBLUE_ _BBLUE_37,1419
#define _BMAGENTA_ _BMAGENTA_38,1455
#define _BCYAN_ _BCYAN_39,1491
#define _BWHITE_ _BWHITE_40,1527
#define DBG_MODE(DBG_MODE42,1564
#define DBG_ALL DBG_ALL47,1749
#define DBG_CORE DBG_CORE48,1824
#define DBG_MM DBG_MM49,1899
#define DBG_INIT DBG_INIT50,1974
#define DBG_SCHED DBG_SCHED51,2049
#define DBG_DISK DBG_DISK52,2124
#define DBG_TEMP DBG_TEMP53,2199
#define DBG_KMALLOC DBG_KMALLOC54,2278
#define DBG_PAGEALLOC DBG_PAGEALLOC55,2353
#define DBG_INTR DBG_INTR56,2428
#define DBG_TERM DBG_TERM57,2503
#define DBG_FORK DBG_FORK58,2578
#define DBG_PROC DBG_PROC59,2653
#define DBG_VNREF DBG_VNREF60,2728
#define DBG_PFRAME DBG_PFRAME61,2803
#define DBG_ERROR DBG_ERROR62,2878
#define DBG_SYSCALL DBG_SYSCALL63,2953
#define DBG_FREF DBG_FREF64,3028
#define DBG_PGTBL DBG_PGTBL65,3103
#define DBG_BRK DBG_BRK66,3178
#define DBG_EXEC DBG_EXEC67,3257
#define DBG_VFS DBG_VFS68,3332
#define DBG_S5FS DBG_S5FS69,3407
#define DBG_KB DBG_KB70,3482
#define DBG_THR DBG_THR71,3557
#define DBG_PRINT DBG_PRINT72,3632
#define DBG_OSYSCALL DBG_OSYSCALL73,3707
#define DBG_VM DBG_VM74,3782
#define DBG_TEST DBG_TEST75,3857
#define DBG_TESTPASS DBG_TESTPASS76,3932
#define DBG_TESTFAIL DBG_TESTFAIL77,4007
#define DBG_MEMDEV DBG_MEMDEV79,4083
#define DBG_ANON DBG_ANON80,4168
#define DBG_VMMAP DBG_VMMAP81,4243
#define DBG_ELF DBG_ELF82,4318
#define DBG_USER DBG_USER83,4393
#define DBG_DEFAULT DBG_DEFAULT84,4468
#define DBG_TAB DBG_TAB94,4959
typedef size_t (*dbg_infofunc_t)(const void *data, char *buf, size_t size);dbg_infofunc_t151,7913
#define DBG_BUFFER_SIZE DBG_BUFFER_SIZE152,7989
#define dbg(dbg161,8233
#define dbgq(dbgq171,8797
#define dbginfo(dbginfo180,9279
#define dbg_active(dbg_active189,9761
#define dbg(dbg193,9889
#define dbg_active(dbg_active194,9912
#define dbg_add_mode(dbg_add_mode195,9939
#define dbg_add_modes(dbg_add_modes196,9966
#define panic(panic200,10125
#define KASSERT(KASSERT203,10225
#define KASSERT(KASSERT205,10311

kernel/include/util/delay.h,400
#define LOOPS_PER_JIFFY LOOPS_PER_JIFFY17,936
#define HZ HZ18,970
static void __delay(unsigned long loops)__delay35,1578
static inline void __const_udelay(unsigned long xloops)__const_udelay56,2020
static inline void __udelay(unsigned long usecs)__udelay72,2332
static inline void __ndelay(unsigned long nsecs)__ndelay77,2448
#define udelay(udelay82,2567
#define ndelay(ndelay86,2749

kernel/include/util/gdb.h,92
#define GDB_DEFINE_HOOK(GDB_DEFINE_HOOK14,825
#define GDB_CALL_HOOK(GDB_CALL_HOOK16,913

kernel/include/util/bits.h,137
#define BIT(BIT17,865
bit_flip(void *addr, uintptr_t bit)bit_flip20,909
bit_check(const void *addr, uintptr_t bit)bit_check28,1084

kernel/include/boot/config.h,98
#define KERNEL_PHYS_BASE KERNEL_PHYS_BASE14,825
#define MEMORY_MAP_BASE MEMORY_MAP_BASE15,859

kernel/vm/vmmap.c,1155
static slab_allocator_t *vmmap_allocator;vmmap_allocator38,1260
static slab_allocator_t *vmarea_allocator;vmarea_allocator39,1302
vmmap_init(void)vmmap_init42,1351
vmarea_alloc(void)vmarea_alloc51,1701
vmarea_free(vmarea_t *vma)vmarea_free61,1901
vmmap_mapping_info(const void *vmmap, char *buf, size_t osize)vmmap_mapping_info69,2090
vmmap_create(void)vmmap_create120,3821
vmmap_destroy(vmmap_t *map)vmmap_destroy129,4000
vmmap_insert(vmmap_t *map, vmarea_t *newvma)vmmap_insert139,4323
vmmap_find_range(vmmap_t *map, uint32_t npages, int dir)vmmap_find_range152,4829
vmmap_lookup(vmmap_t *map, uint32_t vfn)vmmap_lookup162,5131
vmmap_clone(vmmap_t *map)vmmap_clone173,5504
vmmap_map(vmmap_t *map, vnode_t *file, uint32_t lopage, uint32_t npages,vmmap_map205,6792
vmmap_remove(vmmap_t *map, uint32_t lopage, uint32_t npages)vmmap_remove242,8080
vmmap_is_range_empty(vmmap_t *map, uint32_t startvfn, uint32_t npages)vmmap_is_range_empty253,8318
vmmap_read(vmmap_t *map, const void *vaddr, void *buf, size_t count)vmmap_read268,8959
vmmap_write(vmmap_t *map, void *vaddr, const void *buf, size_t count)vmmap_write283,9603

kernel/vm/brk.c,46
do_brk(void *addr, void **ret)do_brk68,3062

kernel/vm/pagefault.c,75
handle_pagefault(uintptr_t vaddr, uint32_t cause)handle_pagefault63,2487

kernel/vm/anon.c,638
int anon_count = 0; /* for debugging/verification purposes */anon_count25,1029
static slab_allocator_t *anon_allocator;anon_allocator27,1092
static mmobj_ops_t anon_mmobj_ops = {anon_mmobj_ops36,1452
anon_init()anon_init51,1852
anon_create()anon_create63,2154
anon_ref(mmobj_t *o)anon_ref75,2354
anon_put(mmobj_t *o)anon_put89,2813
anon_lookuppage(mmobj_t *o, uint32_t pagenum, int forwrite, pframe_t **pf)anon_lookuppage97,2980
anon_fillpage(mmobj_t *o, pframe_t *pf)anon_fillpage106,3204
anon_dirtypage(mmobj_t *o, pframe_t *pf)anon_dirtypage113,3328
anon_cleanpage(mmobj_t *o, pframe_t *pf)anon_cleanpage120,3455

kernel/vm/shadowd.c,625
static ktqueue_t shadowd_waitq, kmem_alloc_waitq;shadowd_waitq26,1041
static ktqueue_t shadowd_waitq, kmem_alloc_waitq;kmem_alloc_waitq26,1041
static int shadowd_initialized = 0;shadowd_initialized27,1091
shadowd_wakeup()shadowd_wakeup30,1133
shadowd_alloc_sleep()shadowd_alloc_sleep40,1415
shadowd(int arg1, void *arg2)shadowd66,2247
static proc_t *shadowd_proc;shadowd_proc124,6361
static kthread_t *shadowd_thr;shadowd_thr125,6390
shadowd_init()shadowd_init128,6458
init_func(shadowd_init);shadowd_init143,6902
init_depends(sched_init);sched_init144,6927
shadowd_shutdown()shadowd_shutdown150,6988

kernel/vm/shadow.c,825
#define SHADOW_SINGLETON_THRESHOLD SHADOW_SINGLETON_THRESHOLD29,1099
int shadow_count = 0; /* for debugging/verification purposes */shadow_count31,1137
static int shadow_singleton_count = 0;shadow_singleton_count37,1349
static slab_allocator_t *shadow_allocator;shadow_allocator40,1396
static mmobj_ops_t shadow_mmobj_ops = {shadow_mmobj_ops49,1770
shadow_init()shadow_init64,2183
shadow_create()shadow_create76,2491
shadow_ref(mmobj_t *o)shadow_ref88,2695
shadow_put(mmobj_t *o)shadow_put102,3154
shadow_lookuppage(mmobj_t *o, uint32_t pagenum, int forwrite, pframe_t **pf)shadow_lookuppage117,3870
shadow_fillpage(mmobj_t *o, pframe_t *pf)shadow_fillpage135,4748
shadow_dirtypage(mmobj_t *o, pframe_t *pf)shadow_dirtypage144,4927
shadow_cleanpage(mmobj_t *o, pframe_t *pf)shadow_cleanpage151,5058

kernel/vm/mmap.c,121
do_mmap(void *addr, size_t len, int prot, int flags,do_mmap45,1575
do_munmap(void *addr, size_t len)do_munmap61,1961

kernel/api/access.c,454
int copy_from_user(void *kaddr, const void *uaddr, size_t nbytes)copy_from_user34,1292
int copy_to_user(void *uaddr, const void *kaddr, size_t nbytes)copy_to_user42,1534
char *user_strdup(argstr_t *ustr)user_strdup55,2014
char **user_vecdup(argvec_t *uvec)user_vecdup75,2618
int addr_perm(struct proc *p, const void *vaddr, int perm)addr_perm134,4779
int range_perm(struct proc *p, const void *avaddr, size_t len, int perm)range_perm149,5395

kernel/api/exec.c,275
void userland_entry(const regs_t *regs)userland_entry27,1225
int do_execve(const char *filename, char *const *argv, char *const *envp, struct regs *regs)do_execve49,2119
void kernel_execve(const char *filename, char *const *argv, char *const *envp)kernel_execve62,2524

kernel/api/elf32.c,1300
static int _elf32_platform_check(const Elf32_Ehdr *header)_elf32_platform_check35,1199
static int _elf32_map_segment(vmmap_t *map, vnode_t *file, int32_t memoff, const Elf32_Phdr *segment)_elf32_map_segment50,1929
static int _elf32_load_ehdr(int fd, Elf32_Ehdr *header, int interp)_elf32_load_ehdr155,7173
static int _elf32_load_phtable(int fd, Elf32_Ehdr *header, char *pht, size_t size)_elf32_load_phtable198,9129
static int _elf32_map_progsegs(vnode_t *vnode, vmmap_t *map, Elf32_Ehdr *header, char *pht, int32_t memoff)_elf32_map_progsegs229,10188
static int _elf32_find_phinterp(Elf32_Ehdr *header, char *pht, Elf32_Phdr **phinterp)_elf32_find_phinterp262,11403
static void _elf32_calc_progbounds(Elf32_Ehdr *header, char *pht, void **low, void **high)_elf32_calc_progbounds290,12483
static size_t _elf32_calc_argsize(char *const argv[], char *const envp[], Elf32_auxv_t *auxv,_elf32_calc_argsize314,13615
static void _elf32_load_args(vmmap_t *map, void *arglow, size_t argsize, char *buf,_elf32_load_args371,15762
static int _elf32_load(const char *filename, int fd, char *const argv[],_elf32_load452,19301
static __attribute__((unused)) void elf32_init(void)elf32_init729,30017
init_func(elf32_init);elf32_init733,30116
init_depends(binfmt_init);binfmt_init734,30139

kernel/api/binfmt.c,549
struct binfmt {binfmt26,1024
        const char        *bf_id;bf_id27,1040
        binfmt_load_func_t bf_load;bf_load28,1074
        list_link_t        bf_link;bf_link29,1110
static list_t binfmt_list;binfmt_list32,1150
static __attribute__((unused)) void binfmt_init()binfmt_init34,1178
init_func(binfmt_init);binfmt_init38,1265
int binfmt_add(const char *id, binfmt_load_func_t loadfunc)binfmt_add40,1290
int binfmt_load(const char *filename, char *const *argv, char *const *envp, uint32_t *eip, uint32_t *esp)binfmt_load55,1672

kernel/api/syscall.c,1925
static __attribute__((unused)) void syscall_init(void)syscall_init50,1539
init_func(syscall_init);syscall_init54,1652
sys_read(read_args_t *arg)sys_read68,2132
sys_write(write_args_t *arg)sys_write78,2317
sys_getdents(getdents_args_t *arg)sys_getdents94,2909
static int sys_mount(mount_args_t *arg)sys_mount101,3037
static int sys_umount(argstr_t *input)sys_umount141,4050
static int sys_close(int fd)sys_close169,4614
static int sys_dup(int fd)sys_dup180,4812
static int sys_dup2(const dup2_args_t *arg)sys_dup2190,4995
static int sys_mkdir(mkdir_args_t *arg)sys_mkdir206,5442
static int sys_rmdir(argstr_t *arg)sys_rmdir231,6082
static int sys_unlink(argstr_t *arg)sys_unlink256,6709
static int sys_link(link_args_t *arg)sys_link281,7339
static int sys_rename(rename_args_t *arg)sys_rename318,8233
static int sys_chdir(argstr_t *arg)sys_chdir353,9160
static int sys_lseek(lseek_args_t *args)sys_lseek379,9765
static int sys_open(open_args_t *arg)sys_open397,10226
static int sys_munmap(munmap_args_t *args)sys_munmap422,10884
static void *sys_mmap(mmap_args_t *arg)sys_mmap440,11324
static pid_t sys_waitpid(waitpid_args_t *args)sys_waitpid461,11915
static void *sys_brk(void *addr)sys_brk484,12505
static void sys_sync(void)sys_sync497,12760
static void sys_halt(void)sys_halt502,12820
static int sys_stat(stat_args_t *arg)sys_stat507,12877
static int sys_uname(struct utsname *arg)sys_uname540,13627
static int sys_fork(regs_t *regs)sys_fork576,14705
static void free_vector(char **vect)free_vector586,14898
static int sys_execve(execve_args_t *args, regs_t *regs)sys_execve594,15053
static int sys_debug(argstr_t *arg)sys_debug639,16349
static int sys_kshell(int ttyid)sys_kshell656,16748
static void syscall_handler(regs_t *regs)syscall_handler679,17254
static int syscall_dispatch(uint32_t sysnum, uint32_t args, regs_t *regs)syscall_dispatch713,18462

kernel/mm/slab.c,3112
#define front_rz(front_rz36,1413
#define rear_rz(rear_rz37,1466
#define VERIFY_REDZONES(VERIFY_REDZONES40,1699
struct slab {slab51,2384
        struct slab             *s_next;       /* link on list of slabs */s_next52,2398
        int                      s_inuse;      /* number of allocated objs */s_inuse53,2473
        void                    *s_free;       /* head of obj free list */s_free54,2551
        void                    *s_addr;       /* start address */s_addr55,2626
struct slab_allocator {slab_allocator58,2697
        struct slab_allocator   *sa_next;       /* link on list of slab allocators */sa_next59,2721
        const char              *sa_name;       /* user-provided name */sa_name60,2807
        size_t                   sa_objsize;    /* object size */sa_objsize61,2880
        struct slab             *sa_slabs;      /* head of slab list */sa_slabs62,2946
        int                      sa_order;      /* npages = (1 << order) */sa_order63,3018
        int                      sa_slab_nobjs; /* number of objs per slab */sa_slab_nobjs64,3094
struct slab_bufctl {slab_bufctl67,3176
                void                *sb_next;   /* next free object */sb_next69,3213
                struct slab         *sb_slab;   /* containing slab */sb_slab70,3284
        } u;u71,3354
        uint8_t                  sb_free;       /* true if is object is free */sb_free73,3390
#define sb_next sb_next76,3480
#define sb_slab sb_slab77,3522
#define obj_bufctl(obj_bufctl79,3565
#define bufctl_obj(bufctl_obj81,3682
#define next_obj(next_obj83,3785
static struct slab_allocator *slab_allocators = NULL;slab_allocators91,4140
static struct slab_allocator slab_allocator_allocator;slab_allocator_allocator94,4268
#define SLAB_MAX_ORDER SLAB_MAX_ORDER101,4491
_slab_size(size_t objsize, size_t nobjs)_slab_size104,4548
_slab_nobjs(size_t objsize, size_t order)_slab_nobjs111,4708
_slab_waste(size_t objsize, int order)_slab_waste118,4886
_calc_slab_size(struct slab_allocator *allocator)_calc_slab_size129,5265
_allocator_init(struct slab_allocator *allocator, const char *name, size_t size)_allocator_init172,6884
slab_allocator_create(const char *name, size_t size) {slab_allocator_create201,7832
_slab_allocator_grow(struct slab_allocator *allocator)_slab_allocator_grow214,8162
slab_obj_alloc(struct slab_allocator *allocator)slab_obj_alloc274,9955
slab_obj_free(struct slab_allocator *allocator, void *obj)slab_obj_free322,11394
slab_allocators_reclaim(int target)slab_allocators_reclaim359,12509
#define KMALLOC_SIZE_MIN_ORDER KMALLOC_SIZE_MIN_ORDER392,13649
#define KMALLOC_SIZE_MAX_ORDER KMALLOC_SIZE_MAX_ORDER393,13685
static struct slab_allocator *kmalloc_allocators[KMALLOC_SIZE_MAX_ORDER - KMALLOC_SIZE_MIN_ORDER + 1];kmalloc_allocators395,13723
static const char *kmalloc_allocator_names[] = {kmalloc_allocator_names400,13960
kmalloc(size_t size)kmalloc417,14294
malloc(size_t size)malloc450,15404
kfree(void *addr)kfree459,15605
free(void *addr)free480,16226
slab_init()slab_init488,16402

kernel/mm/phys.c,643
struct mmap_entry {mmap_entry21,924
        uint32_t me_baselo;me_baselo22,944
        uint32_t me_basehi;me_basehi23,972
        uint32_t me_lenlo;me_lenlo24,1000
        uint32_t me_lenhi;me_lenhi25,1027
        uint32_t me_type;me_type26,1054
        uint32_t me_reserved;me_reserved27,1080
struct mmap_def {mmap_def30,1114
        uint32_t           md_count;md_count31,1132
        struct mmap_entry  md_ents[];md_ents32,1169
static char *type_strings[] = {type_strings35,1211
static size_t type_count = sizeof(type_strings) / sizeof(char *);type_count42,1358
phys_detect_highmem(void)phys_detect_highmem45,1435

kernel/mm/page.c,1448
static list_t pagegroup_list;pagegroup_list32,1185
static uintptr_t page_freecount;page_freecount33,1215
struct pagegroup {pagegroup35,1249
        list_t       pg_freelist[PAGE_NSIZES];pg_freelist36,1268
        void        *pg_map[PAGE_NSIZES];pg_map37,1315
        uintptr_t    pg_baseaddr;pg_baseaddr38,1357
        uintptr_t    pg_endaddr;pg_endaddr39,1391
        list_link_t  pg_link;pg_link40,1424
struct freepage {freepage43,1458
        list_link_t fp_link;fp_link44,1476
_pagegroup_create(uintptr_t start, uintptr_t end)_pagegroup_create48,1535
_pagegroup_from_address(uintptr_t addr)_pagegroup_from_address115,4315
page_init()page_init126,4643
page_add_range(uintptr_t start, uintptr_t end)page_add_range133,4729
_pagegroup_calculate_index(struct pagegroup *group, uint32_t order, uintptr_t addr)_pagegroup_calculate_index162,5906
__page_split(struct pagegroup *group, uint32_t order)__page_split174,6311
_page_split(int order)_page_split208,7859
_page_alloc_order(uint32_t order)_page_alloc_order257,9800
__page_join(struct pagegroup *group, int order, uintptr_t addr)__page_join294,10997
_page_free_order(void *addr, int order)_page_free_order325,12343
page_alloc(void)page_alloc357,13422
page_free(void *addr)page_free369,13683
page_alloc_n(uint32_t npages)page_alloc_n381,13934
page_free_n(void *start, uint32_t npages)page_free_n401,14505
page_free_count()page_free_count419,14989

kernel/mm/pframe.c,1979
static int npinned;npinned85,3416
static list_t pinned_list;pinned_list86,3436
static int nallocated;nallocated93,3716
static list_t alloc_list;alloc_list94,3739
static slab_allocator_t *pframe_allocator;pframe_allocator96,3766
#define hash_page(hash_page101,3948
static list_t pframe_hash[PF_HASH_SIZE];pframe_hash103,4066
static uint32_t nfreepages_min = 0;nfreepages_min107,4146
static uint32_t nfreepages_target = 0;nfreepages_target108,4182
static proc_t *pageoutd = NULL;pageoutd111,4260
static kthread_t *pageoutd_thr = NULL;pageoutd_thr112,4292
static ktqueue_t pageoutd_waitq;pageoutd_waitq113,4331
static ktqueue_t alloc_waitq;alloc_waitq116,4427
#define pageoutd_wakeup(pageoutd_wakeup121,4571
#define pageoutd_needed(pageoutd_needed122,4642
#define pageoutd_target_met(pageoutd_target_met124,4748
pframe_init(void)pframe_init134,5112
pframe_shutdown()pframe_shutdown159,5742
pframe_get_resident(struct mmobj *o, uint32_t pagenum)pframe_get_resident201,7268
pframe_alloc(mmobj_t *o, uint32_t pagenum)pframe_alloc238,8620
pframe_lookup(struct mmobj *o, uint32_t pagenum, int forwrite, pframe_t **result)pframe_lookup270,9530
pframe_migrate(pframe_t *pf, mmobj_t *dest)pframe_migrate287,10036
pframe_fill(pframe_t *pf)pframe_fill315,11066
pframe_get(struct mmobj *o, uint32_t pagenum, pframe_t **result)pframe_get349,12330
pframe_pin(pframe_t *pf)pframe_pin369,12945
pframe_unpin(pframe_t *pf)pframe_unpin385,13414
pframe_dirty(pframe_t *pf)pframe_dirty403,13951
pframe_clean(pframe_t *pf)pframe_clean430,14582
pframe_free(pframe_t *pf)pframe_free470,15952
pframe_clean_all()pframe_clean_all509,17017
pframe_remove_from_pts(pframe_t *pf)pframe_remove_from_pts546,18489
pageoutd_init(void)pageoutd_init573,19705
init_func(pageoutd_init);pageoutd_init588,20208
init_depends(sched_init);sched_init589,20234
pageoutd_exit()pageoutd_exit595,20304
pageoutd_run(int arg1, void *arg2)pageoutd_run611,20837

kernel/mm/pagetable.c,1581
#define PT_ENTRY_COUNT PT_ENTRY_COUNT36,1219
#define PT_VADDR_SIZE PT_VADDR_SIZE37,1277
struct pagedir {pagedir39,1333
        pde_t      pd_physical[PT_ENTRY_COUNT];pd_physical40,1350
        uintptr_t *pd_virtual[PT_ENTRY_COUNT];pd_virtual41,1398
#define vaddr_to_pdindex(vaddr_to_pdindex48,1657
#define vaddr_to_ptindex(vaddr_to_ptindex50,1754
#define vaddr_to_offset(vaddr_to_offset52,1851
static pagedir_t *current_pagedir = NULL;current_pagedir56,1985
static pagedir_t *template_pagedir = NULL;template_pagedir57,2027
static uint32_t phys_map_count = 1;phys_map_count59,2071
static pte_t *final_page;final_page60,2107
pt_phys_tmp_map(uintptr_t paddr)pt_phys_tmp_map63,2144
pt_phys_perm_map(uintptr_t paddr, uint32_t count)pt_phys_perm_map74,2403
pt_virt_to_phys(uintptr_t vaddr)pt_virt_to_phys93,2918
pt_set(pagedir_t *pd)pt_set105,3299
pt_get(void)pt_get113,3506
pt_map(pagedir_t *pd, uintptr_t vaddr, uintptr_t paddr, uint32_t pdflags, uint32_t ptflags)pt_map119,3560
pt_unmap(pagedir_t *pd, uintptr_t vaddr)pt_unmap151,4684
pt_unmap_range(pagedir_t *pd, uintptr_t vlow, uintptr_t vhigh)pt_unmap_range167,5087
pt_create_pagedir()pt_create_pagedir203,6421
pt_destroy_pagedir(pagedir_t *pdir)pt_destroy_pagedir217,6694
_pt_fault_handler(regs_t *regs)_pt_fault_handler235,7176
_pt_fill_page(pagedir_t *pd, pte_t *pt, pde_t pdflags, pte_t ptflags,_pt_fill_page251,7653
pt_init(void)pt_init278,8596
pt_template_init()pt_template_init336,11314
pt_mapping_info(const void *pt, char *buf, size_t osize)pt_mapping_info355,12005

kernel/fs/s5fs/s5fs_subr.c,1008
#define dprintf(dprintf40,1397
#define s5_dirty_super(s5_dirty_super42,1446
s5_seek_to_block(vnode_t *vnode, off_t seekptr, int alloc)s5_seek_to_block75,2768
lock_s5(s5fs_t *fs)lock_s586,2971
unlock_s5(s5fs_t *fs)unlock_s595,3099
s5_write_file(vnode_t *vnode, off_t seek, const char *bytes, size_t len)s5_write_file122,4009
s5_read_file(struct vnode *vnode, off_t seek, char *dest, size_t len)s5_read_file149,4913
s5_alloc_block(s5fs_t *fs)s5_alloc_block173,5673
s5_free_block(s5fs_t *fs, int blockno)s5_free_block190,6057
s5_alloc_inode(fs_t *fs, uint16_t type, devid_t devid)s5_alloc_inode230,7325
s5_free_inode(vnode_t *vnode)s5_free_inode299,9265
s5_find_dirent(vnode_t *vnode, const char *name, size_t namelen)s5_find_dirent371,11621
s5_remove_dirent(vnode_t *vnode, const char *name, size_t namelen)s5_remove_dirent398,12466
s5_link(vnode_t *parent, vnode_t *child, const char *name, size_t namelen)s5_link416,12998
s5_inode_blocks(vnode_t *vnode)s5_inode_blocks432,13389

kernel/fs/s5fs/s5fs.c,1905
fs_ops_t s5fs_fsops = {s5fs_fsops76,2936
static vnode_ops_t s5fs_dir_vops = {s5fs_dir_vops84,3112
static vnode_ops_t s5fs_file_vops = {s5fs_file_vops103,3643
s5fs_mount(struct fs *fs)s5fs_mount131,4371
s5fs_read_vnode(vnode_t *vnode)s5fs_read_vnode220,6614
s5fs_delete_vnode(vnode_t *vnode)s5fs_delete_vnode234,6992
s5fs_query_vnode(vnode_t *vnode)s5fs_query_vnode247,7323
s5fs_umount(fs_t *fs)s5fs_umount258,7497
s5fs_read(vnode_t *vnode, off_t offset, void *buf, size_t len)s5fs_read329,9712
s5fs_write(vnode_t *vnode, off_t offset, const void *buf, size_t len)s5fs_write337,9891
s5fs_mmap(vnode_t *file, vmarea_t *vma, mmobj_t **ret)s5fs_mmap350,10223
s5fs_create(vnode_t *dir, const char *name, size_t namelen, vnode_t **result)s5fs_create366,10625
s5fs_mknod(vnode_t *dir, const char *name, size_t namelen, int mode, devid_t devid)s5fs_mknod382,11045
s5fs_lookup(vnode_t *base, const char *name, size_t namelen, vnode_t **result)s5fs_lookup394,11342
s5fs_link(vnode_t *src, vnode_t *dir, const char *name, size_t namelen)s5fs_link409,11722
s5fs_unlink(vnode_t *dir, const char *name, size_t namelen)s5fs_unlink424,12104
s5fs_mkdir(vnode_t *dir, const char *name, size_t namelen)s5fs_mkdir449,12919
s5fs_rmdir(vnode_t *parent, const char *name, size_t namelen)s5fs_rmdir466,13440
s5fs_readdir(vnode_t *vnode, off_t offset, struct dirent *d)s5fs_readdir482,13927
s5fs_stat(vnode_t *vnode, struct stat *ss)s5fs_stat499,14390
s5fs_fillpage(vnode_t *vnode, off_t offset, void *pagebuf)s5fs_fillpage513,14685
s5fs_dirtypage(vnode_t *vnode, off_t offset)s5fs_dirtypage535,15278
s5fs_cleanpage(vnode_t *vnode, off_t offset, void *pagebuf)s5fs_cleanpage545,15453
s5_check_super(s5_super_t *super)s5_check_super558,15720
calculate_refcounts(int *counts, vnode_t *vnode)calculate_refcounts575,16319
s5fs_check_refcounts(fs_t *fs)s5fs_check_refcounts616,17897

kernel/fs/vnode.c,1782
static slab_allocator_t *vnode_allocator;vnode_allocator33,1245
static list_t vnode_inuse_list;vnode_inuse_list35,1288
static mmobj_ops_t vnode_mmobj_ops = {vnode_mmobj_ops55,2281
static vnode_ops_t bytedev_spec_vops = {bytedev_spec_vops65,2552
static vnode_ops_t blockdev_spec_vops = {blockdev_spec_vops83,3059
vnode_init(void)vnode_init105,3536
init_func(vnode_init);vnode_init110,3670
vref(vnode_t *vn)vref116,3741
vget(struct fs *fs, ino_t vno)vget126,4017
vput(struct vnode *vn)vput240,8254
vfs_is_in_use(fs_t *fs)vfs_is_in_use317,11088
vnode_flush_all(struct fs *fs)vnode_flush_all372,13097
vnode_inuse(struct fs *fs)vnode_inuse413,14776
init_special_vnode(vnode_t *vn)init_special_vnode426,15045
special_file_stat(vnode_t *vnode, struct stat *ss)special_file_stat444,15617
special_file_read(vnode_t *file, off_t offset, void *buf, size_t count)special_file_read459,16049
special_file_write(vnode_t *file, off_t offset, const void *buf, size_t count)special_file_write472,16384
special_file_mmap(vnode_t *file, vmarea_t *vma, mmobj_t **ret)special_file_mmap486,16834
special_file_fillpage(vnode_t *file, off_t offset, void *pagebuf)special_file_fillpage498,17124
special_file_dirtypage(vnode_t *file, off_t offset)special_file_dirtypage510,17422
special_file_cleanpage(vnode_t *file, off_t offset, void *pagebuf)special_file_cleanpage522,17707
#define mmobj_to_vnode(mmobj_to_vnode532,17926
vo_vref(mmobj_t *o)vo_vref536,18014
vo_vput(mmobj_t *o)vo_vput543,18104
vlookuppage(mmobj_t *o, uint32_t pagenum, int forwrite, pframe_t **pf)vlookuppage550,18193
vreadpage(mmobj_t *o, pframe_t *pf)vreadpage563,18499
vdirtypage(mmobj_t *o, pframe_t *pf)vdirtypage573,18734
vcleanpage(mmobj_t *o, pframe_t *pf)vcleanpage587,19056

kernel/fs/ramfs/ramfs.c,2836
static fs_ops_t ramfs_ops = {ramfs_ops50,1836
static vnode_ops_t ramfs_dir_vops = {ramfs_dir_vops77,3058
static vnode_ops_t ramfs_file_vops = {ramfs_file_vops95,3522
typedef struct ramfs_inode {ramfs_inode115,3953
        off_t     rf_size;       /* Total file size */rf_size116,3982
        ino_t     rf_ino;        /* Inode number */rf_ino117,4037
        char     *rf_mem;        /* Memory for this file (1 page) */rf_mem118,4089
        int       rf_mode;       /* Type of file */rf_mode119,4158
        int       rf_linkcount;  /* Number of links to this file */rf_linkcount120,4210
} ramfs_inode_t;ramfs_inode_t121,4278
#define RAMFS_TYPE_DATA RAMFS_TYPE_DATA123,4296
#define RAMFS_TYPE_DIR RAMFS_TYPE_DIR124,4324
#define RAMFS_TYPE_CHR RAMFS_TYPE_CHR125,4352
#define RAMFS_TYPE_BLK RAMFS_TYPE_BLK126,4380
#define VNODE_TO_RAMFSINODE(VNODE_TO_RAMFSINODE128,4409
#define VNODE_TO_RAMFS(VNODE_TO_RAMFS130,4481
#define VNODE_TO_DIRENT(VNODE_TO_DIRENT132,4549
#define RAMFS_MAX_FILES RAMFS_MAX_FILES138,4677
typedef struct ramfs {ramfs140,4707
        ramfs_inode_t *rfs_inodes[RAMFS_MAX_FILES];  /* Array of all files */rfs_inodes141,4730
} ramfs_t;ramfs_t142,4808
typedef struct ramfs_dirent {ramfs_dirent148,4932
        int             rd_ino;   /* Inode number of this entry */rd_ino149,4962
        char            rd_name[NAME_LEN];   /* Name of this entry */rd_name150,5029
} ramfs_dirent_t;ramfs_dirent_t151,5099
#define RAMFS_MAX_DIRENT RAMFS_MAX_DIRENT153,5118
ramfs_alloc_inode(fs_t *fs, int type, devid_t devid)ramfs_alloc_inode157,5223
ramfs_mount(struct fs *fs)ramfs_mount202,6945
ramfs_read_vnode(vnode_t *vn)ramfs_read_vnode244,8074
ramfs_delete_vnode(vnode_t *vn)ramfs_delete_vnode281,9374
ramfs_query_vnode(vnode_t *vn)ramfs_query_vnode301,9960
ramfs_umount(fs_t *fs)ramfs_umount307,10065
ramfs_create(vnode_t *dir, const char *name, size_t name_len, vnode_t **result)ramfs_create332,10883
ramfs_mknod(struct vnode *dir, const char *name, size_t name_len, int mode, devid_t devid)ramfs_mknod373,11953
ramfs_lookup(vnode_t *dir, const char *name, size_t namelen, vnode_t **result)ramfs_lookup416,13216
ramfs_link(vnode_t *oldvnode, vnode_t *dir,ramfs_link433,13728
ramfs_unlink(vnode_t *dir, const char *name, size_t namelen)ramfs_unlink467,14700
ramfs_mkdir(vnode_t *dir, const char *name, size_t name_len)ramfs_mkdir496,15471
ramfs_rmdir(vnode_t *dir, const char *name, size_t name_len)ramfs_rmdir543,16851
ramfs_read(vnode_t *file, off_t offset, void *buf, size_t count)ramfs_read591,18258
ramfs_write(vnode_t *file, off_t offset, const void *buf, size_t count)ramfs_write605,18595
ramfs_readdir(vnode_t *dir, off_t offset, struct dirent *d)ramfs_readdir623,19078
ramfs_stat(vnode_t *file, struct stat *buf)ramfs_stat653,20054

kernel/fs/namev.c,432
lookup(vnode_t *dir, const char *name, size_t len, vnode_t **result)lookup37,1453
dir_namev(const char *pathname, size_t *namelen, const char **name,dir_namev63,2457
open_namev(const char *pathname, int flag, vnode_t **res_vnode, vnode_t *base)open_namev79,3048
lookup_name(vnode_t *dir, vnode_t *entry, char *buf, size_t size)lookup_name95,3642
lookup_dirpath(vnode_t *dir, char *buf, size_t osize)lookup_dirpath111,4274

kernel/fs/vfs_syscall.c,933
do_read(int fd, void *buf, size_t nbytes)do_read53,1818
do_write(int fd, const void *buf, size_t nbytes)do_write68,2321
do_close(int fd)do_close82,2657
do_dup(int fd)do_dup105,3345
do_dup2(int ofd, int nfd)do_dup2121,3845
do_mknod(const char *path, int mode, unsigned devid)do_mknod153,5034
do_mkdir(const char *path)do_mkdir174,5732
do_rmdir(const char *path)do_rmdir199,6601
do_unlink(const char *path)do_unlink219,7098
do_link(const char *from, const char *to)do_link245,7828
do_rename(const char *oldname, const char *newname)do_rename260,8201
do_chdir(const char *path)do_chdir280,8818
do_getdent(int fd, struct dirent *dirp)do_getdent302,9614
do_lseek(int fd, int offset, int whence)do_lseek319,10052
do_stat(const char *path, struct stat *buf)do_stat337,10542
do_mount(const char *source, const char *target, const char *type)do_mount361,11559
do_umount(const char *target)do_umount377,12111

kernel/fs/vfs.c,426
vnode_t *vfs_root_vn;vfs_root_vn41,1340
list_t mounted_fs_list;mounted_fs_list45,1443
vfs_mount(struct vnode *mtpt, fs_t *fs)vfs_mount68,2400
vfs_umount(fs_t *fs)vfs_umount88,3124
vfs_init(void)vfs_init112,3957
init_func(vfs_init);vfs_init143,4903
init_depends(vnode_init);vnode_init144,4924
init_depends(file_init);file_init145,4950
vfs_shutdown()vfs_shutdown148,4980
mountfunc(fs_t *fs)mountfunc202,6338

kernel/fs/open.c,103
get_empty_fd(proc_t *p)get_empty_fd34,1214
do_open(const char *filename, int oflags)do_open85,2977

kernel/fs/faber_fs_test.c,764
#define FILE_CONTENT FILE_CONTENT35,1275
#define CONTENT_LEN CONTENT_LEN36,1306
#define TESTBUFLEN TESTBUFLEN37,1328
int faber_sparse_test(kshell_t *ksh, int argc, char **argv) {faber_sparse_test45,1578
static char block[S5_BLOCK_SIZE];block81,2577
int faber_space_test(kshell_t *ksh, int argc, char **argv) {faber_space_test87,2797
static void *make_dir_thread(int arg1, void *arg2) {make_dir_thread120,3900
static void *rm_dir_thread(int arg1, void *arg2) {rm_dir_thread159,5175
int faber_thread_test(kshell_t *ksh, int argc, char **argv) {faber_thread_test186,6054
int faber_directory_test(kshell_t *ksh, int argc, char **argv) {faber_directory_test239,7858
int faber_cleardir(kshell_t *ksh, int argc, char **argv) {faber_cleardir296,9470

kernel/fs/file.c,222
static slab_allocator_t *file_allocator;file_allocator33,1194
file_init(void)file_init36,1272
init_func(file_init);file_init40,1364
fref(file_t *f)fref43,1392
fget(int fd)fget63,1986
fput(file_t *f)fput83,2425

kernel/main/kmain.c,459
static context_t bootstrap_context;bootstrap_context69,2021
static int gdb_wait = GDBWAIT;gdb_wait70,2057
        int do_foo(kshell_t *kshell, int argc, char **argv)do_foo79,2296
kmain()kmain94,2768
hard_shutdown()hard_shutdown163,4966
bootstrap(int arg1, void *arg2)bootstrap185,5613
idleproc_run(int arg1, void *arg2)idleproc_run231,7163
initproc_create(void)initproc_create305,9242
initproc_run(int arg1, void *arg2)initproc_run342,10524

kernel/main/pit.c,185
#define APIC_TIMER_IRQ APIC_TIMER_IRQ22,981
static unsigned int ms = 0;ms38,1273
void pit_handler(regs_t* regs) {pit_handler40,1302
void pit_init(uint8_t intr) {pit_init43,1338

kernel/main/apic.c,5697
#define APIC_SIGNATURE APIC_SIGNATURE23,973
#define TYPE_LAPIC TYPE_LAPIC25,1018
#define TYPE_IOAPIC TYPE_IOAPIC26,1039
#define PIC_COMPLETE_MASK PIC_COMPLETE_MASK31,1154
#define PIC1 PIC133,1186
#define PIC1_COMMAND PIC1_COMMAND34,1204
#define PIC1_DATA PIC1_DATA35,1230
#define PIC1_VECTOR PIC1_VECTOR36,1257
#define PIC2 PIC238,1283
#define PIC2_COMMAND PIC2_COMMAND39,1301
#define PIC2_DATA PIC2_DATA40,1327
#define PIC2_VECTOR PIC2_VECTOR41,1354
#define ICW1_ICW4	ICW1_ICW443,1380
#define ICW1_SINGLE	ICW1_SINGLE44,1428
#define ICW1_INTERVAL4	ICW1_INTERVAL445,1482
#define ICW1_LEVEL	ICW1_LEVEL46,1545
#define ICW1_INIT	ICW1_INIT47,1604
#define ICW4_8086	ICW4_808649,1663
#define ICW4_AUTO	ICW4_AUTO50,1718
#define ICW4_BUF_SLAVE	ICW4_BUF_SLAVE51,1766
#define ICW4_BUF_MASTER	ICW4_BUF_MASTER52,1821
#define ICW4_SFNM	ICW4_SFNM53,1878
#define SELECT_REGISTER SELECT_REGISTER61,2068
#define IMCR_REGISTER IMCR_REGISTER62,2097
#define ENABLE_APIC ENABLE_APIC63,2124
#define	ENABLE_APIC_PORT ENABLE_APIC_PORT64,2149
#define IA32_APIC_BASE_MSR IA32_APIC_BASE_MSR67,2203
#define IA32_APIC_BASE_MSR_ENABLE IA32_APIC_BASE_MSR_ENABLE68,2235
#define LOCAL_APIC_SPURIOUS_REGISTER LOCAL_APIC_SPURIOUS_REGISTER69,2275
#define LOCAL_APIC_ENABLE_INTERRUPT LOCAL_APIC_ENABLE_INTERRUPT70,2317
#define LOCAL_APIC_ID LOCAL_APIC_ID72,2360
#define LOCAL_APIC_VERSION LOCAL_APIC_VERSION73,2387
#define LOCAL_APIC_TASKPRIOR LOCAL_APIC_TASKPRIOR74,2419
#define LOCAL_APIC_EOI LOCAL_APIC_EOI75,2453
#define LOCAL_APIC_LDR LOCAL_APIC_LDR76,2481
#define LOCAL_APIC_DFR LOCAL_APIC_DFR77,2509
#define LOCAL_APIC_SPURIOUS LOCAL_APIC_SPURIOUS78,2537
#define LOCAL_APIC_ESR LOCAL_APIC_ESR79,2570
#define LOCAL_APIC_ICRL LOCAL_APIC_ICRL80,2599
#define LOCAL_APIC_ICRH LOCAL_APIC_ICRH81,2629
#define LOCAL_APIC_LVT_TMR LOCAL_APIC_LVT_TMR82,2659
#define LOCAL_APIC_LVT_PERF LOCAL_APIC_LVT_PERF83,2692
#define LOCAL_APIC_LVT_LINT0 LOCAL_APIC_LVT_LINT084,2726
#define LOCAL_APIC_LVT_LINT1 LOCAL_APIC_LVT_LINT185,2761
#define LOCAL_APIC_LVT_ERR LOCAL_APIC_LVT_ERR86,2796
#define LOCAL_APIC_TMRINITCNT LOCAL_APIC_TMRINITCNT87,2829
#define LOCAL_APIC_TMRCURRCNT LOCAL_APIC_TMRCURRCNT88,2865
#define LOCAL_APIC_TMRDIV LOCAL_APIC_TMRDIV89,2901
#define LOCAL_APIC_LAST LOCAL_APIC_LAST90,2933
#define LOCAL_APIC_DISABLE LOCAL_APIC_DISABLE91,2963
#define LOCAL_APIC_SW_ENABLE LOCAL_APIC_SW_ENABLE92,2998
#define LOCAL_APIC_CPUFOCUS LOCAL_APIC_CPUFOCUS93,3033
#define LOCAL_APIC_NMI LOCAL_APIC_NMI94,3067
#define LOCAL_APIC_TMR_PERIODIC LOCAL_APIC_TMR_PERIODIC95,3097
#define LOCAL_APIC_TMR_BASEDIV LOCAL_APIC_TMR_BASEDIV96,3137
#define LOCAL_APIC_SPUR_ADDR LOCAL_APIC_SPUR_ADDR98,3177
#define LAPICID LAPICID99,3266
#define LAPICVER LAPICVER100,3337
#define LAPICTPR LAPICTPR101,3414
#define LAPICSPUR LAPICSPUR102,3493
#define LAPICEOI LAPICEOI103,3572
#define IOAPIC_IOWIN IOAPIC_IOWIN106,3660
#define IOAPIC_ID IOAPIC_ID109,3728
#define IOAPIC_VER IOAPIC_VER110,3751
#define IOAPIC_ARB IOAPIC_ARB111,3775
#define IOAPIC_REDTBL IOAPIC_REDTBL112,3799
#define BIT_SET(BIT_SET115,3872
#define BIT_UNSET(BIT_UNSET116,3947
#define IRQ_TO_OFFSET(IRQ_TO_OFFSET118,4026
struct apic_table {apic_table120,4085
        struct acpi_header at_header;at_header121,4105
        uint32_t at_addr;at_addr122,4143
        uint32_t at_flags;at_flags123,4169
struct lapic_table {lapic_table126,4200
        uint8_t at_type;at_type127,4221
        uint8_t at_size;at_size128,4246
        uint8_t at_procid;at_procid129,4271
        uint8_t at_apicid;at_apicid130,4298
        uint32_t at_flags;at_flags131,4325
struct ioapic_table {ioapic_table134,4356
        uint8_t at_type;at_type135,4378
        uint8_t at_size;at_size136,4403
        uint8_t at_apicid;at_apicid137,4428
        uint8_t at_reserved;at_reserved138,4455
        uint32_t at_addr;at_addr139,4484
        uint32_t at_inti;at_inti140,4510
static struct apic_table *apic = NULL;apic143,4540
static struct lapic_table *lapic = NULL;lapic144,4579
static struct ioapic_table *ioapic = NULL;ioapic145,4620
static uint32_t __lapic_getid(void)__lapic_getid148,4665
static uint32_t __lapic_getver(void)__lapic_getver153,4738
static void __lapic_setspur(uint8_t intr)__lapic_setspur158,4805
static uint32_t ioapic_read(uintptr_t ioapic_addr, uint8_t reg_offset) {ioapic_read165,4974
static void ioapic_write(uintptr_t ioapic_addr, uint8_t reg_offset, uint32_t value) {ioapic_write171,5198
static uint32_t __ioapic_getid(void) {__ioapic_getid178,5450
static uint32_t __ioapic_getver(void) {__ioapic_getver182,5567
static uint32_t __ioapic_getmaxredir(void) {__ioapic_getmaxredir186,5680
static void __ioapic_setredir(uint32_t irq, uint8_t intr) {__ioapic_setredir190,5804
static void __ioapic_setmask(uint32_t irq, int mask) {__ioapic_setmask213,6787
static uint32_t apic_exists(void) {apic_exists225,7070
static void apic_set_base(uintptr_t apic) {apic_set_base231,7187
static uintptr_t apic_get_base(void) {apic_get_base238,7374
static void apic_enable() {apic_enable244,7512
void apic_disable_periodic_timer() {apic_disable_periodic_timer255,8095
void apic_enable_periodic_timer(uint32_t freq) {apic_enable_periodic_timer263,8481
static void apic_disable_8259() {apic_disable_8259299,9819
void apic_init()apic_init324,10534
uint8_t apic_getipl()apic_getipl389,13932
void apic_setipl(uint8_t ipl)apic_setipl394,13991
void apic_setspur(uint8_t intr)apic_setspur399,14050
void apic_eoi()apic_eoi405,14188
void apic_setredir(uint32_t irq, uint8_t intr)apic_setredir410,14233

kernel/main/gdt.c,1997
struct tss_entry {tss_entry18,909
        uint32_t ts_link;ts_link19,928
        uint32_t ts_esp0;ts_esp020,954
        uint32_t ts_ss0;ts_ss021,980
        uint32_t ts_esp1;ts_esp122,1005
        uint32_t ts_ss1;ts_ss123,1031
        uint32_t ts_esp2;ts_esp224,1056
        uint32_t ts_ss2;ts_ss225,1082
        uint32_t ts_cr3;ts_cr326,1107
        uint32_t ts_eip;ts_eip27,1132
        uint32_t ts_eflags;ts_eflags28,1157
        uint32_t ts_eax;ts_eax29,1185
        uint32_t ts_ecx;ts_ecx30,1210
        uint32_t ts_edx;ts_edx31,1235
        uint32_t ts_ebx;ts_ebx32,1260
        uint32_t ts_esp;ts_esp33,1285
        uint32_t ts_ebp;ts_ebp34,1310
        uint32_t ts_esi;ts_esi35,1335
        uint32_t ts_edi;ts_edi36,1360
        uint32_t ts_es;ts_es37,1385
        uint32_t ts_cs;ts_cs38,1409
        uint32_t ts_ss;ts_ss39,1433
        uint32_t ts_ds;ts_ds40,1457
        uint32_t ts_fs;ts_fs41,1481
        uint32_t ts_gd;ts_gd42,1505
        uint32_t ts_ldtr;ts_ldtr43,1529
        uint32_t ts_iopb;ts_iopb44,1555
struct gdt_entry {gdt_entry47,1585
        uint16_t ge_limitlo;ge_limitlo48,1604
        uint16_t ge_baselo;ge_baselo49,1633
        uint8_t  ge_basemid;ge_basemid50,1661
        uint8_t  ge_access;ge_access51,1690
        uint8_t  ge_flags;ge_flags52,1718
        uint8_t  ge_basehi;ge_basehi53,1745
struct gdt_location {gdt_location56,1801
        uint16_t gl_size;gl_size57,1823
        uint32_t gl_offset;gl_offset58,1849
static struct gdt_entry gdt[GDT_COUNT];gdt61,1905
static struct tss_entry tss;tss62,1945
static struct gdt_location gdtl = {gdtl63,1974
void gdt_init(void)gdt_init68,2085
void gdt_set_kernel_stack(void *addr)gdt_set_kernel_stack94,2924
void gdt_set_entry(uint32_t segment, uint32_t base, uint32_t limit,gdt_set_entry99,3005
void gdt_clear(uint32_t segment)gdt_clear124,3891
size_t gdt_tss_info(const void *arg, char *buf, size_t osize)gdt_tss_info130,4055

kernel/main/interrupt.c,2170
#define MAX_INTERRUPTS MAX_INTERRUPTS22,976
#define INTR_SPURIOUS INTR_SPURIOUS24,1013
#define IDT_DESC_TRAP IDT_DESC_TRAP28,1095
#define IDT_DESC_BIT16 IDT_DESC_BIT1629,1132
#define IDT_DESC_BIT32 IDT_DESC_BIT3230,1169
#define IDT_DESC_RING0 IDT_DESC_RING031,1206
#define IDT_DESC_RING1 IDT_DESC_RING132,1243
#define IDT_DESC_RING2 IDT_DESC_RING233,1280
#define IDT_DESC_RING3 IDT_DESC_RING334,1317
#define IDT_DESC_PRESENT IDT_DESC_PRESENT35,1354
#define INTR(INTR37,1392
#define INTR_ERRCODE(INTR_ERRCODE38,1434
#define INTR_NOERRCODE(INTR_NOERRCODE58,2490
typedef struct intr_desc {intr_desc336,8601
        uint16_t baselo;baselo337,8628
        uint16_t selector;selector338,8653
        uint8_t zero;zero339,8680
        uint8_t attr;attr340,8702
        uint16_t basehi;basehi341,8724
} __attribute__((packed)) intr_desc_t;intr_desc_t342,8749
typedef struct intr_info {intr_info344,8789
        uint16_t size;size345,8816
        uint32_t base;base346,8839
} __attribute__((packed)) intr_info_t;intr_info_t347,8862
static intr_desc_t intr_table[MAX_INTERRUPTS];intr_table349,8902
static intr_handler_t intr_handlers[MAX_INTERRUPTS];intr_handlers350,8949
static int32_t intr_mappings[MAX_INTERRUPTS];intr_mappings351,9002
intr_info_t intr_data = {intr_data353,9049
static regs_t *_intr_regs = NULL;_intr_regs364,9452
intr_handler_t intr_register(uint8_t intr, intr_handler_t handler)intr_register366,9487
int32_t intr_map(uint16_t irq, uint8_t intr)intr_map373,9668
static __attribute__((used)) void __intr_handler(regs_t regs)__intr_handler383,9897
static void __intr_divide_by_zero_handler(regs_t *regs)__intr_divide_by_zero_handler400,10323
static void __intr_gpf_handler(regs_t *regs)__intr_gpf_handler405,10454
static void __intr_timer_handler(regs_t *regs)__intr_timer_handler410,10580
static void __intr_inval_opcode_handler(regs_t *regs)__intr_inval_opcode_handler415,10699
static void __intr_spurious(regs_t *regs)__intr_spurious420,10828
static void __intr_set_entry(uint8_t isr, uint32_t addr, int seg, int flags)__intr_set_entry425,10933
void intr_init()intr_init434,11259

kernel/main/acpi.c,1177
#define RSDT_SIGNATURE RSDT_SIGNATURE23,977
#define FACP_SIGNATURE FACP_SIGNATURE24,1021
#define DSDT_SIGNATURE DSDT_SIGNATURE25,1065
#define RSDP_ALIGN RSDP_ALIGN27,1110
#define EBDA_MIN EBDA_MIN29,1135
#define EBDA_MAX EBDA_MAX30,1162
#define EBDA_PTR_LOC EBDA_PTR_LOC31,1189
static const uint8_t rsdp_sig[8] = {'R', 'S', 'D', ' ', 'P', 'T', 'R', ' '};rsdp_sig33,1220
struct rsdp {rsdp35,1298
        uint8_t rp_sign[8];rp_sign36,1312
        uint8_t rp_checksum;rp_checksum37,1340
        uint8_t rp_oemid[6];rp_oemid38,1369
        uint8_t rp_rev;rp_rev39,1398
        uint32_t rp_addr;rp_addr40,1422
struct rsd_table {rsd_table43,1452
        struct acpi_header rt_header;rt_header44,1471
        uint32_t rt_other[];rt_other45,1509
static uint8_t __acpi_checksum(uint8_t *buf, int size)__acpi_checksum48,1542
static void *__rsdp_search()__rsdp_search58,1740
static struct rsdp *rsd_ptr;rsd_ptr90,3155
static struct rsd_table *rsd_table;rsd_table91,3184
static void *_acpi_load_table(uintptr_t paddr)_acpi_load_table96,3411
void acpi_init()acpi_init109,3908
void *acpi_table(uint32_t signature, int index)acpi_table144,5556

kernel/util/time.c,254
#define APIC_TIMER_IRQ APIC_TIMER_IRQ24,1006
static unsigned int ms = 0;ms27,1076
static void pit_handler(regs_t *regs)pit_handler29,1105
static __attribute__((unused)) void time_init(void)time_init38,1288
init_func(time_init);time_init45,1528

kernel/util/init.c,652
static int _init_search_count = 0;_init_search_count21,953
struct init_function {init_function23,989
        init_func_t  if_func;if_func24,1012
        const char  *if_name;if_name25,1042
        list_link_t  if_link;if_link26,1072
        int          if_search;if_search28,1103
        int          if_called;if_called29,1135
        list_t       if_deps;if_deps30,1167
struct init_depends {init_depends33,1201
        const char  *id_name;id_name34,1223
        list_link_t  id_link;id_link35,1253
static void _init_call(list_t *funcs, struct init_function *func)_init_call38,1287
void init_call_all()init_call_all79,2813

kernel/util/printf.c,1305
unsigned long simple_strtoul(const char *cp, char **endp, unsigned int base)simple_strtoul81,3830
long simple_strtol(const char *cp, char **endp, unsigned int base)simple_strtol112,4771
unsigned long long simple_strtoull(const char *cp, char **endp, unsigned int base)simple_strtoull125,5182
long long simple_strtoll(const char *cp, char **endp, unsigned int base)simple_strtoll156,6189
static int skip_atoi(const char **s)skip_atoi163,6400
#define ZEROPAD ZEROPAD172,6555
#define SIGN SIGN173,6607
#define PLUS PLUS174,6666
#define SPACE SPACE175,6714
#define LEFT LEFT176,6766
#define SPECIAL SPECIAL177,6819
#define LARGE LARGE178,6860
static char *number(char *buf, char *end, long long num, int base, int size, int precision, int type)number180,6932
int vsnprintf(char *buf, size_t size, const char *fmt, va_list args)vsnprintf291,10485
int snprintf(char *buf, size_t size, const char *fmt, ...)snprintf530,20103
int vsprintf(char *buf, const char *fmt, va_list args)vsprintf550,20609
int sprintf(char *buf, const char *fmt, ...)sprintf562,20908
size_t iprintf(char **str, size_t *size, char *fmt, ...)iprintf573,21103
int vsscanf(const char *buf, const char *fmt, va_list args)vsscanf602,21892
int sscanf(const char *buf, const char *fmt, ...)sscanf815,30965

kernel/util/math.c,1148
union uu {uu76,3842
        int64_t            q;              /* as a (signed) quad */q77,3853
        int64_t            uq;             /* as an unsigned quad */uq78,3921
        long               sl[2];          /* as two signed longs */sl79,3990
        unsigned long      ul[2];          /* as two unsigned longs */ul80,4059
#define _QUAD_HIGHWORD _QUAD_HIGHWORD83,4175
#define _QUAD_LOWWORD _QUAD_LOWWORD84,4200
#define H H88,4265
#define L L89,4304
#define CHAR_BIT CHAR_BIT96,4509
#define QUAD_BITS QUAD_BITS97,4580
#define LONG_BITS LONG_BITS98,4633
#define HALF_BITS HALF_BITS99,4683
#define HHALF(HHALF110,5151
#define LHALF(LHALF111,5194
#define LHUP(LHUP112,5251
#define B B118,5407
#define COMBINE(COMBINE121,5527
typedef unsigned long digit;digit127,5759
shl(register digit *p, register int len, register int sh)shl137,6009
__qdivrem(uint64_t uq, uint64_t vq, uint64_t *arq)__qdivrem155,6565
int64_t __divdi3(int64_t a, int64_t b)__divdi3355,13793
__udivdi3(uint64_t a, uint64_t b)__udivdi3376,14220
__umoddi3(uint64_t a, uint64_t b)__umoddi3386,14378
int log2(int x)log2402,14813

kernel/util/string.c,1022
int memcmp(const void *cs, const void *ct, size_t count)memcmp15,850
void *memcpy(void *dest, const void *src, size_t count)memcpy37,1798
void *memset(void *s, int c, size_t count)memset51,2235
int strncmp(const char *cs, const char *ct, size_t count)strncmp65,2639
int strcmp(const char *cs, const char *ct)strcmp78,2914
char *strcpy(char *dest, const char *src)strcpy90,3141
char *strncpy(char *dest, const char *src, size_t count)strncpy99,3309
size_t strnlen(const char *s, size_t count)strnlen109,3504
char *strcat(char *dest, const char *src)strcat119,3684
size_t strlen(const char *s)strlen131,3870
char *strchr(const char *s, int c)strchr140,4023
char *strrchr(const char *s, int c)strrchr148,4194
char *strstr(const char *s1, const char *s2)strstr157,4375
strpbrk(const char *string, const char *brkset)strpbrk181,4960
strspn(const char *string, const char *charset)strspn196,5280
strtok(char *string, const char *sepset)strtok211,5602
char *strerror(int errnum)strerror246,6507

kernel/util/debug.c,1183
#define PORT PORT26,1187
#define PORT_INTR PORT_INTR28,1243
#define PORT_BOCHS PORT_BOCHS33,1467
uint64_t dbg_modes;dbg_modes35,1492
typedef struct dbg_mode {dbg_mode37,1513
        const char *d_name;d_name38,1539
        uint64_t d_mode;d_mode39,1567
        const char *d_color;d_color40,1592
} dbg_mode_t;dbg_mode_t41,1621
static int dbg_supports_bochs_e9_hack;dbg_supports_bochs_e9_hack43,1636
void dbg_init()dbg_init45,1676
static dbg_mode_t dbg_tab[] = {dbg_tab63,2377
const char *dbg_color(uint64_t d_mode)dbg_color67,2429
static void dbg_puts(char *c)dbg_puts79,2794
#define BUFFER_SIZE BUFFER_SIZE94,3213
void dbg_print(char *fmt, ...)dbg_print95,3238
void dbg_printinfo(dbg_infofunc_t func, const void *data)dbg_printinfo112,3666
void dbg_add_mode(const char *name)dbg_add_mode125,4009
void dbg_add_modes(const char *modes)dbg_add_modes157,4786
size_t dbg_modes_info(const void *data, char *buf, size_t size)dbg_modes_info168,5106
static void dbg_panic_halt()dbg_panic_halt200,6142
#define PANIC_BUFSIZE PANIC_BUFSIZE205,6214
void dbg_panic(const char *file, int line, const char *func, const char *fmt, ...)dbg_panic206,6241

kernel/boot/a20.h,446
#define __A20_H____A20_H__13,829
		xor		%ax, %ax /* ax = 0 */ax27,1012
		mov		%ax, %esax28,1041
		mov		%ax, %dsax31,1088
		mov		$0x0500, %di$0x050033,1106
		mov		$0x0510, %si$0x051034,1126
		movb 	$0x00, %es:(%di)$0x0042,1218
		movb	$0xFF, %ds:(%si)$0xFF43,1243
		cmpb	$0xFF, %es:(%di)$0xFF45,1269
		movb	%al, %ds:(%si)al48,1306
		movb	%al, %es:(%di)al51,1341
		mov		$0x00, %ax$0x0053,1365
		mov		$0x01, %ax$0x0156,1394

kernel/boot/gdt.h,148
		.byte	0, 0x9A, 0xCF, 0x9A30,1154
		.byte	0, 0x9A, 0xCF, 0xCF30,1154
		.byte	0, 0x92, 0xCF, 0x9234,1230
		.byte	0, 0x92, 0xCF, 0xCF34,1230

kernel/boot/floppy.h,892
		mov		%di, %esdi57,1526
		mov		$0x08, %ah$0x0859,1545
		mov		%dh, heads_per_cylinderdh64,1610
		mov		%cl, %ahcl66,1646
		and		$0x3f, %ah$0x3f67,1663
		mov		%ah, sectors_per_trackah68,1682
		mov		%dl, absolute_sectordl91,2179
		xor		%dx, %dxdx92,2208
		movb	%dl, absolute_headdl94,2252
		movb	%al, absolute_trackal95,2279
		mov		$0x01, %al /* number of sectors to read */$0x01117,2762
		movb	absolute_track, %chabsolute_track118,2813
		movb	absolute_sector, %clabsolute_sector119,2841
		movb	absolute_head, %dhabsolute_head120,2870
		xor		%ax, %axax126,3013
		mov     $dot_string, %si$dot_string136,3181
		addw	bytes_per_sector, %bx /* move the location where we store data */bytes_per_sector142,3275
		mov     $newline_string, %si$newline_string148,3432
		mov		%es, %dxes153,3500
		addw	segment_inc, %dxsegment_inc154,3517
		mov		%dx, %esdx155,3542

kernel/boot/stdio.h,237
#define __STDIO_H____STDIO_H__13,832
		mov		$0x00, %bh$0x0017,894
		mov		$0x07, %bl$0x0718,913
		or		%al, %al /* is al 0? (null terminator) */al21,999
		mov		$0x0e, %ah /* int 0x10 function 0x0e prints character */$0x0e23,1090

kernel/boot/e820.h,1101
#define MAP_SIGNATURE MAP_SIGNATURE14,825
#define MAP_ENTRY_SIZE MAP_ENTRY_SIZE15,859
		xor		%ebx, %ebx				/* must be 0 for first call */ebx27,1336
		xor		%bp, %bpbp28,1388
		mov		$MAP_SIGNATURE, %edx	/* must be the characters 'SMAP' */$MAP_SIGNATURE30,1407
		mov		$0xe820, %eax			/* function code for int 0x15 */$0xe82031,1471
		movl	0x1, %ecxx132,1527
		movl	%ecx, %es:(%di)			/* indicate we support APIC 3 entries */ecx33,1544
		mov		$MAP_ENTRY_SIZE, %ecx	/* tell the BIOS how large the entry can be */$MAP_ENTRY_SIZE34,1610
		mov		$MAP_SIGNATURE, %edx$MAP_SIGNATURE39,1812
		cmp		%eax, %edxeax40,1840
		test	%ebx, %ebxebx44,1920
		mov		$MAP_SIGNATURE, %edx$MAP_SIGNATURE49,1963
		mov		$0xe820, %eax$0xe82050,1991
		movl	0x1, %ecxx151,2012
		movl	%ecx, %es:(%di)ecx52,2029
		mov		$MAP_ENTRY_SIZE, %ecx$MAP_ENTRY_SIZE53,2052
		cmp		$20, %cl$2059,2310
		testl	$0x1, %es:20(%di)$0x162,2405
		test	%ecx, %ecxecx66,2606
		add		$MAP_ENTRY_SIZE, %di$MAP_ENTRY_SIZE72,2854
		test	%ebx, %ebx /*if ebx = 0 we are done */ebx74,2946
		mov		%bp, %es:(%di)bp78,3047

kernel/boot/paging.h,2078
#define PAGE_DIRECTORY_BASE PAGE_DIRECTORY_BASE14,825
		mov		%es, %bxes18,889
		mov		$0, %ax$022,996
		mov		%ax, %esax23,1011
		mov		$0, %eax$024,1027
		mov		$0x3000, %ecx$0x300025,1043
		mov		$PAGE_DIRECTORY_BASE, %edi$PAGE_DIRECTORY_BASE26,1064
		mov		$PAGE_DIRECTORY_BASE, %edi$PAGE_DIRECTORY_BASE32,1249
		add		$0x1000, %edi /* calculate the location of the page table */$0x100033,1283
		mov		$0x400, %ecx /* we will fill this many entries (whole table) */$0x40034,1351
		mov		$0x103, %eax /* start by mapping 0x0 => 0x0, the flags are$0x10335,1422
		mov		%eax, (%edi) /* store the pte */eax38,1542
		add		$4, %edi	 /* move to the next entry */$439,1582
		add		$0x1000, %eax /* increment the mapping to the next memory area */$0x100040,1628
		mov		$PAGE_DIRECTORY_BASE, %edi$PAGE_DIRECTORY_BASE46,1914
		add		$0x2000, %edi /* calculate the location of the page table */$0x200047,1948
		mov		$0x400, %ecx /* we will fill this many entries (whole table) */$0x40048,2016
		mov		$KERNEL_PHYS_BASE, %eax$KERNEL_PHYS_BASE49,2087
		xor		$0x103, %eax /* start by mapping 0xc0000000 => KERNEL_PHYS_BASE, the flags are$0x10350,2118
		mov		%eax, (%edi) /* store the pte */eax53,2261
		add		$4, %edi	 /* move to the next entry */$454,2301
		add		$0x1000, %eax /* increment the mapping to the next memory area */$0x100055,2347
		mov		$PAGE_DIRECTORY_BASE, %edi$PAGE_DIRECTORY_BASE61,2599
		mov		%edi, %eaxedi63,2636
		add		$0x1000, %eax /* calculate the location of the first page table */$0x100064,2654
		or		$0x103, %eax /* add the flags for privileged, global and present */$0x10365,2728
		mov		%eax, (%edi)eax66,2802
		add		$0x1000, %eax /* calculate the location of the second page table */$0x100068,2823
		mov		$kernel_start, %ecx$kernel_start69,2898
		shr		$20, %ecx$2070,2925
		mov		%eax, (%ecx, %edi, 1)eax71,2942
		mov		%eax, (%ecx, %edi, 1)ecx71,2942
		mov		%eax, (%ecx, %edi, 1)edi71,2942
		mov		$PAGE_DIRECTORY_BASE, %eax$PAGE_DIRECTORY_BASE73,2972
		mov		%eax, %cr3eax74,3006
		mov		%bx, %esbx76,3027

user/bin/ls.c,92
static int do_ls(const char *dir)do_ls10,143
int main(int argc, char **argv)main74,2322

user/bin/ed.c,3544
#define SIGHUP SIGHUP122,3551
#define SIGINTR SIGINTR123,3569
#define SIGQUIT SIGQUIT124,3587
#define FNSIZE FNSIZE125,3605
#define LBSIZE LBSIZE126,3624
#define ESIZE ESIZE127,3644
#define GBSIZE GBSIZE128,3664
#define NBRA NBRA129,3684
#define CBRA CBRA131,3703
#define CCHR CCHR132,3721
#define CDOT CDOT133,3739
#define CCL CCL134,3757
#define NCCL NCCL135,3775
#define CDOL CDOL136,3793
#define CEOF CEOF137,3812
#define CKET CKET138,3831
#define STAR STAR140,3851
#define error error142,3871
#define READ READ143,3897
#define WRITE WRITE144,3915
char    peekc;peekc146,3934
char    lastc;lastc147,3949
char    savedfile[FNSIZE];savedfile148,3964
char    file[FNSIZE];file149,3991
char    linebuf[LBSIZE];linebuf150,4013
char    rhsbuf[LBSIZE / 2];rhsbuf151,4038
char    expbuf[ESIZE + 4];expbuf152,4066
int     circfl;circfl153,4093
int     *zero;zero154,4109
int     *dot;dot155,4124
int     *dol;dol156,4138
int     *endcore;endcore157,4152
int     *fendcore;fendcore158,4170
int     *addr1;addr1159,4189
int     *addr2;addr2160,4205
char    genbuf[LBSIZE];genbuf161,4221
int     count[2];count162,4245
char    *nextip;nextip163,4263
char    *linebp;linebp164,4280
int     ninbuf;ninbuf165,4297
int     io;io166,4313
int     pflag;pflag167,4325
int     onhup;onhup168,4340
int     onquit;onquit169,4355
int     vflag = 1;vflag170,4371
int     listf;listf171,4390
int     col;col172,4405
char    *globp;globp173,4418
int     tfile = -1;tfile174,4434
int     tline;tline175,4454
char    tfname[] = "/tmp/exxxxx";tfname176,4469
char    *loc1;loc1177,4503
char    *loc2;loc2178,4518
char    *locs;locs179,4533
char    ibuff[512];ibuff180,4548
int     iblock = -1;iblock181,4568
char    obuff[512];obuff182,4589
int     oblock = -1;oblock183,4609
int     ichanged;ichanged184,4630
int     nleft;nleft185,4648
char    TMPERR[] = "TMP";TMPERR188,4716
int     names[26];names189,4742
char    *braslist[NBRA];braslist190,4761
char    *braelist[NBRA];braelist191,4786
creat(const char *fname, mode_t mode)creat233,5735
signal(int a1, ...)signal239,5825
main(int argc, char **argv)main245,5872
commands()commands280,6674
address()address451,12712
setdot()setdot548,16229
setall()setall557,16359
setnoaddr()setnoaddr569,16566
nonzero()nonzero576,16630
newline()newline583,16715
filename()filename600,17041
exfile()exfile635,17841
errfunc(void)errfunc646,17982
getchar()getchar668,18384
gettty()gettty687,18793
getfile()getfile713,19416
putfile()putfile741,20131
append(f, a)append770,20924
dounix()dounix802,21663
delete()delete824,22215
getline(int tl)getline845,22569
putline()putline863,22949
getblock(int atl, int iof)getblock891,23603
blkio(int b, char *buf, void *iofcn)blkio923,24430
init()init935,24727
global(int k)global958,25222
substitute(int inglob)substitute1006,26453
compsub()compsub1033,27170
getsub()getsub1065,27905
dosub()dosub1079,28129
place(char *asp, char *al1, char *al2)place1113,29061
move(int cflag)move1130,29378
reverse(int *aa1, int *aa2)reverse1164,30185
getcopy()getcopy1180,30465
compile(int aeof)compile1189,30587
execute(gf, addr)execute1299,34401
advance(char *alp, char *aep)advance1348,35648
cclass(char *aset, int ac, int af)cclass1431,38466
putd()putd1447,38771
puts(char *as)puts1465,39044
char    line[80];line1476,39201
char    *linp = line;linp1477,39219
putchar(char ac)putchar1480,39247

user/bin/uname.c,173
char *TAS = "weenix brought to you by:\n"TAS11,131
static struct utsname un;un23,572
int main(int argc, char **argv)main25,599
static int doflag(int c)doflag51,1169

user/bin/sh.c,4638
#undef DEBUG_SHDEBUG_SH1,0
#define dbg(dbg4,33
#define dbg(dbg6,64
#define ROOT ROOT18,246
#define HOME HOME20,275
#define TMP TMP21,308
#define ARGV_MAX ARGV_MAX23,344
#define REDIR_MAX REDIR_MAX24,372
typedef struct redirect {redirect26,400
        int             r_sfd;r_sfd27,426
        int             r_dfd;r_dfd28,457
} redirect_t;redirect_t29,488
typedef struct redirect_map {redirect_map31,503
        int             rm_nfds;rm_nfds32,533
        redirect_t      rm_redir[REDIR_MAX];rm_redir33,566
} redirect_map_t;redirect_map_t34,611
typedef struct ioenv {ioenv36,630
        int             io_map_fd[3];io_map_fd37,653
#define io_map_file io_map_file38,691
} ioenv_t;ioenv_t39,721
static char **my_envp;my_envp41,733
#define DECL_CMD(DECL_CMD47,919
DECL_CMD(env);env49,999
DECL_CMD(cd);cd50,1014
DECL_CMD(help);help51,1028
DECL_CMD(exit);exit52,1044
DECL_CMD(mkdir);mkdir53,1060
DECL_CMD(rmdir);rmdir54,1077
DECL_CMD(clear);clear55,1094
DECL_CMD(ln);ln56,1111
DECL_CMD(rm);rm57,1125
DECL_CMD(mv);mv58,1139
DECL_CMD(cat);cat59,1153
DECL_CMD(echo);echo60,1168
DECL_CMD(cp);cp61,1184
DECL_CMD(sync);sync62,1198
DECL_CMD(check);check63,1214
DECL_CMD(repeat);repeat64,1231
DECL_CMD(parallel);parallel65,1249
        const char      *cmd_name;cmd_name68,1287
        int (*cmd_func)(int argc, char *argv[], ioenv_t *io);cmd_func69,1322
        const char      *cmd_helptext;cmd_helptext70,1384
} cmd_t;cmd_t71,1423
static cmd_t builtin_cmds[] = {builtin_cmds73,1433
#define builtin_stdin builtin_stdin96,2604
#define builtin_stdout builtin_stdout97,2648
#define builtin_stderr builtin_stderr98,2693
#define is_std_stream(is_std_stream100,2739
DECL_CMD(chk_sparse);chk_sparse102,2791
DECL_CMD(chk_unlink);chk_unlink103,2813
DECL_CMD(chk_wrnoent);chk_wrnoent104,2835
DECL_CMD(chk_sbrk);chk_sbrk105,2858
DECL_CMD(chk_zero);chk_zero106,2878
DECL_CMD(chk_null);chk_null107,2898
DECL_CMD(chk_priv);chk_priv108,2918
DECL_CMD(chk_malloc);chk_malloc110,2939
static cmd_t check_cmds[] = {check_cmds112,2962
static int check_failed(const char *test, const char *cmd)check_failed124,3611
static int check_exists(const char *file)check_exists131,3845
DECL_CMD(chk_priv)DECL_CMD143,4076
DECL_CMD(chk_null)DECL_CMD243,6931
DECL_CMD(chk_zero)DECL_CMD284,7947
DECL_CMD(chk_malloc)DECL_CMD366,10260
DECL_CMD(chk_sbrk)DECL_CMD404,11243
DECL_CMD(chk_wrnoent)DECL_CMD457,12790
DECL_CMD(chk_unlink)DECL_CMD529,14860
DECL_CMD(chk_sparse)DECL_CMD573,15967
static int check_run_one(cmd_t *cmd, ioenv_t *io)check_run_one691,19572
DECL_CMD(check)DECL_CMD707,19972
DECL_CMD(env)DECL_CMD755,21374
DECL_CMD(sync)DECL_CMD766,21577
static int do_cp(ioenv_t *io, const char *cmd,do_cp772,21631
#define buffer_sz buffer_sz776,21780
#undef buffer_szbuffer_sz803,22715
DECL_CMD(cp)DECL_CMD806,22735
DECL_CMD(echo)DECL_CMD845,23751
DECL_CMD(cat)DECL_CMD855,23977
DECL_CMD(mv)DECL_CMD886,24839
DECL_CMD(rm)DECL_CMD908,25343
DECL_CMD(ln)DECL_CMD931,25972
DECL_CMD(mkdir)DECL_CMD953,26473
DECL_CMD(clear)DECL_CMD972,26909
#define ESC ESC974,26927
#undef ESCESC976,26990
DECL_CMD(rmdir)DECL_CMD980,27022
DECL_CMD(exit)DECL_CMD999,27452
DECL_CMD(help)DECL_CMD1005,27507
DECL_CMD(cd)DECL_CMD1018,27785
DECL_CMD(repeat)DECL_CMD1040,28239
DECL_CMD(parallel)DECL_CMD1081,29367
static int do_redirect(redirect_map_t *map)do_redirect1150,31795
static void cleanup_redirects(redirect_map_t *map)cleanup_redirects1171,32420
static void build_ioenv(redirect_map_t *map, ioenv_t *io)build_ioenv1179,32599
static void destroy_ioenv(ioenv_t *io)destroy_ioenv1197,33119
static int builtin_exec(cmd_t *cmd, int argc, char *argv[], ioenv_t *io)builtin_exec1201,33163
static int execute(int argc, char *argv[], redirect_map_t *map)execute1206,33290
#define sh_isredirect(sh_isredirect1254,34827
static int parse_redirect_dfd(char *line, char **start_p)parse_redirect_dfd1256,34883
static int redirect_default_fd(int type)redirect_default_fd1286,35626
static void add_redirect(redirect_map_t *map, int sfd, int dfd)add_redirect1298,35894
static int parse_redirect_dup(char *line, redirect_map_t *map, int dfd,parse_redirect_dup1306,36146
static int parse_redirect_norm(char *line, redirect_map_t *map, int dfd,parse_redirect_norm1352,37409
static int parse_redirects(char *line, redirect_map_t *map)parse_redirects1388,38336
static void parse(char *line)parse1478,41048
static char linebuf[1024];linebuf1526,42136
int main(int argc, char *argv[], char *envp[])main1528,42164

user/sbin/halt.c,38
main(int argc, char **argv)main4,25

user/sbin/init.c,471
char *empty[] = { NULL };empty17,338
const char      *hi = "init: starting shell on ";hi19,365
const char      *sh = "/bin/sh";sh20,415
const char      *ttystr = "tty";ttystr21,448
const char      *home = "/";home22,481
const char      *alldone = "init: no remaining processes\n";alldone23,510
static int open_tty(char *tty)open_tty25,572
static void spawn_shell_on(char *tty)spawn_shell_on38,871
int main(int argc, char **argv, char **envp)main59,1341

user/usr/bin/tests/memtest.c,954
#define assert_fault(assert_fault28,495
#define assert_nofault(assert_nofault38,974
static void overflow(void)overflow49,1465
static int test_overflow(void)test_overflow55,1541
static int test_mmap_bounds(void)test_mmap_bounds62,1691
static int test_brk_bounds(void)test_brk_bounds137,4898
static int test_munmap(void)test_munmap208,7507
static int test_start_brk(void)test_start_brk287,10815
static int test_brk_mmap(void)test_brk_mmap350,13285
static int test_mmap_fill(void)test_mmap_fill397,15141
#define MID_ADDR MID_ADDR411,15683
static int test_mmap_repeat(void)test_mmap_repeat486,19048
#define MMAP_REPEAT_FILE MMAP_REPEAT_FILE488,19084
#define REPEAT_STR REPEAT_STR489,19126
static int test_mmap_beyond(void)test_mmap_beyond531,20763
#define MMAP_BEYOND_FILE MMAP_BEYOND_FILE534,20841
#define BEYOND_STR BEYOND_STR535,20883
int main(int argc, char **argv)main597,23415
#define childtest(childtest607,23682

user/usr/bin/tests/stress.c,446
static void check_failed(const char *cmd)check_failed17,279
static int myfork()myfork23,411
static void fork_test()fork_test37,652
static void cow_fork()cow_fork54,1175
static void fault_test()fault_test84,1988
void mmap_test()mmap_test116,2802
void null_test()null_test216,5911
void zero_test()zero_test255,6768
void wait_test()wait_test333,8737
void brk_test()brk_test348,9109
int main(int argc, char **argv)main406,10749

user/usr/bin/tests/page.h,447
#define PAGE_SHIFT PAGE_SHIFT21,1150
#define PAGE_SIZE PAGE_SIZE22,1180
#define PAGE_MASK PAGE_MASK23,1237
#define PAGE_ALIGN_DOWN(PAGE_ALIGN_DOWN25,1290
#define PAGE_ALIGN_UP(PAGE_ALIGN_UP26,1355
#define PAGE_OFFSET(PAGE_OFFSET27,1436
#define PN_TO_ADDR(PN_TO_ADDR29,1492
#define ADDR_TO_PN(ADDR_TO_PN30,1556
#define PAGE_ALIGNED(PAGE_ALIGNED32,1611
#define PAGE_NSIZES PAGE_NSIZES34,1672
#define PAGE_SAME(PAGE_SAME36,1696

user/usr/bin/tests/forkbomb.c,43
int main(int argc, char **argv)main9,180

user/usr/bin/tests/linkermagic.h,211
#define text_start text_start9,132
#define text_end text_end10,182
#define data_start data_start11,218
#define data_end data_end12,256
#define bss_start bss_start13,292
#define bss_end bss_end14,329

user/usr/bin/tests/eatmem.c,539
#define PAGE_SIZE PAGE_SIZE20,326
static void eat(void *addr, int *count, int *num)eat22,350
#define FLAG_DAEMON FLAG_DAEMON54,1650
#define FLAG_INFINITE FLAG_INFINITE55,1677
#define FLAG_ITER FLAG_ITER56,1704
#define FLAG_NUM FLAG_NUM57,1731
#define OPT_DAEMON OPT_DAEMON59,1759
#define OPT_INFINITE OPT_INFINITE60,1783
#define OPT_ITER OPT_ITER61,1807
#define OPT_NUM OPT_NUM62,1832
int parse_args(int argc, char **argv, int *opts, int *iter, int *num)parse_args64,1854
int main(int argc, char **argv)main94,3049

user/usr/bin/tests/vfstest.c,1481
#undef __VM____VM__27,469
#define LONGNAME LONGNAME48,761
#define TESTSTR TESTSTR50,843
#define SHORTSTR SHORTSTR58,1505
static char root_dir[64];root_dir60,1563
makedirs(const char *dir)makedirs63,1601
getdent(const char *dir, dirent_t *dirent)getdent88,2144
removeall(const char *dir)removeall112,2718
vfstest_start(void)vfstest_start166,3888
vfstest_term(void)vfstest_term182,4224
#define paths_equal(paths_equal191,4498
#define syscall_fail(syscall_fail202,5477
#define syscall_success(syscall_success208,6037
#define create_file(create_file212,6281
#define read_fd(read_fd219,6890
#define test_fpos(test_fpos225,7419
vfstest_stat(void)vfstest_stat233,7943
vfstest_mkdir(void)vfstest_mkdir265,8773
vfstest_chdir(void)vfstest_chdir306,10189
#define CHDIR_TEST_DIR CHDIR_TEST_DIR308,10211
vfstest_paths(void)vfstest_paths344,11410
#define PATHS_TEST_DIR PATHS_TEST_DIR346,11432
vfstest_fd(void)vfstest_fd408,13339
#define FD_BUFSIZE FD_BUFSIZE410,13358
#define BAD_FD BAD_FD411,13379
#define HUGE_FD HUGE_FD412,13397
vfstest_infinite(void)vfstest_infinite503,16875
vfstest_open(void)vfstest_open537,17931
#define OPEN_BUFSIZE OPEN_BUFSIZE539,17952
vfstest_read(void)vfstest_read610,20866
#define READ_BUFSIZE READ_BUFSIZE612,20887
#define test_lseek(test_lseek640,21952
vfstest_getdents(void)vfstest_getdents716,24903
vfstest_s5fs_vm(void)vfstest_s5fs_vm763,26512
int main(int argc, char **argv)main899,32285

user/usr/bin/tests/mm.h,286
#define MM_POISON MM_POISON14,825
#define MM_POISON_ALLOC MM_POISON_ALLOC15,857
#define MM_POISON_FREE MM_POISON_FREE16,892
#define USER_MEM_LOW USER_MEM_LOW18,928
#define USER_MEM_HIGH USER_MEM_HIGH19,985
#define PTR_SIZE PTR_SIZE21,1043
#define PTR_MASK PTR_MASK22,1077

user/usr/bin/hello.c,44
int main(int argc, char **argv)main11,216

user/usr/bin/args.c,57
int main(int argc, char **argv, char **envp)main11,188

user/usr/bin/spin.c,42
int main(int argc, char **argv)main5,18

user/usr/bin/kshell.c,42
int main(int argc, char **argv)main8,91

user/usr/bin/fork-and-wait.c,44
int main(int argc, char **argv)main10,178

user/include/sys/utsname.h,353
#define _UTSNAME_LENGTH _UTSNAME_LENGTH14,825
struct utsname {utsname16,854
        char sysname[_UTSNAME_LENGTH];sysname17,871
        char nodename[_UTSNAME_LENGTH];nodename18,910
        char release[_UTSNAME_LENGTH];release19,950
        char version[_UTSNAME_LENGTH];version20,989
        char machine[_UTSNAME_LENGTH];machine21,1028

user/include/sys/stat.h,878
struct stat {stat23,953
        int st_mode;st_mode24,967
        int st_ino;st_ino25,988
        int st_dev;st_dev26,1008
        int st_rdev;st_rdev27,1028
        int st_nlink;st_nlink28,1049
        int st_uid;st_uid29,1071
        int st_gid;st_gid30,1091
        int st_size;st_size31,1111
        int st_atime;st_atime32,1132
        int st_mtime;st_mtime33,1154
        int st_ctime;st_ctime34,1176
        int st_blksize;st_blksize35,1198
        int st_blocks;st_blocks36,1222
#define S_IFCHR S_IFCHR41,1276
#define S_IFDIR S_IFDIR42,1332
#define S_IFBLK S_IFBLK43,1379
#define S_IFREG S_IFREG44,1430
#define S_IFLNK S_IFLNK45,1475
#define _S_TYPE(_S_TYPE47,1521
#define S_ISCHR(S_ISCHR48,1560
#define S_ISDIR(S_ISDIR49,1608
#define S_ISBLK(S_ISBLK50,1656
#define S_ISREG(S_ISREG51,1704
#define S_ISLNK(S_ISLNK52,1752

user/include/sys/mman.h,374
#define PROT_NONE PROT_NONE18,898
#define PROT_READ PROT_READ19,947
#define PROT_WRITE PROT_WRITE20,1004
#define PROT_EXEC PROT_EXEC21,1064
#define MAP_FAILED MAP_FAILED25,1168
#define MAP_SHARED MAP_SHARED29,1245
#define MAP_PRIVATE MAP_PRIVATE30,1271
#define MAP_TYPE MAP_TYPE31,1297
#define MAP_FIXED MAP_FIXED35,1376
#define MAP_ANON MAP_ANON36,1402

user/include/sys/types.h,1226
#define NULL NULL16,869
typedef signed char        int8_t;int8_t18,885
typedef unsigned char      uint8_t;uint8_t19,920
typedef signed short       int16_t;int16_t20,956
typedef unsigned short     uint16_t;uint16_t21,992
typedef signed int         int32_t;int32_t22,1029
typedef unsigned int       uint32_t;uint32_t23,1065
typedef signed long long   int64_t;int64_t25,1124
typedef unsigned long long uint64_t;uint64_t26,1160
typedef signed int         intptr_t;intptr_t27,1197
typedef unsigned int       uintptr_t;uintptr_t28,1234
typedef signed long        int64_t;int64_t30,1319
typedef unsigned long      uint64_t;uint64_t31,1355
typedef signed long        intptr_t;intptr_t32,1392
typedef unsigned long      uintptr_t;uintptr_t33,1429
typedef uint32_t           size_t;size_t36,1475
typedef int32_t            ssize_t;ssize_t37,1510
typedef int32_t            off_t;off_t38,1546
typedef int64_t            off64_t;off64_t39,1580
typedef int32_t            pid_t;pid_t40,1616
typedef uint16_t           mode_t;mode_t41,1650
typedef uint32_t           blocknum_t;blocknum_t42,1685
typedef uint32_t           ino_t;ino_t43,1724
typedef uint32_t           devid_t;devid_t44,1758

user/include/test/test.h,411
#define test_assert(test_assert13,131
#define test_fork_begin(test_fork_begin17,261
#define test_fork_end(test_fork_end23,489
typedef void (*test_pass_func_t)(int val, const char *file, int line, const char *name, const char *fmt, va_list args);test_pass_func_t36,848
typedef void (*test_fail_func_t)(const char *file, int line, const char *name, const char *fmt, va_list args);test_fail_func_t37,968

user/include/string.h,0

user/include/stdlib.h,223
#define NULL NULL7,71
#define EXIT_SUCCESS EXIT_SUCCESS11,115
#define EXIT_FAILURE EXIT_FAILURE15,167
#define atoi(atoi29,433
#define atol(atol30,480
#define atolf(atolf31,526
#define RAND_MAX RAND_MAX47,1013

user/include/pthread/pthread.h,369
typedef struct pthread          *pthread_t;pthread_t7,74
typedef struct pthread_mutex    *pthread_mutex_t;pthread_mutex_t8,118
typedef struct pthread_cond     *pthread_cond_t;pthread_cond_t9,168
typedef int pthread_attr_t;pthread_attr_t12,239
typedef int pthread_mutexattr_t;pthread_mutexattr_t13,267
typedef int pthread_condattr_t;pthread_condattr_t14,300

user/include/fcntl.h,200
#define O_RDONLY O_RDONLY21,952
#define O_WRONLY O_WRONLY22,978
#define O_RDWR O_RDWR23,1004
#define O_CREAT O_CREAT26,1067
#define O_TRUNC O_TRUNC27,1134
#define O_APPEND O_APPEND28,1197

user/include/errno.h,4567
#define errno errno18,902
#define EPERM EPERM23,967
#define ENOENT ENOENT24,1029
#define ESRCH ESRCH25,1093
#define EINTR EINTR26,1147
#define EIO EIO27,1209
#define ENXIO ENXIO28,1257
#define E2BIG E2BIG29,1321
#define ENOEXEC ENOEXEC30,1382
#define EBADF EBADF31,1438
#define ECHILD ECHILD32,1492
#define EAGAIN EAGAIN33,1549
#define ENOMEM ENOMEM34,1597
#define EACCES EACCES35,1649
#define EFAULT EFAULT36,1705
#define ENOTBLK ENOTBLK37,1755
#define EBUSY EBUSY38,1815
#define EEXIST EEXIST39,1877
#define EXDEV EXDEV40,1927
#define ENODEV ENODEV41,1983
#define ENOTDIR ENOTDIR42,2036
#define EISDIR EISDIR43,2090
#define EINVAL EINVAL44,2143
#define ENFILE ENFILE45,2198
#define EMFILE EMFILE46,2256
#define ENOTTY ENOTTY47,2314
#define ETXTBSY ETXTBSY48,2369
#define EFBIG EFBIG49,2422
#define ENOSPC ENOSPC50,2475
#define ESPIPE ESPIPE51,2537
#define EROFS EROFS52,2588
#define EMLINK EMLINK53,2648
#define EPIPE EPIPE54,2701
#define EDOM EDOM55,2751
#define ERANGE ERANGE56,2825
#define EDEADLK EDEADLK58,2894
#define ENAMETOOLONG ENAMETOOLONG59,2962
#define ENOLCK ENOLCK60,3019
#define ENOSYS ENOSYS61,3083
#define ENOTEMPTY ENOTEMPTY62,3146
#define ELOOP ELOOP63,3204
#define EWOULDBLOCK EWOULDBLOCK64,3278
#define ENOMSG ENOMSG65,3338
#define EIDRM EIDRM66,3403
#define ECHRNG ECHRNG67,3460
#define EL2NSYNC EL2NSYNC68,3526
#define EL3HLT EL3HLT69,3589
#define EL3RST EL3RST70,3642
#define ELNRNG ELNRNG71,3694
#define EUNATCH EUNATCH72,3757
#define ENOCSI ENOCSI73,3824
#define EL2HLT EL2HLT74,3889
#define EBADE EBADE75,3942
#define EBADR EBADR76,3997
#define EXFULL EXFULL77,4062
#define ENOANO ENOANO78,4114
#define EBADRQC EBADRQC79,4161
#define EBADSLT EBADSLT80,4220
#define EDEADLOCK EDEADLOCK82,4272
#define EBFONT EBFONT84,4305
#define ENOSTR ENOSTR85,4364
#define ENODATA ENODATA86,4422
#define ETIME ETIME87,4478
#define ENOSR ENOSR88,4530
#define ENONET ENONET89,4593
#define ENOPKG ENOPKG90,4661
#define EREMOTE EREMOTE91,4721
#define ENOLINK ENOLINK92,4776
#define EADV EADV93,4836
#define ESRMNT ESRMNT94,4890
#define ECOMM ECOMM95,4942
#define EPROTO EPROTO96,5008
#define EMULTIHOP EMULTIHOP97,5061
#define EDOTDOT EDOTDOT98,5118
#define EBADMSG EBADMSG99,5175
#define EOVERFLOW EOVERFLOW100,5232
#define ENOTUNIQ ENOTUNIQ101,5308
#define EBADFD EBADFD102,5373
#define EREMCHG EREMCHG103,5440
#define ELIBACC ELIBACC104,5501
#define ELIBBAD ELIBBAD105,5578
#define ELIBSCN ELIBSCN106,5653
#define ELIBMAX ELIBMAX107,5723
#define ELIBEXEC ELIBEXEC108,5809
#define EILSEQ EILSEQ109,5885
#define ERESTART ERESTART110,5945
#define ESTRPIPE ESTRPIPE111,6027
#define EUSERS EUSERS112,6084
#define ENOTSOCK ENOTSOCK113,6137
#define EDESTADDRREQ EDESTADDRREQ114,6206
#define EMSGSIZE EMSGSIZE115,6273
#define EPROTOTYPE EPROTOTYPE116,6328
#define ENOPROTOOPT ENOPROTOOPT117,6397
#define EPROTONOSUPPORT EPROTONOSUPPORT118,6458
#define ESOCKTNOSUPPORT ESOCKTNOSUPPORT119,6519
#define EOPNOTSUPP EOPNOTSUPP120,6583
#define EPFNOSUPPORT EPFNOSUPPORT121,6667
#define EAFNOSUPPORT EAFNOSUPPORT122,6735
#define EADDRINUSE EADDRINUSE123,6814
#define EADDRNOTAVAIL EADDRNOTAVAIL124,6875
#define ENETDOWN ENETDOWN125,6945
#define ENETUNREACH ENETUNREACH126,6999
#define ENETRESET ENETRESET127,7060
#define ECONNABORTED ECONNABORTED128,7142
#define ECONNRESET ECONNRESET129,7213
#define ENOBUFS ENOBUFS130,7276
#define EISCONN EISCONN131,7340
#define ENOTCONN ENOTCONN132,7418
#define ESHUTDOWN ESHUTDOWN133,7492
#define ETOOMANYREFS ETOOMANYREFS134,7576
#define ETIMEDOUT ETIMEDOUT135,7649
#define ECONNREFUSED ECONNREFUSED136,7708
#define EHOSTDOWN EHOSTDOWN137,7765
#define EHOSTUNREACH EHOSTUNREACH138,7816
#define EALREADY EALREADY139,7871
#define EINPROGRESS EINPROGRESS140,7939
#define ESTALE ESTALE141,8003
#define EUCLEAN EUCLEAN142,8063
#define ENOTNAM ENOTNAM143,8126
#define ENAVAIL ENAVAIL144,8192
#define EISNAM EISNAM145,8260
#define EREMOTEIO EREMOTEIO146,8319
#define EDQUOT EDQUOT147,8374
#define ENOMEDIUM ENOMEDIUM149,8428
#define EMEDIUMTYPE EMEDIUMTYPE150,8482
#define ECANCELED ECANCELED151,8538
#define ENOKEY ENOKEY152,8595
#define EKEYEXPIRED EKEYEXPIRED153,8660
#define EKEYREVOKED EKEYREVOKED154,8714
#define EKEYREJECTED EKEYREJECTED155,8773
#define EOWNERDEAD EOWNERDEAD158,8865
#define ENOTRECOVERABLE ENOTRECOVERABLE159,8914
#define ENOTSUP ENOTSUP162,9005

user/include/lseek.h,102
#define SEEK_SET SEEK_SET14,825
#define SEEK_CUR SEEK_CUR15,851
#define SEEK_END SEEK_END16,877

user/include/stddef.h,330
#define inline inline5,38
#define unlikely(unlikely6,90
#define likely(likely7,135
#define offsetof(offsetof9,179
#define MIN(MIN13,288
#define MAX(MAX16,349
#define CONTAINER_OF(CONTAINER_OF19,399
#define QUOTE_BY_NAME(QUOTE_BY_NAME27,713
#define QUOTE_BY_VALUE(QUOTE_BY_VALUE28,741
#define QUOTE(QUOTE30,820

user/include/stdarg.h,132
typedef char *va_list;va_list14,825
#define va_start(va_start16,849
#define va_end(va_end17,897
#define va_arg(va_arg18,941

user/include/ctype.h,913
#define _U _U30,1186
#define _L _L31,1222
#define _D _D32,1258
#define _C _C33,1294
#define _P _P34,1330
#define _S _S35,1366
#define _X _X36,1423
#define _SP _SP37,1463
static unsigned char _ctype[] = {_ctype40,1513
#define __ismask(__ismask67,3346
#define isalnum(isalnum69,3401
#define isalpha(isalpha70,3457
#define iscntrl(iscntrl71,3510
#define isdigit(isdigit72,3560
#define isgraph(isgraph73,3610
#define islower(islower74,3669
#define isprint(isprint75,3719
#define ispunct(ispunct76,3782
#define isspace(isspace77,3832
#define isupper(isupper78,3882
#define isxdigit(isxdigit79,3932
#define isascii(isascii81,3986
#define toascii(toascii82,4034
static inline unsigned char __tolower(unsigned char c)__tolower84,4082
static inline unsigned char __toupper(unsigned char c)__toupper91,4216
#define tolower(tolower98,4350
#define toupper(toupper99,4382

user/include/stdio.h,147
#define __IONBF __IONBF9,123
#define EOF EOF12,154
#define NULL NULL16,196
typedef int FILE;FILE20,266
typedef off_t fpos_t;fpos_t21,284

user/include/limits.h,525
#define CHAR_BIT CHAR_BIT14,825
#define CHAR_MAX CHAR_MAX15,845
#define UCHAR_MAX UCHAR_MAX16,873
#define SCHAR_MAX SCHAR_MAX17,914
#define SCHAR_MIN SCHAR_MIN18,962
#define USHRT_MAX USHRT_MAX19,997
#define SHRT_MAX SHRT_MAX20,1039
#define SHRT_MIN SHRT_MIN21,1088
#define UINT_MAX UINT_MAX22,1122
#define INT_MAX INT_MAX23,1162
#define INT_MIN INT_MIN24,1208
#define ULONG_MAX ULONG_MAX25,1241
#define LONG_MAX LONG_MAX26,1283
#define LONG_MIN LONG_MIN27,1331
#define UPTR_MAX UPTR_MAX29,1366

user/include/weenix/config.h,676
#define DEFAULT_STACK_SIZE DEFAULT_STACK_SIZE25,991
#define TICK_MSECS TICK_MSECS26,1054
#define KMEM_FRAC(KMEM_FRAC36,1300
#define PF_HASH_SIZE PF_HASH_SIZE39,1411
#define PAGEOUTD_FREE_TARGET_SHIFT PAGEOUTD_FREE_TARGET_SHIFT41,1532
#define PAGEOUTD_FREE_MIN_SHIFT PAGEOUTD_FREE_MIN_SHIFT42,1586
#define MAXPATHLEN MAXPATHLEN49,1692
#define MAX_FILES MAX_FILES50,1765
#define MAX_VFS MAX_VFS51,1831
#define MAX_VNODES MAX_VNODES52,1892
#define NAME_LEN NAME_LEN53,1967
#define NFILES NFILES54,2044
#define VFS_ROOTFS_DEV VFS_ROOTFS_DEV57,2179
#    define VFS_ROOTFS_TYPE VFS_ROOTFS_TYPE61,2322
#    define VFS_ROOTFS_TYPE VFS_ROOTFS_TYPE63,2363

user/include/weenix/debug.h,22
#define dbg(dbg5,49

user/include/weenix/syscall.h,5065
#define INTR_SYSCALL INTR_SYSCALL23,974
#define SYS_syscall SYS_syscall27,1033
#define SYS_exit SYS_exit28,1067
#define SYS_fork SYS_fork29,1101
#define SYS_read SYS_read30,1135
#define SYS_write SYS_write31,1169
#define SYS_open SYS_open32,1203
#define SYS_close SYS_close33,1237
#define SYS_waitpid SYS_waitpid34,1271
#define SYS_link SYS_link35,1305
#define SYS_unlink SYS_unlink36,1339
#define SYS_execve SYS_execve37,1373
#define SYS_chdir SYS_chdir38,1408
#define SYS_sleep SYS_sleep39,1443
#define SYS_lseek SYS_lseek40,1488
#define SYS_sync SYS_sync41,1523
#define SYS_nuke SYS_nuke42,1558
#define SYS_dup SYS_dup43,1603
#define SYS_pipe SYS_pipe44,1638
#define SYS_ioctl SYS_ioctl45,1683
#define SYS_rmdir SYS_rmdir46,1728
#define SYS_mkdir SYS_mkdir47,1763
#define SYS_getdents SYS_getdents48,1798
#define SYS_mmap SYS_mmap49,1833
#define SYS_mprotect SYS_mprotect50,1868
#define SYS_munmap SYS_munmap51,1913
#define SYS_rename SYS_rename52,1948
#define SYS_uname SYS_uname53,1993
#define SYS_thr_create SYS_thr_create54,2028
#define SYS_thr_cancel SYS_thr_cancel55,2073
#define SYS_thr_exit SYS_thr_exit56,2108
#define SYS_thr_yield SYS_thr_yield57,2143
#define SYS_thr_join SYS_thr_join58,2178
#define SYS_gettid SYS_gettid59,2223
#define SYS_getpid SYS_getpid60,2268
#define SYS_errno SYS_errno61,2303
#define SYS_halt SYS_halt62,2338
#define SYS_get_free_mem SYS_get_free_mem63,2373
#define SYS_set_errno SYS_set_errno64,2418
#define SYS_dup2 SYS_dup265,2453
#define SYS_brk SYS_brk66,2488
#define SYS_mount SYS_mount67,2523
#define SYS_umount SYS_umount68,2558
#define SYS_stat SYS_stat69,2593
#define SYS_debug SYS_debug76,2724
#define SYS_kshell SYS_kshell77,2761
typedef struct argstr {argstr82,2826
        const char *as_str;as_str83,2850
        size_t      as_len; /* Not including null character */as_len84,2878
} argstr_t;argstr_t85,2941
typedef struct argvec {argvec87,2954
        argstr_t   *av_vec;av_vec88,2978
        size_t      av_len; /* Not including null entry */av_len89,3006
} argvec_t;argvec_t90,3065
typedef struct waitpid_args {waitpid_args92,3078
        pid_t  wpa_pid;wpa_pid93,3108
        int    wpa_options;wpa_options94,3132
        int   *wpa_status;wpa_status95,3160
} waitpid_args_t;waitpid_args_t96,3187
typedef struct mmap_args {mmap_args98,3206
        void   *mma_addr;mma_addr99,3233
        size_t  mma_len;mma_len100,3259
        int     mma_prot;mma_prot101,3284
        int     mma_flags;mma_flags102,3310
        int     mma_fd;mma_fd103,3337
        off_t   mma_off;mma_off104,3361
} mmap_args_t;mmap_args_t105,3386
typedef struct munmap_args {munmap_args107,3402
        void   *addr;addr108,3431
        size_t  len;len109,3453
} munmap_args_t;munmap_args_t110,3474
typedef struct open_args {open_args112,3492
        argstr_t filename;filename113,3519
        int      flags;flags114,3546
        int      mode;mode115,3570
} open_args_t;open_args_t116,3593
typedef struct read_args {read_args118,3609
        int     fd;fd119,3636
        void   *buf;buf120,3656
        size_t  nbytes;nbytes121,3677
} read_args_t;read_args_t122,3701
typedef struct write_args {write_args124,3717
        int     fd;fd125,3745
        void   *buf;buf126,3765
        size_t  nbytes;nbytes127,3786
} write_args_t;write_args_t128,3810
typedef struct mkdir_args {mkdir_args130,3827
        argstr_t path;path131,3855
        int      mode;mode132,3878
} mkdir_args_t;mkdir_args_t133,3901
typedef struct link_args {link_args135,3918
        argstr_t to;to136,3945
        argstr_t from;from137,3966
} link_args_t;link_args_t138,3989
typedef struct execve_args {execve_args140,4005
        argstr_t filename;filename141,4034
        argvec_t argv;argv142,4061
        argvec_t envp;envp143,4084
} execve_args_t;execve_args_t144,4107
typedef struct rename_args {rename_args146,4125
        argstr_t oldname;oldname147,4154
        argstr_t newname;newname148,4180
} rename_args_t;rename_args_t149,4206
typedef struct getdents_args {getdents_args151,4224
        int            fd;fd152,4255
        struct dirent *dirp;dirp153,4282
        size_t         count;count154,4311
} getdents_args_t;getdents_args_t155,4341
typedef struct lseek_args {lseek_args157,4361
        int fd;fd158,4389
        int offset;offset159,4405
        int whence;whence160,4425
} lseek_args_t;lseek_args_t161,4445
typedef struct dup2_args {dup2_args163,4462
        int ofd;ofd164,4489
        int nfd;nfd165,4506
} dup2_args_t;dup2_args_t166,4523
typedef struct mount_args {mount_args169,4559
        argstr_t spec;spec170,4587
        argstr_t dir;dir171,4610
        argstr_t fstype;fstype172,4632
} mount_args_t;mount_args_t173,4657
typedef struct stat_args {stat_args176,4681
        argstr_t     path;path177,4708
        struct stat *buf;buf178,4735
} stat_args_t;stat_args_t179,4761

user/include/weenix/trap.h,112
#define TRAP_INTR_STRING TRAP_INTR_STRING8,105
static inline int trap(uint32_t num, uint32_t arg)trap10,151

user/include/unistd.h,159
#define NULL NULL13,194
#define STDIN_FILENO STDIN_FILENO66,1856
#define STDOUT_FILENO STDOUT_FILENO67,1879
#define STDERR_FILENO STDERR_FILENO68,1903

user/include/dirent.h,339
typedef struct dirent {dirent25,1024
        ino_t   d_ino;                  /* entry inode number */d_ino26,1048
        off_t   d_off;                  /* seek pointer of next entry */d_off27,1113
        char    d_name[NAME_LEN + 1];   /* filename */d_name28,1186
} dirent_t;dirent_t29,1241
#define d_fileno d_fileno31,1254

user/lib/libtest/test.c,842
typedef struct test_data {test_data12,165
        int td_passed;td_passed13,192
        int td_failed;td_failed14,215
} test_data_t;test_data_t15,238
static test_data_t *_test_data = NULL;_test_data20,482
static test_pass_func_t _pass_func = _default_test_pass;_pass_func21,521
static test_fail_func_t _fail_func = _default_test_fail;_fail_func22,578
test_init(void)test_init25,641
test_fini(void)test_fini54,1440
test_errstr(int err)test_errstr62,1620
_default_test_fail(const char *file, int line, const char *name, const char *fmt, va_list args)_default_test_fail151,4386
_default_test_pass(int val, const char *file, int line, const char *name, const char *fmt, va_list args)_default_test_pass164,4784
_test_assert(int val, const char *file, int line, const char *name, const char *fmt, ...)_test_assert170,4931

user/lib/libc/strtol.c,87
strtol(const char *__restrict nptr, char **__restrict endptr, int base)strtol42,1820

user/lib/libc/rand.c,161
#define RANDOM(RANDOM9,300
static unsigned long long randseed = 123456L;randseed11,396
int rand(void)rand13,443
void srand(unsigned int seed)srand19,546

user/lib/libc/quad.c,1197
union uu {uu66,3086
        long long            q;              /* as a (signed) quad */q67,3097
        long long            uq;             /* as an unsigned quad */uq68,3167
        long               sl[2];          /* as two signed longs */sl69,3238
        unsigned long      ul[2];          /* as two unsigned longs */ul70,3307
#define _QUAD_HIGHWORD _QUAD_HIGHWORD73,3423
#define _QUAD_LOWWORD _QUAD_LOWWORD74,3448
#define H H78,3513
#define L L79,3552
#define CHAR_BIT CHAR_BIT86,3757
#define QUAD_BITS QUAD_BITS87,3828
#define LONG_BITS LONG_BITS88,3883
#define HALF_BITS HALF_BITS89,3933
#define HHALF(HHALF100,4401
#define LHALF(LHALF101,4444
#define LHUP(LHUP102,4501
#define B B108,4657
#define COMBINE(COMBINE111,4777
typedef unsigned long digit;digit117,5009
shl(register digit *p, register int len, register int sh)shl127,5259
__qdivrem(unsigned long long uq, unsigned long long vq, unsigned long long *arq)__qdivrem145,5825
long long __divdi3(long long a, long long b)__divdi3345,13091
__udivdi3(unsigned long long a, unsigned long long b)__udivdi3366,13574
__umoddi3(unsigned long long a, unsigned long long b)__umoddi3376,13774

user/lib/libc/printf.c,561
int printf(const char *fmt, ...)printf60,2747
int fprintf(FILE *stream, const char *fmt, ...)fprintf71,2924
int sprintf(char *buf, const char *fmt, ...)sprintf82,3125
int snprintf(char *buf, size_t size, const char *fmt, ...)snprintf93,3320
int vprintf(const char *fmt, va_list args)vprintf104,3536
#define __LIBC_PRINTF_BUFSIZE __LIBC_PRINTF_BUFSIZE109,3628
int vfprintf(FILE *stream, const char *fmt, va_list args)vfprintf110,3663
int vsprintf(char *buf, const char *fmt, va_list args)vsprintf121,3960
int fflush(FILE *stream)fflush126,4076

user/lib/libc/malloc.c,4584
#define __inline__ __inline__20,632
typedef unsigned short      u_short;u_short23,699
typedef unsigned char       u_char;u_char24,736
typedef unsigned int        u_int;u_int25,772
typedef unsigned long       u_long;u_long26,807
typedef unsigned long long  u_quad_t;u_quad_t28,859
#define _open _open30,904
#define _write _write31,923
#undef MALLOC_EXTRA_SANITYMALLOC_EXTRA_SANITY41,1310
#define SOME_JUNK SOME_JUNK48,1456
#define malloc_pageshift malloc_pageshift64,2068
#define malloc_minsize malloc_minsize65,2104
static int fdzero;fdzero67,2141
#define MMAP_FD MMAP_FD68,2160
#define INIT_MMAP(INIT_MMAP69,2183
#define MADV_FREE MADV_FREE72,2329
struct pginfo {pginfo82,2500
        struct pginfo       *next;  /* next on the free list */next83,2516
        void                *page;  /* Pointer to the page */page84,2580
        u_short             size;   /* size of this page's chunks */size85,2642
        u_short             shift;  /* How far to shift for this size chunks */shift86,2711
        u_short             free;   /* How many free chunks */free87,2791
        u_short             total;  /* How many chunk */total88,2854
        u_int               bits[1]; /* Which chunks are free */bits89,2911
struct pgfree {pgfree96,3040
        struct pgfree       *next;  /* next run of free pages */next97,3056
        struct pgfree       *prev;  /* prev run of free pages */prev98,3121
        void                *page;  /* pointer to free pages */page99,3186
        void                *end;   /* pointer to end of free pages */end100,3250
        size_t              size;   /* number of bytes free */size101,3321
#define MALLOC_BITS MALLOC_BITS108,3471
#define MALLOC_NOT_MINE MALLOC_NOT_MINE113,3566
#define MALLOC_FREE MALLOC_FREE114,3611
#define MALLOC_FIRST MALLOC_FIRST115,3656
#define MALLOC_FOLLOW MALLOC_FOLLOW116,3701
#define MALLOC_MAGIC MALLOC_MAGIC117,3746
#define malloc_pageshift malloc_pageshift120,3817
#define malloc_minsize malloc_minsize124,3892
#define malloc_pagesize malloc_pagesize128,3974
#define malloc_maxsize malloc_maxsize136,4175
#define malloc_pagemask malloc_pagemask140,4290
#define pageround(pageround142,4337
#define ptr2index(ptr2index143,4411
#define THREAD_LOCK(THREAD_LOCK146,4506
#define THREAD_UNLOCK(THREAD_UNLOCK150,4558
#define MMAP_FD MMAP_FD154,4606
#define INIT_MMAP(INIT_MMAP158,4653
static unsigned malloc_started;malloc_started162,4725
static int malloc_active;malloc_active165,4800
static unsigned malloc_cache = 16;malloc_cache168,4863
static u_long malloc_origo;malloc_origo171,4965
static u_long last_index;last_index174,5051
static struct   pginfo **page_dir;page_dir177,5141
static unsigned malloc_ninfo;malloc_ninfo180,5220
static struct pgfree free_list;free_list183,5281
static int malloc_abort;malloc_abort186,5360
static int suicide;suicide189,5416
static int malloc_realloc;malloc_realloc192,5461
static int malloc_hint = 0;malloc_hint195,5535
static int malloc_xmalloc;malloc_xmalloc198,5591
static int malloc_sysv;malloc_sysv201,5657
static int malloc_zero;malloc_zero204,5701
static int malloc_junk;malloc_junk207,5745
static int malloc_utrace;malloc_utrace212,5805
struct ut {ut214,5832
        void *p;p215,5844
        size_t s;s216,5861
        void *r;r217,5879
#define UTRACE(UTRACE222,5938
#define UTRACE(UTRACE226,6093
static void *malloc_brk;malloc_brk230,6161
static struct pgfree *px;px233,6234
char *malloc_options;malloc_options236,6288
typedef char *caddr_t;caddr_t237,6310
static char *malloc_func;malloc_func239,6375
#define MMAP(MMAP242,6423
static char *__progname = "";__progname257,6777
#define abort(abort261,6833
wrterror(char *p)wrterror265,6877
wrtwarning(char *p)wrtwarning277,7198
map_pages(int pages)map_pages292,7591
extend_pgdir(u_long index)extend_pgdir319,8156
malloc_init()malloc_init372,9791
malloc_pages(size_t size)malloc_pages489,13895
malloc_make_chunks(int bits)malloc_make_chunks575,16519
malloc_bytes(size_t size)malloc_bytes644,18323
imalloc(size_t size)imalloc701,19646
irealloc(void *ptr, size_t size)irealloc728,20240
free_pages(void *ptr, int index, struct pginfo *info)free_pages821,23287
free_bytes(void *ptr, int index, struct pginfo *info)free_bytes953,27749
ifree(void *ptr)ifree1015,29489
malloc(size_t size)malloc1060,30461
free(void *ptr)free1087,31086
realloc(void *ptr, size_t size)realloc1105,31467
void *calloc(size_t nelem, size_t elsize)calloc1139,32352

user/lib/libc/syscall.c,2067
static void *__curbrk = NULL;__curbrk12,152
#define MAX_EXIT_HANDLERS MAX_EXIT_HANDLERS13,182
static void     (*atexit_func[MAX_EXIT_HANDLERS])();atexit_func15,212
static int      atexit_handlers = 0;atexit_handlers16,265
void *sbrk(intptr_t incr)sbrk19,304
int brk(void *addr)brk48,1171
int fork(void)fork59,1420
int atexit(void (*func)(void))atexit64,1474
void _exit(int status)_exit74,1671
void exit(int status)exit83,1899
void yield(void)yield93,2111
pid_t wait(int *status)wait101,2372
pid_t waitpid(pid_t pid, int options, int *status)waitpid112,2575
void thr_exit(int status)thr_exit123,2812
pid_t getpid(void)getpid128,2890
int halt(void)halt133,2950
void *mmap(void *addr, size_t len, int prot, int flags, int fd, off_t off)mmap138,3004
int munmap(void *addr, size_t len)munmap152,3344
void sync(void)sync162,3515
int open(const char *filename, int flags, int mode)open167,3563
off_t lseek(int fd, off_t offset, int whence)lseek179,3841
int read(int fd, void *buf, size_t nbytes)read191,4054
int write(int fd, const void *buf, size_t nbytes)write203,4256
int close(int fd)close214,4475
int dup(int fd)dup219,4545
int dup2(int ofd, int nfd)dup2224,4611
int mkdir(const char *path, int mode)mkdir234,4768
int rmdir(const char *path)rmdir245,4990
int unlink(const char *path)unlink253,5160
int link(const char *from, const char *to)link261,5332
int rename(const char *oldname, const char *newname)rename273,5597
int chdir(const char *path)chdir285,5908
size_t get_free_mem(void)get_free_mem293,6078
int execve(const char *filename, char *const argv[], char *const envp[])execve298,6160
void thr_set_errno(int n)thr_set_errno337,7482
int thr_errno(void)thr_errno342,7556
int getdents(int fd, dirent_t *dir, size_t size)getdents347,7616
mount(const char *spec, const char *dir, const char *fstype)mount360,7853
umount(const char *path)umount375,8228
stat(const char *path, struct stat *buf)stat387,8432
uname(struct utsname *buf)uname399,8657
debug(const char *str)debug405,8741

user/lib/libc/vsnprintf.c,465
static int skip_atoi(const char **s)skip_atoi64,2829
#define ZEROPAD ZEROPAD73,2984
#define SIGN SIGN74,3036
#define PLUS PLUS75,3095
#define SPACE SPACE76,3143
#define LEFT LEFT77,3195
#define SPECIAL SPECIAL78,3248
#define LARGE LARGE79,3289
static char *number(char *buf, char *end, long long num, int base, int size, int precision, int type)number81,3361
int vsnprintf(char *buf, size_t size, const char *fmt, va_list args)vsnprintf196,7070

user/lib/libc/vsscanf.c,527
static int skip_atoi(const char **s)skip_atoi61,2786
unsigned long simple_strtoul(const char *cp, char **endp, unsigned int base)simple_strtoul76,3143
long simple_strtol(const char *cp, char **endp, unsigned int base)simple_strtol107,4084
unsigned long long simple_strtoull(const char *cp, char **endp, unsigned int base)simple_strtoull120,4495
long long simple_strtoll(const char *cp, char **endp, unsigned int base)simple_strtoll151,5502
int vsscanf(const char *buf, const char *fmt, va_list args)vsscanf163,5864

user/lib/libc/string.c,1059
int memcmp(const void *cs, const void *ct, size_t count)memcmp6,83
void *memcpy(void *dest, const void *src, size_t count)memcpy17,379
int strncmp(const char *cs, const char *ct, size_t count)strncmp28,582
int strcmp(const char *cs, const char *ct)strcmp41,857
char *strcpy(char *dest, const char *src)strcpy53,1084
char *strncpy(char *dest, const char *src, size_t count)strncpy62,1252
void *memset(void *s, int c, size_t count)memset72,1447
size_t strnlen(const char *s, size_t count)strnlen82,1597
char *strcat(char *dest, const char *src)strcat92,1777
size_t strlen(const char *s)strlen104,1963
char *strchr(const char *s, int c)strchr113,2116
char *strrchr(const char *s, int c)strrchr121,2287
char *strstr(const char *s1, const char *s2)strstr130,2468
char *strdup(const char *s)strdup147,2829
strpbrk(const char *string, const char *brkset)strpbrk160,3134
strspn(const char *string, const char *charset)strspn175,3458
strtok(char *string, const char *sepset)strtok190,3782
char *strerror(int errnum)strerror225,4693

user/lib/libc/scanf.c,65
int sscanf(const char *buf, const char *fmt, ...)sscanf64,2891

user/lib/libc/errno.c,34
int _libc_errno;_libc_errno3,20

user/lib/libc/stream.c,184
static int stdstreams[3] = { 0, 1, 2 };stdstreams3,20
FILE *stdin = &stdstreams[0];stdin5,61
FILE *stdout = &stdstreams[1];stdout6,91
FILE *stderr = &stdstreams[2];stderr7,122

user/lib/ld-weenix/ldalloc.h,0

user/lib/ld-weenix/ldnames.c,312
typedef struct modent modent_t;modent_t16,199
struct modent {modent17,231
        const char      *name;name18,247
        modent_t        *next;next19,278
static modent_t *names = NULL;names22,313
void _ldaddname(const char *name)_ldaddname33,734
int _ldchkname(const char *name)_ldchkname48,1117

user/lib/ld-weenix/asm.h,527
#define L(L29,1075
#define ENTRY(ENTRY31,1101
#define END(END42,1663
#define ALIGNARG(ALIGNARG47,1872
#define STABS_CURRENT_FILE(STABS_CURRENT_FILE49,1906
#define STABS_CURRENT_FILE1(STABS_CURRENT_FILE152,2009
#define STABS_FUN_END(STABS_FUN_END55,2111
#define STABS_FUN(STABS_FUN58,2215
#define STABS_FUN2(STABS_FUN262,2363
#define JUMPTARGET(JUMPTARGET67,2554
#define SYSCALL_PIC_SETUP SYSCALL_PIC_SETUP68,2597
#define JUMPTARGET(JUMPTARGET74,2916
#define SYSCALL_PIC_SETUP SYSCALL_PIC_SETUP75,2953

user/lib/ld-weenix/ldreloc_i386.c,525
typedef struct args_frame_t {args_frame_t30,801
        int             argc;argc31,831
        char            **argv;argv32,861
        char            **env;env33,893
} args_frame_t;args_frame_t34,924
ldinit_t _ldloadrtld(int argc, char **argv, char **envp, Elf32_auxv_t *auxv)_ldloadrtld36,941
void _ldrelocobj(module_t *module)_ldrelocobj104,3141
void _ldrelocplt(module_t *module)_ldrelocplt178,6652
_ldpltgot_init(module_t *module)_ldpltgot_init195,7198
_ldbindnow(module_t *mod)_ldbindnow203,7374

user/lib/ld-weenix/ldnames.h,38
#define _ldnames_h__ldnames_h_9,111

user/lib/ld-weenix/ldutil.c,196
static const char *err_zero =err_zero19,290
void _ldverify(int test, const char *msg)_ldverify24,451
int _ldzero()_ldzero37,784
unsigned long _ldelfhash(const char *name)_ldelfhash54,1140

user/lib/ld-weenix/ldalloc.c,248
static unsigned long start;start16,242
static unsigned long pos;pos17,270
static unsigned long amount;amount18,296
void _ldainit(unsigned long pagesize, unsigned long pages)_ldainit30,802
void *_ldalloc(unsigned long size)_ldalloc47,1375

user/lib/ld-weenix/ldutil.h,36
#define _ldutil_h__ldutil_h_9,141

user/lib/ld-weenix/smacros.h,136
#define _smacros_h__smacros_h_9,149
#define LENTRY(LENTRY18,246
#define ALTLENTRY(ALTLENTRY24,418
#define GET_GOT(GET_GOT31,576

user/lib/ld-weenix/ldresolve.c,426
#define H_nbucket H_nbucket13,194
#define H_nchain H_nchain14,220
#define H_bucket H_bucket15,246
int _ldlookup(module_t *module, const char *name)_ldlookup21,474
ldsym_t _ldsymbol(module_t *module, const char *name, int binding, int type,_ldsymbol47,1323
ldsym_t _ldresolve(module_t *module, const char *name, int type,_ldresolve77,2536
Elf32_Addr _rtresolve(module_t *mod, Elf32_Word reloff)_rtresolve103,3307

user/lib/ld-weenix/ldresolve.h,42
#define _ldresolve_h__ldresolve_h_9,151

user/lib/ld-weenix/elf.h,97829
typedef uint16_t Elf32_Half;Elf32_Half44,1910
typedef uint16_t Elf64_Half;Elf64_Half45,1939
typedef uint32_t Elf32_Word;Elf32_Word48,2025
typedef int32_t  Elf32_Sword;Elf32_Sword49,2054
typedef uint32_t Elf64_Word;Elf64_Word50,2084
typedef int32_t  Elf64_Sword;Elf64_Sword51,2113
typedef uint64_t Elf32_Xword;Elf32_Xword54,2200
typedef int64_t  Elf32_Sxword;Elf32_Sxword55,2230
typedef uint64_t Elf64_Xword;Elf64_Xword56,2261
typedef int64_t  Elf64_Sxword;Elf64_Sxword57,2291
typedef uint32_t Elf32_Addr;Elf32_Addr60,2349
typedef uint64_t Elf64_Addr;Elf64_Addr61,2378
typedef uint32_t Elf32_Off;Elf32_Off64,2437
typedef uint64_t Elf64_Off;Elf64_Off65,2465
typedef uint16_t Elf32_Section;Elf32_Section68,2556
typedef uint16_t Elf64_Section;Elf64_Section69,2588
typedef Elf32_Half Elf32_Versym;Elf32_Versym72,2665
typedef Elf64_Half Elf64_Versym;Elf64_Versym73,2698
#define EI_NIDENT EI_NIDENT78,2808
        unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */e_ident81,2849
        Elf32_Half    e_type;                 /* Object file type */e_type82,2929
        Elf32_Half    e_machine;              /* Architecture */e_machine83,2998
        Elf32_Word    e_version;              /* Object file version */e_version84,3063
        Elf32_Addr    e_entry;                /* Entry point virtual address */e_entry85,3135
        Elf32_Off     e_phoff;                /* Program header table file offset */e_phoff86,3215
        Elf32_Off     e_shoff;                /* Section header table file offset */e_shoff87,3300
        Elf32_Word    e_flags;                /* Processor-specific flags */e_flags88,3385
        Elf32_Half    e_ehsize;               /* ELF header size in bytes */e_ehsize89,3462
        Elf32_Half    e_phentsize;            /* Program header table entry size */e_phentsize90,3539
        Elf32_Half    e_phnum;                /* Program header table entry count */e_phnum91,3623
        Elf32_Half    e_shentsize;            /* Section header table entry size */e_shentsize92,3708
        Elf32_Half    e_shnum;                /* Section header table entry count */e_shnum93,3792
        Elf32_Half    e_shstrndx;             /* Section header string table index */e_shstrndx94,3877
} Elf32_Ehdr;Elf32_Ehdr95,3963
        unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */e_ident98,3995
        Elf64_Half    e_type;                 /* Object file type */e_type99,4075
        Elf64_Half    e_machine;              /* Architecture */e_machine100,4144
        Elf64_Word    e_version;              /* Object file version */e_version101,4209
        Elf64_Addr    e_entry;                /* Entry point virtual address */e_entry102,4281
        Elf64_Off     e_phoff;                /* Program header table file offset */e_phoff103,4361
        Elf64_Off     e_shoff;                /* Section header table file offset */e_shoff104,4446
        Elf64_Word    e_flags;                /* Processor-specific flags */e_flags105,4531
        Elf64_Half    e_ehsize;               /* ELF header size in bytes */e_ehsize106,4608
        Elf64_Half    e_phentsize;            /* Program header table entry size */e_phentsize107,4685
        Elf64_Half    e_phnum;                /* Program header table entry count */e_phnum108,4769
        Elf64_Half    e_shentsize;            /* Section header table entry size */e_shentsize109,4854
        Elf64_Half    e_shnum;                /* Section header table entry count */e_shnum110,4938
        Elf64_Half    e_shstrndx;             /* Section header string table index */e_shstrndx111,5023
} Elf64_Ehdr;Elf64_Ehdr112,5109
#define EI_MAG0 EI_MAG0118,5280
#define ELFMAG0 ELFMAG0119,5359
#define EI_MAG1 EI_MAG1121,5426
#define ELFMAG1 ELFMAG1122,5505
#define EI_MAG2 EI_MAG2124,5572
#define ELFMAG2 ELFMAG2125,5651
#define EI_MAG3 EI_MAG3127,5718
#define ELFMAG3 ELFMAG3128,5797
#define ELFMAG ELFMAG131,5943
#define SELFMAG SELFMAG132,5977
#define EI_CLASS EI_CLASS134,6004
#define ELFCLASSNONE ELFCLASSNONE135,6072
#define ELFCLASS32 ELFCLASS32136,6132
#define ELFCLASS64 ELFCLASS64137,6193
#define ELFCLASSNUM ELFCLASSNUM138,6254
#define EI_DATA EI_DATA140,6281
#define ELFDATANONE ELFDATANONE141,6352
#define ELFDATA2LSB ELFDATA2LSB142,6420
#define ELFDATA2MSB ELFDATA2MSB143,6496
#define ELFDATANUM ELFDATANUM144,6569
#define EI_VERSION EI_VERSION146,6596
#define EI_OSABI EI_OSABI149,6698
#define ELFOSABI_NONE ELFOSABI_NONE150,6766
#define ELFOSABI_SYSV ELFOSABI_SYSV151,6830
#define ELFOSABI_HPUX ELFOSABI_HPUX152,6884
#define ELFOSABI_NETBSD ELFOSABI_NETBSD153,6936
#define ELFOSABI_LINUX ELFOSABI_LINUX154,6991
#define ELFOSABI_SOLARIS ELFOSABI_SOLARIS155,7045
#define ELFOSABI_AIX ELFOSABI_AIX156,7105
#define ELFOSABI_IRIX ELFOSABI_IRIX157,7161
#define ELFOSABI_FREEBSD ELFOSABI_FREEBSD158,7218
#define ELFOSABI_TRU64 ELFOSABI_TRU64159,7274
#define ELFOSABI_MODESTO ELFOSABI_MODESTO160,7340
#define ELFOSABI_OPENBSD ELFOSABI_OPENBSD161,7403
#define ELFOSABI_ARM ELFOSABI_ARM162,7459
#define ELFOSABI_STANDALONE ELFOSABI_STANDALONE163,7509
#define EI_ABIVERSION EI_ABIVERSION165,7590
#define EI_PAD EI_PAD167,7649
#define ET_NONE ET_NONE171,7776
#define ET_REL ET_REL172,7835
#define ET_EXEC ET_EXEC173,7898
#define ET_DYN ET_DYN174,7960
#define ET_CORE ET_CORE175,8025
#define ET_NUM ET_NUM176,8081
#define ET_LOOS ET_LOOS177,8151
#define ET_HIOS ET_HIOS178,8221
#define ET_LOPROC ET_LOPROC179,8289
#define ET_HIPROC ET_HIPROC180,8366
#define EM_NONE EM_NONE184,8493
#define EM_M32 EM_M32185,8550
#define EM_SPARC EM_SPARC186,8610
#define EM_386 EM_386187,8666
#define EM_68K EM_68K188,8724
#define EM_88K EM_88K189,8791
#define EM_860 EM_860190,8858
#define EM_MIPS EM_MIPS191,8916
#define EM_S370 EM_S370192,8984
#define EM_MIPS_RS3_LE EM_MIPS_RS3_LE193,9045
#define EM_PARISC EM_PARISC195,9117
#define EM_VPP500 EM_VPP500196,9168
#define EM_SPARC32PLUS EM_SPARC32PLUS197,9229
#define EM_960 EM_960198,9290
#define EM_PPC EM_PPC199,9348
#define EM_PPC64 EM_PPC64200,9402
#define EM_S390 EM_S390201,9463
#define EM_V800 EM_V800203,9519
#define EM_FR20 EM_FR20204,9581
#define EM_RH32 EM_RH32205,9640
#define EM_RCE EM_RCE206,9696
#define EM_ARM EM_ARM207,9755
#define EM_FAKE_ALPHA EM_FAKE_ALPHA208,9805
#define EM_SH EM_SH209,9865
#define EM_SPARCV9 EM_SPARCV9210,9922
#define EM_TRICORE EM_TRICORE211,9984
#define EM_ARC EM_ARC212,10046
#define EM_H8_300 EM_H8_300213,10111
#define EM_H8_300H EM_H8_300H214,10172
#define EM_H8S EM_H8S215,10234
#define EM_H8_500 EM_H8_500216,10292
#define EM_IA_64 EM_IA_64217,10353
#define EM_MIPS_X EM_MIPS_X218,10412
#define EM_COLDFIRE EM_COLDFIRE219,10474
#define EM_68HC12 EM_68HC12220,10538
#define EM_MMA EM_MMA221,10601
#define EM_PCP EM_PCP222,10681
#define EM_NCPU EM_NCPU223,10739
#define EM_NDR1 EM_NDR1224,10809
#define EM_STARCORE EM_STARCORE225,10881
#define EM_ME16 EM_ME16226,10957
#define EM_ST100 EM_ST100227,11025
#define EM_TINYJ EM_TINYJ228,11105
#define EM_X86_64 EM_X86_64229,11185
#define EM_PDSP EM_PDSP230,11255
#define EM_FX66 EM_FX66232,11321
#define EM_ST9PLUS EM_ST9PLUS233,11396
#define EM_ST7 EM_ST7234,11474
#define EM_68HC16 EM_68HC16235,11552
#define EM_68HC11 EM_68HC11236,11632
#define EM_68HC08 EM_68HC08237,11712
#define EM_68HC05 EM_68HC05238,11792
#define EM_SVX EM_SVX239,11872
#define EM_ST19 EM_ST19240,11939
#define EM_VAX EM_VAX241,12018
#define EM_CRIS EM_CRIS242,12076
#define EM_JAVELIN EM_JAVELIN243,12168
#define EM_FIREPATH EM_FIREPATH244,12262
#define EM_ZSP EM_ZSP245,12340
#define EM_MMIX EM_MMIX246,12417
#define EM_HUANY EM_HUANY247,12507
#define EM_PRISM EM_PRISM248,12605
#define EM_AVR EM_AVR249,12664
#define EM_FR30 EM_FR30250,12742
#define EM_D10V EM_D10V251,12801
#define EM_D30V EM_D30V252,12863
#define EM_V850 EM_V850253,12925
#define EM_M32R EM_M32R254,12980
#define EM_MN10300 EM_MN10300255,13042
#define EM_MN10200 EM_MN10200256,13107
#define EM_PJ EM_PJ257,13172
#define EM_OPENRISC EM_OPENRISC258,13227
#define EM_ARC_A5 EM_ARC_A5259,13308
#define EM_XTENSA EM_XTENSA260,13375
#define EM_NUM EM_NUM261,13451
#define EM_ALPHA EM_ALPHA267,13687
#define EV_NONE EV_NONE271,13765
#define EV_CURRENT EV_CURRENT272,13831
#define EV_NUM EV_NUM273,13893
        Elf32_Word    sh_name;                /* Section name (string tbl index) */sh_name278,13961
        Elf32_Word    sh_type;                /* Section type */sh_type279,14045
        Elf32_Word    sh_flags;               /* Section flags */sh_flags280,14110
        Elf32_Addr    sh_addr;                /* Section virtual addr at execution */sh_addr281,14176
        Elf32_Off     sh_offset;              /* Section file offset */sh_offset282,14262
        Elf32_Word    sh_size;                /* Section size in bytes */sh_size283,14334
        Elf32_Word    sh_link;                /* Link to another section */sh_link284,14408
        Elf32_Word    sh_info;                /* Additional section information */sh_info285,14484
        Elf32_Word    sh_addralign;           /* Section alignment */sh_addralign286,14567
        Elf32_Word    sh_entsize;             /* Entry size if section holds table */sh_entsize287,14637
} Elf32_Shdr;Elf32_Shdr288,14723
        Elf64_Word    sh_name;                /* Section name (string tbl index) */sh_name291,14755
        Elf64_Word    sh_type;                /* Section type */sh_type292,14839
        Elf64_Xword   sh_flags;               /* Section flags */sh_flags293,14904
        Elf64_Addr    sh_addr;                /* Section virtual addr at execution */sh_addr294,14970
        Elf64_Off     sh_offset;              /* Section file offset */sh_offset295,15056
        Elf64_Xword   sh_size;                /* Section size in bytes */sh_size296,15128
        Elf64_Word    sh_link;                /* Link to another section */sh_link297,15202
        Elf64_Word    sh_info;                /* Additional section information */sh_info298,15278
        Elf64_Xword   sh_addralign;           /* Section alignment */sh_addralign299,15361
        Elf64_Xword   sh_entsize;             /* Entry size if section holds table */sh_entsize300,15431
} Elf64_Shdr;Elf64_Shdr301,15517
#define SHN_UNDEF SHN_UNDEF305,15565
#define SHN_LORESERVE SHN_LORESERVE306,15629
#define SHN_LOPROC SHN_LOPROC307,15701
#define SHN_BEFORE SHN_BEFORE308,15775
#define SHN_AFTER SHN_AFTER310,15865
#define SHN_HIPROC SHN_HIPROC312,15954
#define SHN_LOOS SHN_LOOS313,16026
#define SHN_HIOS SHN_HIOS314,16093
#define SHN_ABS SHN_ABS315,16158
#define SHN_COMMON SHN_COMMON316,16234
#define SHN_XINDEX SHN_XINDEX317,16308
#define SHN_HIRESERVE SHN_HIRESERVE318,16380
#define SHT_NULL SHT_NULL322,16500
#define SHT_PROGBITS SHT_PROGBITS323,16580
#define SHT_SYMTAB SHT_SYMTAB324,16639
#define SHT_STRTAB SHT_STRTAB325,16698
#define SHT_RELA SHT_RELA326,16757
#define SHT_HASH SHT_HASH327,16835
#define SHT_DYNAMIC SHT_DYNAMIC328,16899
#define SHT_NOTE SHT_NOTE329,16973
#define SHT_NOBITS SHT_NOBITS330,17025
#define SHT_REL SHT_REL331,17104
#define SHT_SHLIB SHT_SHLIB332,17181
#define SHT_DYNSYM SHT_DYNSYM333,17236
#define SHT_INIT_ARRAY SHT_INIT_ARRAY334,17310
#define SHT_FINI_ARRAY SHT_FINI_ARRAY335,17378
#define SHT_PREINIT_ARRAY SHT_PREINIT_ARRAY336,17445
#define SHT_GROUP SHT_GROUP337,17517
#define SHT_SYMTAB_SHNDX SHT_SYMTAB_SHNDX338,17577
#define SHT_NUM SHT_NUM339,17648
#define SHT_LOOS SHT_LOOS340,17720
#define SHT_GNU_LIBLIST SHT_GNU_LIBLIST341,17784
#define SHT_CHECKSUM SHT_CHECKSUM342,17851
#define SHT_LOSUNW SHT_LOSUNW343,17924
#define SHT_SUNW_move SHT_SUNW_move344,17995
#define SHT_SUNW_COMDAT SHT_SUNW_COMDAT345,18032
#define SHT_SUNW_syminfo SHT_SUNW_syminfo346,18069
#define SHT_GNU_verdef SHT_GNU_verdef347,18106
#define SHT_GNU_verneed SHT_GNU_verneed348,18181
#define SHT_GNU_versym SHT_GNU_versym349,18251
#define SHT_HISUNW SHT_HISUNW350,18320
#define SHT_HIOS SHT_HIOS351,18392
#define SHT_LOPROC SHT_LOPROC352,18459
#define SHT_HIPROC SHT_HIPROC353,18533
#define SHT_LOUSER SHT_LOUSER354,18605
#define SHT_HIUSER SHT_HIUSER355,18681
#define SHF_WRITE SHF_WRITE359,18807
#define SHF_ALLOC SHF_ALLOC360,18862
#define SHF_EXECINSTR SHF_EXECINSTR361,18941
#define SHF_MERGE SHF_MERGE362,18998
#define SHF_STRINGS SHF_STRINGS363,19060
#define SHF_INFO_LINK SHF_INFO_LINK364,19138
#define SHF_LINK_ORDER SHF_LINK_ORDER365,19213
#define SHF_OS_NONCONFORMING SHF_OS_NONCONFORMING366,19290
#define SHF_GROUP SHF_GROUP368,19379
#define SHF_TLS SHF_TLS369,19456
#define SHF_MASKOS SHF_MASKOS370,19535
#define SHF_MASKPROC SHF_MASKPROC371,19595
#define SHF_ORDERED SHF_ORDERED372,19660
#define SHF_EXCLUDE SHF_EXCLUDE374,19747
#define GRP_COMDAT GRP_COMDAT378,19886
        Elf32_Word    st_name;                /* Symbol name (string tbl index) */st_name383,20001
        Elf32_Addr    st_value;               /* Symbol value */st_value384,20084
        Elf32_Word    st_size;                /* Symbol size */st_size385,20149
        unsigned char st_info;                /* Symbol type and binding */st_info386,20213
        unsigned char st_other;               /* Symbol visibility */st_other387,20289
        Elf32_Section st_shndx;               /* Section index */st_shndx388,20359
} Elf32_Sym;Elf32_Sym389,20425
        Elf64_Word    st_name;                /* Symbol name (string tbl index) */st_name392,20456
        unsigned char st_info;                /* Symbol type and binding */st_info393,20539
        unsigned char st_other;               /* Symbol visibility */st_other394,20615
        Elf64_Section st_shndx;               /* Section index */st_shndx395,20685
        Elf64_Addr    st_value;               /* Symbol value */st_value396,20751
        Elf64_Xword   st_size;                /* Symbol size */st_size397,20816
} Elf64_Sym;Elf64_Sym398,20880
        Elf32_Half si_boundto;                /* Direct bindings, symbol bound to */si_boundto404,21015
        Elf32_Half si_flags;                  /* Per symbol flags */si_flags405,21100
} Elf32_Syminfo;Elf32_Syminfo406,21169
        Elf64_Half si_boundto;                /* Direct bindings, symbol bound to */si_boundto409,21204
        Elf64_Half si_flags;                  /* Per symbol flags */si_flags410,21289
} Elf64_Syminfo;Elf64_Syminfo411,21358
#define SYMINFO_BT_SELF SYMINFO_BT_SELF414,21415
#define SYMINFO_BT_PARENT SYMINFO_BT_PARENT415,21482
#define SYMINFO_BT_LOWRESERVE SYMINFO_BT_LOWRESERVE416,21551
#define SYMINFO_FLG_DIRECT SYMINFO_FLG_DIRECT419,21667
#define SYMINFO_FLG_PASSTHRU SYMINFO_FLG_PASSTHRU420,21733
#define SYMINFO_FLG_COPY SYMINFO_FLG_COPY421,21811
#define SYMINFO_FLG_LAZYLOAD SYMINFO_FLG_LAZYLOAD422,21880
#define SYMINFO_NONE SYMINFO_NONE424,21998
#define SYMINFO_CURRENT SYMINFO_CURRENT425,22032
#define SYMINFO_NUM SYMINFO_NUM426,22066
#define ELF32_ST_BIND(ELF32_ST_BIND431,22175
#define ELF32_ST_TYPE(ELF32_ST_TYPE432,22246
#define ELF32_ST_INFO(ELF32_ST_INFO433,22300
#define ELF64_ST_BIND(ELF64_ST_BIND436,22447
#define ELF64_ST_TYPE(ELF64_ST_TYPE437,22507
#define ELF64_ST_INFO(ELF64_ST_INFO438,22567
#define STB_LOCAL STB_LOCAL442,22710
#define STB_GLOBAL STB_GLOBAL443,22769
#define STB_WEAK STB_WEAK444,22829
#define STB_NUM STB_NUM445,22887
#define STB_LOOS STB_LOOS446,22959
#define STB_HIOS STB_HIOS447,23026
#define STB_LOPROC STB_LOPROC448,23091
#define STB_HIPROC STB_HIPROC449,23165
#define STT_NOTYPE STT_NOTYPE453,23306
#define STT_OBJECT STT_OBJECT454,23379
#define STT_FUNC STT_FUNC455,23449
#define STT_SECTION STT_SECTION456,23519
#define STT_FILE STT_FILE457,23598
#define STT_COMMON STT_COMMON458,23671
#define STT_TLS STT_TLS459,23748
#define STT_NUM STT_NUM460,23828
#define STT_LOOS STT_LOOS461,23900
#define STT_HIOS STT_HIOS462,23967
#define STT_LOPROC STT_LOPROC463,24032
#define STT_HIPROC STT_HIPROC464,24106
#define STN_UNDEF STN_UNDEF471,24402
#define ELF32_ST_VISIBILITY(ELF32_ST_VISIBILITY476,24541
#define ELF64_ST_VISIBILITY(ELF64_ST_VISIBILITY479,24634
#define STV_DEFAULT STV_DEFAULT482,24761
#define STV_INTERNAL STV_INTERNAL483,24839
#define STV_HIDDEN STV_HIDDEN484,24917
#define STV_PROTECTED STV_PROTECTED485,24996
        Elf32_Addr    r_offset;               /* Address */r_offset491,25167
        Elf32_Word    r_info;                 /* Relocation type and symbol index */r_info492,25227
} Elf32_Rel;Elf32_Rel493,25312
        Elf64_Addr    r_offset;               /* Address */r_offset501,25584
        Elf64_Xword   r_info;                 /* Relocation type and symbol index */r_info502,25644
} Elf64_Rel;Elf64_Rel503,25729
        Elf32_Addr    r_offset;               /* Address */r_offset508,25834
        Elf32_Word    r_info;                 /* Relocation type and symbol index */r_info509,25894
        Elf32_Sword   r_addend;               /* Addend */r_addend510,25979
} Elf32_Rela;Elf32_Rela511,26038
        Elf64_Addr    r_offset;               /* Address */r_offset514,26070
        Elf64_Xword   r_info;                 /* Relocation type and symbol index */r_info515,26130
        Elf64_Sxword  r_addend;               /* Addend */r_addend516,26215
} Elf64_Rela;Elf64_Rela517,26274
#define ELF32_R_SYM(ELF32_R_SYM521,26361
#define ELF32_R_TYPE(ELF32_R_TYPE522,26414
#define ELF32_R_INFO(ELF32_R_INFO523,26469
#define ELF64_R_SYM(ELF64_R_SYM525,26543
#define ELF64_R_TYPE(ELF64_R_TYPE526,26595
#define ELF64_R_INFO(ELF64_R_INFO527,26654
        Elf32_Word    p_type;                 /* Segment type */p_type532,26785
        Elf32_Off     p_offset;               /* Segment file offset */p_offset533,26850
        Elf32_Addr    p_vaddr;                /* Segment virtual address */p_vaddr534,26922
        Elf32_Addr    p_paddr;                /* Segment physical address */p_paddr535,26998
        Elf32_Word    p_filesz;               /* Segment size in file */p_filesz536,27075
        Elf32_Word    p_memsz;                /* Segment size in memory */p_memsz537,27148
        Elf32_Word    p_flags;                /* Segment flags */p_flags538,27223
        Elf32_Word    p_align;                /* Segment alignment */p_align539,27289
} Elf32_Phdr;Elf32_Phdr540,27359
        Elf64_Word    p_type;                 /* Segment type */p_type543,27391
        Elf64_Word    p_flags;                /* Segment flags */p_flags544,27456
        Elf64_Off     p_offset;               /* Segment file offset */p_offset545,27522
        Elf64_Addr    p_vaddr;                /* Segment virtual address */p_vaddr546,27594
        Elf64_Addr    p_paddr;                /* Segment physical address */p_paddr547,27670
        Elf64_Xword   p_filesz;               /* Segment size in file */p_filesz548,27747
        Elf64_Xword   p_memsz;                /* Segment size in memory */p_memsz549,27820
        Elf64_Xword   p_align;                /* Segment alignment */p_align550,27895
} Elf64_Phdr;Elf64_Phdr551,27965
#define PT_NULL PT_NULL555,28028
#define PT_LOAD PT_LOAD556,28108
#define PT_DYNAMIC PT_DYNAMIC557,28179
#define PT_INTERP PT_INTERP558,28253
#define PT_NOTE PT_NOTE559,28319
#define PT_SHLIB PT_SHLIB560,28387
#define PT_PHDR PT_PHDR561,28442
#define PT_TLS PT_TLS562,28518
#define PT_NUM PT_NUM563,28593
#define PT_LOOS PT_LOOS564,28663
#define PT_GNU_EH_FRAME PT_GNU_EH_FRAME565,28730
#define PT_GNU_STACK PT_GNU_STACK566,28802
#define PT_GNU_RELRO PT_GNU_RELRO567,28878
#define PT_LOSUNW PT_LOSUNW568,28951
#define PT_SUNWBSS PT_SUNWBSS569,28986
#define PT_SUNWSTACK PT_SUNWSTACK570,29053
#define PT_HISUNW PT_HISUNW571,29113
#define PT_HIOS PT_HIOS572,29148
#define PT_LOPROC PT_LOPROC573,29213
#define PT_HIPROC PT_HIPROC574,29287
#define PF_X PF_X578,29410
#define PF_W PF_W579,29478
#define PF_R PF_R580,29544
#define PF_MASKOS PF_MASKOS581,29610
#define PF_MASKPROC PF_MASKPROC582,29668
#define NT_PRSTATUS NT_PRSTATUS586,29804
#define NT_FPREGSET NT_FPREGSET587,29883
#define NT_PRPSINFO NT_PRPSINFO588,29962
#define NT_PRXREG NT_PRXREG589,30041
#define NT_TASKSTRUCT NT_TASKSTRUCT590,30121
#define NT_PLATFORM NT_PLATFORM591,30199
#define NT_AUXV NT_AUXV592,30278
#define NT_GWINDOWS NT_GWINDOWS593,30352
#define NT_ASRS NT_ASRS594,30431
#define NT_PSTATUS NT_PSTATUS595,30508
#define NT_PSINFO NT_PSINFO596,30586
#define NT_PRCRED NT_PRCRED597,30663
#define NT_UTSNAME NT_UTSNAME598,30740
#define NT_LWPSTATUS NT_LWPSTATUS599,30818
#define NT_LWPSINFO NT_LWPSINFO600,30898
#define NT_PRFPXREG NT_PRFPXREG601,30976
#define NT_VERSION NT_VERSION605,31134
        Elf32_Sword   d_tag;                  /* Dynamic entry type */d_tag611,31258
                Elf32_Word d_val;                 /* Integer value */d_val613,31345
                Elf32_Addr d_ptr;                 /* Address value */d_ptr614,31415
        } d_un;d_un615,31485
} Elf32_Dyn;Elf32_Dyn616,31501
        Elf64_Sxword  d_tag;                  /* Dynamic entry type */d_tag619,31532
                Elf64_Xword d_val;                /* Integer value */d_val621,31619
                Elf64_Addr d_ptr;                 /* Address value */d_ptr622,31689
        } d_un;d_un623,31759
} Elf64_Dyn;Elf64_Dyn624,31775
#define DT_NULL DT_NULL628,31842
#define DT_NEEDED DT_NEEDED629,31917
#define DT_PLTRELSZ DT_PLTRELSZ630,31986
#define DT_PLTGOT DT_PLTGOT631,32060
#define DT_HASH DT_HASH632,32130
#define DT_STRTAB DT_STRTAB633,32205
#define DT_SYMTAB DT_SYMTAB634,32275
#define DT_RELA DT_RELA635,32345
#define DT_RELASZ DT_RELASZ636,32414
#define DT_RELAENT DT_RELAENT637,32486
#define DT_STRSZ DT_STRSZ638,32555
#define DT_SYMENT DT_SYMENT639,32622
#define DT_INIT DT_INIT640,32699
#define DT_FINI DT_FINI641,32770
#define DT_SONAME DT_SONAME642,32848
#define DT_RPATH DT_RPATH643,32916
#define DT_SYMBOLIC DT_SYMBOLIC644,32995
#define DT_REL DT_REL645,33066
#define DT_RELSZ DT_RELSZ646,33134
#define DT_RELENT DT_RELENT647,33205
#define DT_PLTREL DT_PLTREL648,33273
#define DT_DEBUG DT_DEBUG649,33340
#define DT_TEXTREL DT_TEXTREL650,33413
#define DT_JMPREL DT_JMPREL651,33484
#define DT_BIND_NOW DT_BIND_NOW652,33552
#define DT_INIT_ARRAY DT_INIT_ARRAY653,33628
#define DT_FINI_ARRAY DT_FINI_ARRAY654,33707
#define DT_INIT_ARRAYSZ DT_INIT_ARRAYSZ655,33786
#define DT_FINI_ARRAYSZ DT_FINI_ARRAYSZ656,33863
#define DT_RUNPATH DT_RUNPATH657,33940
#define DT_FLAGS DT_FLAGS658,34006
#define DT_ENCODING DT_ENCODING659,34086
#define DT_PREINIT_ARRAY DT_PREINIT_ARRAY660,34155
#define DT_PREINIT_ARRAYSZ DT_PREINIT_ARRAYSZ661,34236
#define DT_NUM DT_NUM662,34316
#define DT_LOOS DT_LOOS663,34374
#define DT_HIOS DT_HIOS664,34441
#define DT_LOPROC DT_LOPROC665,34506
#define DT_HIPROC DT_HIPROC666,34580
#define DT_PROCNUM DT_PROCNUM667,34652
#define DT_VALRNGLO DT_VALRNGLO672,34883
#define DT_GNU_PRELINKED DT_GNU_PRELINKED673,34918
#define DT_GNU_CONFLICTSZ DT_GNU_CONFLICTSZ674,34985
#define DT_GNU_LIBLISTSZ DT_GNU_LIBLISTSZ675,35056
#define DT_CHECKSUM DT_CHECKSUM676,35123
#define DT_PLTPADSZ DT_PLTPADSZ677,35158
#define DT_MOVEENT DT_MOVEENT678,35193
#define DT_MOVESZ DT_MOVESZ679,35228
#define DT_FEATURE_1 DT_FEATURE_1680,35263
#define DT_POSFLAG_1 DT_POSFLAG_1681,35337
#define DT_SYMINSZ DT_SYMINSZ683,35444
#define DT_SYMINENT DT_SYMINENT684,35523
#define DT_VALRNGHI DT_VALRNGHI685,35591
#define DT_VALTAGIDX(DT_VALTAGIDX686,35626
#define DT_VALNUM DT_VALNUM687,35703
#define DT_ADDRRNGLO DT_ADDRRNGLO694,35966
#define DT_GNU_CONFLICT DT_GNU_CONFLICT695,36001
#define DT_GNU_LIBLIST DT_GNU_LIBLIST696,36073
#define DT_CONFIG DT_CONFIG697,36132
#define DT_DEPAUDIT DT_DEPAUDIT698,36206
#define DT_AUDIT DT_AUDIT699,36274
#define DT_PLTPAD DT_PLTPAD700,36338
#define DT_MOVETAB DT_MOVETAB701,36398
#define DT_SYMINFO DT_SYMINFO702,36457
#define DT_ADDRRNGHI DT_ADDRRNGHI703,36519
#define DT_ADDRTAGIDX(DT_ADDRTAGIDX704,36554
#define DT_ADDRNUM DT_ADDRNUM705,36631
#define DT_VERSYM DT_VERSYM709,36744
#define DT_RELACOUNT DT_RELACOUNT711,36780
#define DT_RELCOUNT DT_RELCOUNT712,36815
#define DT_FLAGS_1 DT_FLAGS_1715,36884
#define DT_VERDEF DT_VERDEF716,36962
#define DT_VERDEFNUM DT_VERDEFNUM718,37044
#define DT_VERNEED DT_VERNEED719,37120
#define DT_VERNEEDNUM DT_VERNEEDNUM721,37204
#define DT_VERSIONTAGIDX(DT_VERSIONTAGIDX722,37276
#define DT_VERSIONTAGNUM DT_VERSIONTAGNUM723,37353
#define DT_AUXILIARY DT_AUXILIARY727,37490
#define DT_FILTER DT_FILTER728,37570
#define DT_EXTRATAGIDX(DT_EXTRATAGIDX729,37649
#define DT_EXTRANUM DT_EXTRANUM730,37727
#define DF_ORIGIN DF_ORIGIN733,37807
#define DF_SYMBOLIC DF_SYMBOLIC734,37878
#define DF_TEXTREL DF_TEXTREL735,37955
#define DF_BIND_NOW DF_BIND_NOW736,38034
#define DF_STATIC_TLS DF_STATIC_TLS737,38112
#define DF_1_NOW DF_1_NOW741,38301
#define DF_1_GLOBAL DF_1_GLOBAL742,38378
#define DF_1_GROUP DF_1_GROUP743,38458
#define DF_1_NODELETE DF_1_NODELETE744,38537
#define DF_1_LOADFLTR DF_1_LOADFLTR745,38617
#define DF_1_INITFIRST DF_1_INITFIRST746,38697
#define DF_1_NOOPEN DF_1_NOOPEN747,38777
#define DF_1_ORIGIN DF_1_ORIGIN748,38857
#define DF_1_DIRECT DF_1_DIRECT749,38929
#define DF_1_TRANS DF_1_TRANS750,39000
#define DF_1_INTERPOSE DF_1_INTERPOSE751,39035
#define DF_1_NODEFLIB DF_1_NODEFLIB752,39111
#define DF_1_NODUMP DF_1_NODUMP753,39190
#define DF_1_CONFALT DF_1_CONFALT754,39264
#define DF_1_ENDFILTEE DF_1_ENDFILTEE755,39344
#define DF_1_DISPRELDNE DF_1_DISPRELDNE756,39424
#define DF_1_DISPRELPND DF_1_DISPRELPND757,39504
#define DTF_1_PARINIT DTF_1_PARINIT760,39640
#define DTF_1_CONFEXP DTF_1_CONFEXP761,39675
#define DF_P1_LAZYLOAD DF_P1_LAZYLOAD764,39786
#define DF_P1_GROUPPERM DF_P1_GROUPPERM765,39860
        Elf32_Half    vd_version;             /* Version revision */vd_version771,40016
        Elf32_Half    vd_flags;               /* Version information */vd_flags772,40085
        Elf32_Half    vd_ndx;                 /* Version Index */vd_ndx773,40157
        Elf32_Half    vd_cnt;                 /* Number of associated aux entries */vd_cnt774,40223
        Elf32_Word    vd_hash;                /* Version name hash value */vd_hash775,40308
        Elf32_Word    vd_aux;                 /* Offset in bytes to verdaux array */vd_aux776,40384
        Elf32_Word    vd_next;                /* Offset in bytes to next verdefvd_next777,40469
} Elf32_Verdef;Elf32_Verdef779,40601
        Elf64_Half    vd_version;             /* Version revision */vd_version782,40635
        Elf64_Half    vd_flags;               /* Version information */vd_flags783,40704
        Elf64_Half    vd_ndx;                 /* Version Index */vd_ndx784,40776
        Elf64_Half    vd_cnt;                 /* Number of associated aux entries */vd_cnt785,40842
        Elf64_Word    vd_hash;                /* Version name hash value */vd_hash786,40927
        Elf64_Word    vd_aux;                 /* Offset in bytes to verdaux array */vd_aux787,41003
        Elf64_Word    vd_next;                /* Offset in bytes to next verdefvd_next788,41088
} Elf64_Verdef;Elf64_Verdef790,41220
#define VER_DEF_NONE VER_DEF_NONE794,41293
#define VER_DEF_CURRENT VER_DEF_CURRENT795,41350
#define VER_DEF_NUM VER_DEF_NUM796,41412
#define VER_FLG_BASE VER_FLG_BASE799,41542
#define VER_FLG_WEAK VER_FLG_WEAK800,41622
#define VER_NDX_LOCAL VER_NDX_LOCAL803,41728
#define VER_NDX_GLOBAL VER_NDX_GLOBAL804,41792
#define VER_NDX_LORESERVE VER_NDX_LORESERVE805,41857
#define VER_NDX_ELIMINATE VER_NDX_ELIMINATE806,41935
        Elf32_Word    vda_name;               /* Version or dependency names */vda_name811,42068
        Elf32_Word    vda_next;               /* Offset in bytes to next verdauxvda_next812,42148
} Elf32_Verdaux;Elf32_Verdaux814,42281
        Elf64_Word    vda_name;               /* Version or dependency names */vda_name817,42316
        Elf64_Word    vda_next;               /* Offset in bytes to next verdauxvda_next818,42396
} Elf64_Verdaux;Elf64_Verdaux820,42529
        Elf32_Half    vn_version;             /* Version of structure */vn_version826,42601
        Elf32_Half    vn_cnt;                 /* Number of associated aux entries */vn_cnt827,42674
        Elf32_Word    vn_file;                /* Offset of filename for thisvn_file828,42759
        Elf32_Word    vn_aux;                 /* Offset in bytes to vernaux array */vn_aux830,42893
        Elf32_Word    vn_next;                /* Offset in bytes to next verneedvn_next831,42978
} Elf32_Verneed;Elf32_Verneed833,43111
        Elf64_Half    vn_version;             /* Version of structure */vn_version836,43146
        Elf64_Half    vn_cnt;                 /* Number of associated aux entries */vn_cnt837,43219
        Elf64_Word    vn_file;                /* Offset of filename for thisvn_file838,43304
        Elf64_Word    vn_aux;                 /* Offset in bytes to vernaux array */vn_aux840,43438
        Elf64_Word    vn_next;                /* Offset in bytes to next verneedvn_next841,43523
} Elf64_Verneed;Elf64_Verneed843,43656
#define VER_NEED_NONE VER_NEED_NONE847,43730
#define VER_NEED_CURRENT VER_NEED_CURRENT848,43787
#define VER_NEED_NUM VER_NEED_NUM849,43849
        Elf32_Word    vna_hash;               /* Hash value of dependency name */vna_hash854,43980
        Elf32_Half    vna_flags;              /* Dependency specific information */vna_flags855,44062
        Elf32_Half    vna_other;              /* Unused */vna_other856,44146
        Elf32_Word    vna_name;               /* Dependency name string offset */vna_name857,44205
        Elf32_Word    vna_next;               /* Offset in bytes to next vernauxvna_next858,44287
} Elf32_Vernaux;Elf32_Vernaux860,44420
        Elf64_Word    vna_hash;               /* Hash value of dependency name */vna_hash863,44455
        Elf64_Half    vna_flags;              /* Dependency specific information */vna_flags864,44537
        Elf64_Half    vna_other;              /* Unused */vna_other865,44621
        Elf64_Word    vna_name;               /* Dependency name string offset */vna_name866,44680
        Elf64_Word    vna_next;               /* Offset in bytes to next vernauxvna_next867,44762
} Elf64_Vernaux;Elf64_Vernaux869,44895
#define VER_FLG_WEAK VER_FLG_WEAK873,44949
        int a_type;                   /* Entry type */a_type886,45465
                long int a_val;           /* Integer value */a_val888,45536
                void *a_ptr;              /* Pointer value */a_ptr889,45598
                void (*a_fcn)(void);      /* Function pointer value */a_fcn890,45660
        } a_un;a_un891,45731
} Elf32_auxv_t;Elf32_auxv_t892,45747
        long int a_type;              /* Entry type */a_type895,45781
                long int a_val;           /* Integer value */a_val897,45852
                void *a_ptr;              /* Pointer value */a_ptr898,45914
                void (*a_fcn)(void);      /* Function pointer value */a_fcn899,45976
        } a_un;a_un900,46047
} Elf64_auxv_t;Elf64_auxv_t901,46063
#define AT_NULL AT_NULL905,46126
#define AT_IGNORE AT_IGNORE906,46186
#define AT_EXECFD AT_EXECFD907,46256
#define AT_PHDR AT_PHDR908,46329
#define AT_PHENT AT_PHENT909,46403
#define AT_PHNUM AT_PHNUM910,46478
#define AT_PAGESZ AT_PAGESZ911,46550
#define AT_BASE AT_BASE912,46613
#define AT_FLAGS AT_FLAGS913,46687
#define AT_ENTRY AT_ENTRY914,46739
#define AT_NOTELF AT_NOTELF915,46808
#define AT_UID AT_UID916,46873
#define AT_EUID AT_EUID917,46928
#define AT_GID AT_GID918,46988
#define AT_EGID AT_EGID919,47043
#define AT_CLKTCK AT_CLKTCK920,47103
#define AT_PLATFORM AT_PLATFORM923,47235
#define AT_HWCAP AT_HWCAP924,47311
#define AT_FPUCW AT_FPUCW929,47511
#define AT_DCACHEBSIZE AT_DCACHEBSIZE932,47608
#define AT_ICACHEBSIZE AT_ICACHEBSIZE933,47678
#define AT_UCACHEBSIZE AT_UCACHEBSIZE934,47755
#define AT_IGNOREPPC AT_IGNOREPPC938,47948
#define AT_SECURE AT_SECURE940,48021
#define AT_SYSINFO AT_SYSINFO944,48189
#define AT_SYSINFO_EHDR AT_SYSINFO_EHDR945,48216
#define AT_L1I_CACHESHAPE AT_L1I_CACHESHAPE949,48377
#define AT_L1D_CACHESHAPE AT_L1D_CACHESHAPE950,48412
#define AT_L2_CACHESHAPE AT_L2_CACHESHAPE951,48447
#define AT_L3_CACHESHAPE AT_L3_CACHESHAPE952,48482
        Elf32_Word n_namesz;                  /* Length of the note's name.  */n_namesz958,48639
        Elf32_Word n_descsz;                  /* Length of the note's descriptor.  */n_descsz959,48719
        Elf32_Word n_type;                    /* Type of the note.  */n_type960,48805
} Elf32_Nhdr;Elf32_Nhdr961,48876
        Elf64_Word n_namesz;                  /* Length of the note's name.  */n_namesz964,48908
        Elf64_Word n_descsz;                  /* Length of the note's descriptor.  */n_descsz965,48988
        Elf64_Word n_type;                    /* Type of the note.  */n_type966,49074
} Elf64_Nhdr;Elf64_Nhdr967,49145
#define ELF_NOTE_SOLARIS ELF_NOTE_SOLARIS972,49249
#define ELF_NOTE_GNU ELF_NOTE_GNU975,49349
#define ELF_NOTE_PAGESIZE_HINT ELF_NOTE_PAGESIZE_HINT981,49507
#define ELF_NOTE_ABI ELF_NOTE_ABI992,49781
#define ELF_NOTE_OS_LINUX ELF_NOTE_OS_LINUX996,49911
#define ELF_NOTE_OS_GNU ELF_NOTE_OS_GNU997,49945
#define ELF_NOTE_OS_SOLARIS2 ELF_NOTE_OS_SOLARIS2998,49979
#define ELF_NOTE_OS_FREEBSD ELF_NOTE_OS_FREEBSD999,50013
        Elf32_Xword m_value;          /* Symbol value.  */m_value1004,50087
        Elf32_Word m_info;            /* Size and index.  */m_info1005,50146
        Elf32_Word m_poffset;         /* Symbol offset.  */m_poffset1006,50207
        Elf32_Half m_repeat;          /* Repeat count.  */m_repeat1007,50267
        Elf32_Half m_stride;          /* Stride info.  */m_stride1008,50326
} Elf32_Move;Elf32_Move1009,50384
        Elf64_Xword m_value;          /* Symbol value.  */m_value1012,50416
        Elf64_Xword m_info;           /* Size and index.  */m_info1013,50475
        Elf64_Xword m_poffset;        /* Symbol offset.  */m_poffset1014,50536
        Elf64_Half m_repeat;          /* Repeat count.  */m_repeat1015,50596
        Elf64_Half m_stride;          /* Stride info.  */m_stride1016,50655
} Elf64_Move;Elf64_Move1017,50713
#define ELF32_M_SYM(ELF32_M_SYM1020,50768
#define ELF32_M_SIZE(ELF32_M_SIZE1021,50814
#define ELF32_M_INFO(ELF32_M_INFO1022,50871
#define ELF64_M_SYM(ELF64_M_SYM1024,50944
#define ELF64_M_SIZE(ELF64_M_SIZE1025,50995
#define ELF64_M_INFO(ELF64_M_INFO1026,51047
#define EF_CPU32 EF_CPU321032,51187
#define R_68K_NONE R_68K_NONE1036,51244
#define R_68K_32 R_68K_321037,51299
#define R_68K_16 R_68K_161038,51360
#define R_68K_8 R_68K_81039,51421
#define R_68K_PC32 R_68K_PC321040,51481
#define R_68K_PC16 R_68K_PC161041,51546
#define R_68K_PC8 R_68K_PC81042,51611
#define R_68K_GOT32 R_68K_GOT321043,51675
#define R_68K_GOT16 R_68K_GOT161044,51750
#define R_68K_GOT8 R_68K_GOT81045,51825
#define R_68K_GOT32O R_68K_GOT32O1046,51899
#define R_68K_GOT16O R_68K_GOT16O1047,51963
#define R_68K_GOT8O R_68K_GOT8O1048,52027
#define R_68K_PLT32 R_68K_PLT321049,52090
#define R_68K_PLT16 R_68K_PLT161050,52167
#define R_68K_PLT8 R_68K_PLT81051,52244
#define R_68K_PLT32O R_68K_PLT32O1052,52320
#define R_68K_PLT16O R_68K_PLT16O1053,52384
#define R_68K_PLT8O R_68K_PLT8O1054,52448
#define R_68K_COPY R_68K_COPY1055,52511
#define R_68K_GLOB_DAT R_68K_GLOB_DAT1056,52580
#define R_68K_JMP_SLOT R_68K_JMP_SLOT1057,52643
#define R_68K_RELATIVE R_68K_RELATIVE1058,52706
#define R_68K_NUM R_68K_NUM1060,52808
#define R_386_NONE R_386_NONE1066,52899
#define R_386_32 R_386_321067,52954
#define R_386_PC32 R_386_PC321068,53015
#define R_386_GOT32 R_386_GOT321069,53080
#define R_386_PLT32 R_386_PLT321070,53143
#define R_386_COPY R_386_COPY1071,53208
#define R_386_GLOB_DAT R_386_GLOB_DAT1072,53277
#define R_386_JMP_SLOT R_386_JMP_SLOT1073,53340
#define R_386_RELATIVE R_386_RELATIVE1074,53403
#define R_386_GOTOFF R_386_GOTOFF1075,53472
#define R_386_GOTPC R_386_GOTPC1076,53539
#define R_386_32PLT R_386_32PLT1077,53618
#define R_386_TLS_TPOFF R_386_TLS_TPOFF1078,53648
#define R_386_TLS_IE R_386_TLS_IE1079,53721
#define R_386_TLS_GOTIE R_386_TLS_GOTIE1081,53816
#define R_386_TLS_LE R_386_TLS_LE1083,53900
#define R_386_TLS_GD R_386_TLS_GD1085,53982
#define R_386_TLS_LDM R_386_TLS_LDM1087,54095
#define R_386_16 R_386_161090,54217
#define R_386_PC16 R_386_PC161091,54247
#define R_386_8 R_386_81092,54277
#define R_386_PC8 R_386_PC81093,54307
#define R_386_TLS_GD_32 R_386_TLS_GD_321094,54337
#define R_386_TLS_GD_PUSH R_386_TLS_GD_PUSH1096,54435
#define R_386_TLS_GD_CALL R_386_TLS_GD_CALL1097,54510
#define R_386_TLS_GD_POP R_386_TLS_GD_POP1099,54596
#define R_386_TLS_LDM_32 R_386_TLS_LDM_321100,54670
#define R_386_TLS_LDM_PUSH R_386_TLS_LDM_PUSH1102,54777
#define R_386_TLS_LDM_CALL R_386_TLS_LDM_CALL1103,54853
#define R_386_TLS_LDM_POP R_386_TLS_LDM_POP1105,54951
#define R_386_TLS_LDO_32 R_386_TLS_LDO_321106,55026
#define R_386_TLS_IE_32 R_386_TLS_IE_321107,55101
#define R_386_TLS_LE_32 R_386_TLS_LE_321109,55193
#define R_386_TLS_DTPMOD32 R_386_TLS_DTPMOD321111,55283
#define R_386_TLS_DTPOFF32 R_386_TLS_DTPOFF321112,55360
#define R_386_TLS_TPOFF32 R_386_TLS_TPOFF321113,55426
#define R_386_NUM R_386_NUM1115,55540
#define STT_SPARC_REGISTER STT_SPARC_REGISTER1121,55679
#define EF_SPARCV9_MM EF_SPARCV9_MM1125,55798
#define EF_SPARCV9_TSO EF_SPARCV9_TSO1126,55832
#define EF_SPARCV9_PSO EF_SPARCV9_PSO1127,55866
#define EF_SPARCV9_RMO EF_SPARCV9_RMO1128,55900
#define EF_SPARC_LEDATA EF_SPARC_LEDATA1129,55934
#define EF_SPARC_EXT_MASK EF_SPARC_EXT_MASK1130,56000
#define EF_SPARC_32PLUS EF_SPARC_32PLUS1131,56041
#define EF_SPARC_SUN_US1 EF_SPARC_SUN_US11132,56109
#define EF_SPARC_HAL_R1 EF_SPARC_HAL_R11133,56183
#define EF_SPARC_SUN_US3 EF_SPARC_SUN_US31134,56248
#define R_SPARC_NONE R_SPARC_NONE1138,56347
#define R_SPARC_8 R_SPARC_81139,56402
#define R_SPARC_16 R_SPARC_161140,56461
#define R_SPARC_32 R_SPARC_321141,56521
#define R_SPARC_DISP8 R_SPARC_DISP81142,56581
#define R_SPARC_DISP16 R_SPARC_DISP161143,56645
#define R_SPARC_DISP32 R_SPARC_DISP321144,56710
#define R_SPARC_WDISP30 R_SPARC_WDISP301145,56775
#define R_SPARC_WDISP22 R_SPARC_WDISP221146,56848
#define R_SPARC_HI22 R_SPARC_HI221147,56921
#define R_SPARC_22 R_SPARC_221148,56979
#define R_SPARC_13 R_SPARC_131149,57039
#define R_SPARC_LO10 R_SPARC_LO101150,57099
#define R_SPARC_GOT10 R_SPARC_GOT101151,57162
#define R_SPARC_GOT13 R_SPARC_GOT131152,57235
#define R_SPARC_GOT22 R_SPARC_GOT221153,57298
#define R_SPARC_PC10 R_SPARC_PC101154,57369
#define R_SPARC_PC22 R_SPARC_PC221155,57444
#define R_SPARC_WPLT30 R_SPARC_WPLT301156,57517
#define R_SPARC_COPY R_SPARC_COPY1157,57594
#define R_SPARC_GLOB_DAT R_SPARC_GLOB_DAT1158,57663
#define R_SPARC_JMP_SLOT R_SPARC_JMP_SLOT1159,57726
#define R_SPARC_RELATIVE R_SPARC_RELATIVE1160,57789
#define R_SPARC_UA32 R_SPARC_UA321161,57858
#define R_SPARC_PLT32 R_SPARC_PLT321165,57964
#define R_SPARC_HIPLT22 R_SPARC_HIPLT221166,58041
#define R_SPARC_LOPLT10 R_SPARC_LOPLT101167,58109
#define R_SPARC_PCPLT32 R_SPARC_PCPLT321168,58182
#define R_SPARC_PCPLT22 R_SPARC_PCPLT221169,58259
#define R_SPARC_PCPLT10 R_SPARC_PCPLT101170,58334
#define R_SPARC_10 R_SPARC_101171,58410
#define R_SPARC_11 R_SPARC_111172,58470
#define R_SPARC_64 R_SPARC_641173,58530
#define R_SPARC_OLO10 R_SPARC_OLO101174,58590
#define R_SPARC_HH22 R_SPARC_HH221175,58670
#define R_SPARC_HM10 R_SPARC_HM101176,58745
#define R_SPARC_LM22 R_SPARC_LM221177,58818
#define R_SPARC_PC_HH22 R_SPARC_PC_HH221178,58890
#define R_SPARC_PC_HM10 R_SPARC_PC_HM101179,58965
#define R_SPARC_PC_LM22 R_SPARC_PC_LM221180,59037
#define R_SPARC_WDISP16 R_SPARC_WDISP161181,59109
#define R_SPARC_WDISP19 R_SPARC_WDISP191182,59182
#define R_SPARC_7 R_SPARC_71183,59255
#define R_SPARC_5 R_SPARC_51184,59314
#define R_SPARC_6 R_SPARC_61185,59373
#define R_SPARC_DISP64 R_SPARC_DISP641186,59432
#define R_SPARC_PLT64 R_SPARC_PLT641187,59497
#define R_SPARC_HIX22 R_SPARC_HIX221188,59574
#define R_SPARC_LOX10 R_SPARC_LOX101189,59645
#define R_SPARC_H44 R_SPARC_H441190,59721
#define R_SPARC_M44 R_SPARC_M441191,59792
#define R_SPARC_L44 R_SPARC_L441192,59862
#define R_SPARC_REGISTER R_SPARC_REGISTER1193,59932
#define R_SPARC_UA64 R_SPARC_UA641194,60000
#define R_SPARC_UA16 R_SPARC_UA161195,60070
#define R_SPARC_TLS_GD_HI22 R_SPARC_TLS_GD_HI221196,60140
#define R_SPARC_TLS_GD_LO10 R_SPARC_TLS_GD_LO101197,60175
#define R_SPARC_TLS_GD_ADD R_SPARC_TLS_GD_ADD1198,60210
#define R_SPARC_TLS_GD_CALL R_SPARC_TLS_GD_CALL1199,60245
#define R_SPARC_TLS_LDM_HI22 R_SPARC_TLS_LDM_HI221200,60280
#define R_SPARC_TLS_LDM_LO10 R_SPARC_TLS_LDM_LO101201,60315
#define R_SPARC_TLS_LDM_ADD R_SPARC_TLS_LDM_ADD1202,60350
#define R_SPARC_TLS_LDM_CALL R_SPARC_TLS_LDM_CALL1203,60385
#define R_SPARC_TLS_LDO_HIX22 R_SPARC_TLS_LDO_HIX221204,60420
#define R_SPARC_TLS_LDO_LOX10 R_SPARC_TLS_LDO_LOX101205,60455
#define R_SPARC_TLS_LDO_ADD R_SPARC_TLS_LDO_ADD1206,60490
#define R_SPARC_TLS_IE_HI22 R_SPARC_TLS_IE_HI221207,60525
#define R_SPARC_TLS_IE_LO10 R_SPARC_TLS_IE_LO101208,60560
#define R_SPARC_TLS_IE_LD R_SPARC_TLS_IE_LD1209,60595
#define R_SPARC_TLS_IE_LDX R_SPARC_TLS_IE_LDX1210,60630
#define R_SPARC_TLS_IE_ADD R_SPARC_TLS_IE_ADD1211,60665
#define R_SPARC_TLS_LE_HIX22 R_SPARC_TLS_LE_HIX221212,60700
#define R_SPARC_TLS_LE_LOX10 R_SPARC_TLS_LE_LOX101213,60735
#define R_SPARC_TLS_DTPMOD32 R_SPARC_TLS_DTPMOD321214,60770
#define R_SPARC_TLS_DTPMOD64 R_SPARC_TLS_DTPMOD641215,60805
#define R_SPARC_TLS_DTPOFF32 R_SPARC_TLS_DTPOFF321216,60840
#define R_SPARC_TLS_DTPOFF64 R_SPARC_TLS_DTPOFF641217,60875
#define R_SPARC_TLS_TPOFF32 R_SPARC_TLS_TPOFF321218,60910
#define R_SPARC_TLS_TPOFF64 R_SPARC_TLS_TPOFF641219,60945
#define R_SPARC_NUM R_SPARC_NUM1221,61013
#define DT_SPARC_REGISTER DT_SPARC_REGISTER1225,61107
#define DT_SPARC_NUM DT_SPARC_NUM1226,61144
#define HWCAP_SPARC_FLUSH HWCAP_SPARC_FLUSH1230,61228
#define HWCAP_SPARC_STBAR HWCAP_SPARC_STBAR1231,61304
#define HWCAP_SPARC_SWAP HWCAP_SPARC_SWAP1232,61338
#define HWCAP_SPARC_MULDIV HWCAP_SPARC_MULDIV1233,61372
#define HWCAP_SPARC_V9 HWCAP_SPARC_V91234,61406
#define HWCAP_SPARC_ULTRA3 HWCAP_SPARC_ULTRA31235,61485
#define EF_MIPS_NOREORDER EF_MIPS_NOREORDER1241,61616
#define EF_MIPS_PIC EF_MIPS_PIC1242,61694
#define EF_MIPS_CPIC EF_MIPS_CPIC1243,61758
#define EF_MIPS_XGOT EF_MIPS_XGOT1244,61830
#define EF_MIPS_64BIT_WHIRL EF_MIPS_64BIT_WHIRL1245,61860
#define EF_MIPS_ABI2 EF_MIPS_ABI21246,61891
#define EF_MIPS_ABI_ON32 EF_MIPS_ABI_ON321247,61922
#define EF_MIPS_ARCH EF_MIPS_ARCH1248,61953
#define EF_MIPS_ARCH_1 EF_MIPS_ARCH_11252,62074
#define EF_MIPS_ARCH_2 EF_MIPS_ARCH_21253,62134
#define EF_MIPS_ARCH_3 EF_MIPS_ARCH_31254,62194
#define EF_MIPS_ARCH_4 EF_MIPS_ARCH_41255,62254
#define EF_MIPS_ARCH_5 EF_MIPS_ARCH_51256,62314
#define EF_MIPS_ARCH_32 EF_MIPS_ARCH_321257,62374
#define EF_MIPS_ARCH_64 EF_MIPS_ARCH_641258,62434
#define E_MIPS_ARCH_1 E_MIPS_ARCH_11262,62564
#define E_MIPS_ARCH_2 E_MIPS_ARCH_21263,62624
#define E_MIPS_ARCH_3 E_MIPS_ARCH_31264,62684
#define E_MIPS_ARCH_4 E_MIPS_ARCH_41265,62744
#define E_MIPS_ARCH_5 E_MIPS_ARCH_51266,62804
#define E_MIPS_ARCH_32 E_MIPS_ARCH_321267,62864
#define E_MIPS_ARCH_64 E_MIPS_ARCH_641268,62924
#define SHN_MIPS_ACOMMON SHN_MIPS_ACOMMON1272,63018
#define SHN_MIPS_TEXT SHN_MIPS_TEXT1273,63089
#define SHN_MIPS_DATA SHN_MIPS_DATA1274,63160
#define SHN_MIPS_SCOMMON SHN_MIPS_SCOMMON1275,63231
#define SHN_MIPS_SUNDEFINED SHN_MIPS_SUNDEFINED1276,63298
#define SHT_MIPS_LIBLIST SHT_MIPS_LIBLIST1280,63423
#define SHT_MIPS_MSYM SHT_MIPS_MSYM1281,63499
#define SHT_MIPS_CONFLICT SHT_MIPS_CONFLICT1282,63541
#define SHT_MIPS_GPTAB SHT_MIPS_GPTAB1283,63609
#define SHT_MIPS_UCODE SHT_MIPS_UCODE1284,63680
#define SHT_MIPS_DEBUG SHT_MIPS_DEBUG1285,63760
#define SHT_MIPS_REGINFO SHT_MIPS_REGINFO1286,63840
#define SHT_MIPS_PACKAGE SHT_MIPS_PACKAGE1287,63915
#define SHT_MIPS_PACKSYM SHT_MIPS_PACKSYM1288,63957
#define SHT_MIPS_RELD SHT_MIPS_RELD1289,63999
#define SHT_MIPS_IFACE SHT_MIPS_IFACE1290,64041
#define SHT_MIPS_CONTENT SHT_MIPS_CONTENT1291,64083
#define SHT_MIPS_OPTIONS SHT_MIPS_OPTIONS1292,64125
#define SHT_MIPS_SHDR SHT_MIPS_SHDR1293,64197
#define SHT_MIPS_FDESC SHT_MIPS_FDESC1294,64239
#define SHT_MIPS_EXTSYM SHT_MIPS_EXTSYM1295,64281
#define SHT_MIPS_DENSE SHT_MIPS_DENSE1296,64323
#define SHT_MIPS_PDESC SHT_MIPS_PDESC1297,64365
#define SHT_MIPS_LOCSYM SHT_MIPS_LOCSYM1298,64407
#define SHT_MIPS_AUXSYM SHT_MIPS_AUXSYM1299,64449
#define SHT_MIPS_OPTSYM SHT_MIPS_OPTSYM1300,64491
#define SHT_MIPS_LOCSTR SHT_MIPS_LOCSTR1301,64533
#define SHT_MIPS_LINE SHT_MIPS_LINE1302,64575
#define SHT_MIPS_RFDESC SHT_MIPS_RFDESC1303,64617
#define SHT_MIPS_DELTASYM SHT_MIPS_DELTASYM1304,64659
#define SHT_MIPS_DELTAINST SHT_MIPS_DELTAINST1305,64701
#define SHT_MIPS_DELTACLASS SHT_MIPS_DELTACLASS1306,64743
#define SHT_MIPS_DWARF SHT_MIPS_DWARF1307,64785
#define SHT_MIPS_DELTADECL SHT_MIPS_DELTADECL1308,64863
#define SHT_MIPS_SYMBOL_LIB SHT_MIPS_SYMBOL_LIB1309,64905
#define SHT_MIPS_EVENTS SHT_MIPS_EVENTS1310,64947
#define SHT_MIPS_TRANSLATE SHT_MIPS_TRANSLATE1311,65011
#define SHT_MIPS_PIXIE SHT_MIPS_PIXIE1312,65053
#define SHT_MIPS_XLATE SHT_MIPS_XLATE1313,65095
#define SHT_MIPS_XLATE_DEBUG SHT_MIPS_XLATE_DEBUG1314,65137
#define SHT_MIPS_WHIRL SHT_MIPS_WHIRL1315,65179
#define SHT_MIPS_EH_REGION SHT_MIPS_EH_REGION1316,65221
#define SHT_MIPS_XLATE_OLD SHT_MIPS_XLATE_OLD1317,65263
#define SHT_MIPS_PDR_EXCEPTION SHT_MIPS_PDR_EXCEPTION1318,65305
#define SHF_MIPS_GPREL SHF_MIPS_GPREL1322,65403
#define SHF_MIPS_MERGE SHF_MIPS_MERGE1323,65482
#define SHF_MIPS_ADDR SHF_MIPS_ADDR1324,65518
#define SHF_MIPS_STRINGS SHF_MIPS_STRINGS1325,65554
#define SHF_MIPS_NOSTRIP SHF_MIPS_NOSTRIP1326,65590
#define SHF_MIPS_LOCAL SHF_MIPS_LOCAL1327,65626
#define SHF_MIPS_NAMES SHF_MIPS_NAMES1328,65662
#define SHF_MIPS_NODUPE SHF_MIPS_NODUPE1329,65698
#define STO_MIPS_DEFAULT STO_MIPS_DEFAULT1335,65803
#define STO_MIPS_INTERNAL STO_MIPS_INTERNAL1336,65847
#define STO_MIPS_HIDDEN STO_MIPS_HIDDEN1337,65891
#define STO_MIPS_PROTECTED STO_MIPS_PROTECTED1338,65935
#define STO_MIPS_SC_ALIGN_UNUSED STO_MIPS_SC_ALIGN_UNUSED1339,65979
#define STB_MIPS_SPLIT_COMMON STB_MIPS_SPLIT_COMMON1342,66068
                Elf32_Word gt_current_g_value;    /* -G value used for compilation */gt_current_g_value1348,66203
                Elf32_Word gt_unused;             /* Not used */gt_unused1349,66289
        } gt_header;                        /* First entry in section */gt_header1350,66354
                Elf32_Word gt_g_value;            /* If this value were used for -G */gt_g_value1352,66444
                Elf32_Word gt_bytes;              /* This many bytes would be used */gt_bytes1353,66531
        } gt_entry;                         /* Subsequent entries in section */gt_entry1354,66617
} Elf32_gptab;Elf32_gptab1355,66697
        Elf32_Word    ri_gprmask;             /* General registers used */ri_gprmask1360,66788
        Elf32_Word    ri_cprmask[4];          /* Coprocessor registers used */ri_cprmask1361,66863
        Elf32_Sword   ri_gp_value;            /* $gp register value */ri_gp_value1362,66942
} Elf32_RegInfo;Elf32_RegInfo1363,67013
        unsigned char kind;           /* Determines interpretation of thekind1368,67108
        unsigned char size;           /* Size of descriptor, including header.  */size1370,67250
        Elf32_Section section;        /* Section header index of section affected,section1371,67333
        Elf32_Word info;              /* Kind-specific information.  */info1373,67477
} Elf_Options;Elf_Options1374,67549
#define ODK_NULL ODK_NULL1378,67613
#define ODK_REGINFO ODK_REGINFO1379,67663
#define ODK_EXCEPTIONS ODK_EXCEPTIONS1380,67730
#define ODK_PAD ODK_PAD1381,67799
#define ODK_HWPATCH ODK_HWPATCH1382,67863
#define ODK_FILL ODK_FILL1383,67932
#define ODK_TAGS ODK_TAGS1384,68012
#define ODK_HWAND ODK_HWAND1385,68092
#define ODK_HWOR ODK_HWOR1386,68172
#define OEX_FPU_MIN OEX_FPU_MIN1390,68322
#define OEX_FPU_MAX OEX_FPU_MAX1391,68390
#define OEX_PAGE0 OEX_PAGE01392,68457
#define OEX_SMM OEX_SMM1393,68522
#define OEX_FPDBUG OEX_FPDBUG1394,68591
#define OEX_PRECISEFP OEX_PRECISEFP1395,68663
#define OEX_DISMISS OEX_DISMISS1396,68698
#define OEX_FPU_INVAL OEX_FPU_INVAL1398,68770
#define OEX_FPU_DIV0 OEX_FPU_DIV01399,68799
#define OEX_FPU_OFLO OEX_FPU_OFLO1400,68828
#define OEX_FPU_UFLO OEX_FPU_UFLO1401,68857
#define OEX_FPU_INEX OEX_FPU_INEX1402,68886
#define OHW_R4KEOP OHW_R4KEOP1406,68982
#define OHW_R8KPFETCH OHW_R8KPFETCH1407,69046
#define OHW_R5KEOP OHW_R5KEOP1408,69116
#define OHW_R5KCVTL OHW_R5KCVTL1409,69180
#define OPAD_PREFIX OPAD_PREFIX1411,69252
#define OPAD_POSTFIX OPAD_POSTFIX1412,69280
#define OPAD_SYMBOL OPAD_SYMBOL1413,69308
        Elf32_Word hwp_flags1;        /* Extra flags.  */hwp_flags11418,69397
        Elf32_Word hwp_flags2;        /* Extra flags.  */hwp_flags21419,69455
} Elf_Options_Hw;Elf_Options_Hw1420,69513
#define OHWA0_R4KEOP_CHECKED OHWA0_R4KEOP_CHECKED1424,69607
#define OHWA1_R4KEOP_CLEAN OHWA1_R4KEOP_CLEAN1425,69650
#define R_MIPS_NONE R_MIPS_NONE1429,69715
#define R_MIPS_16 R_MIPS_161430,69770
#define R_MIPS_32 R_MIPS_321431,69830
#define R_MIPS_REL32 R_MIPS_REL321432,69890
#define R_MIPS_26 R_MIPS_261433,69955
#define R_MIPS_HI16 R_MIPS_HI161434,70023
#define R_MIPS_LO16 R_MIPS_LO161435,70081
#define R_MIPS_GPREL16 R_MIPS_GPREL161436,70138
#define R_MIPS_LITERAL R_MIPS_LITERAL1437,70203
#define R_MIPS_GOT16 R_MIPS_GOT161438,70270
#define R_MIPS_PC16 R_MIPS_PC161439,70333
#define R_MIPS_CALL16 R_MIPS_CALL161440,70398
#define R_MIPS_GPREL32 R_MIPS_GPREL321441,70474
#define R_MIPS_SHIFT5 R_MIPS_SHIFT51443,70540
#define R_MIPS_SHIFT6 R_MIPS_SHIFT61444,70575
#define R_MIPS_64 R_MIPS_641445,70610
#define R_MIPS_GOT_DISP R_MIPS_GOT_DISP1446,70645
#define R_MIPS_GOT_PAGE R_MIPS_GOT_PAGE1447,70680
#define R_MIPS_GOT_OFST R_MIPS_GOT_OFST1448,70715
#define R_MIPS_GOT_HI16 R_MIPS_GOT_HI161449,70750
#define R_MIPS_GOT_LO16 R_MIPS_GOT_LO161450,70785
#define R_MIPS_SUB R_MIPS_SUB1451,70820
#define R_MIPS_INSERT_A R_MIPS_INSERT_A1452,70855
#define R_MIPS_INSERT_B R_MIPS_INSERT_B1453,70890
#define R_MIPS_DELETE R_MIPS_DELETE1454,70925
#define R_MIPS_HIGHER R_MIPS_HIGHER1455,70960
#define R_MIPS_HIGHEST R_MIPS_HIGHEST1456,70995
#define R_MIPS_CALL_HI16 R_MIPS_CALL_HI161457,71030
#define R_MIPS_CALL_LO16 R_MIPS_CALL_LO161458,71065
#define R_MIPS_SCN_DISP R_MIPS_SCN_DISP1459,71100
#define R_MIPS_REL16 R_MIPS_REL161460,71135
#define R_MIPS_ADD_IMMEDIATE R_MIPS_ADD_IMMEDIATE1461,71170
#define R_MIPS_PJUMP R_MIPS_PJUMP1462,71205
#define R_MIPS_RELGOT R_MIPS_RELGOT1463,71240
#define R_MIPS_JALR R_MIPS_JALR1464,71275
#define R_MIPS_NUM R_MIPS_NUM1466,71343
#define PT_MIPS_REGINFO PT_MIPS_REGINFO1470,71432
#define PT_MIPS_RTPROC PT_MIPS_RTPROC1471,71505
#define PT_MIPS_OPTIONS PT_MIPS_OPTIONS1472,71576
#define PF_MIPS_LOCAL PF_MIPS_LOCAL1476,71650
#define DT_MIPS_RLD_VERSION DT_MIPS_RLD_VERSION1480,71737
#define DT_MIPS_TIME_STAMP DT_MIPS_TIME_STAMP1481,71816
#define DT_MIPS_ICHECKSUM DT_MIPS_ICHECKSUM1482,71872
#define DT_MIPS_IVERSION DT_MIPS_IVERSION1483,71927
#define DT_MIPS_FLAGS DT_MIPS_FLAGS1484,72007
#define DT_MIPS_BASE_ADDRESS DT_MIPS_BASE_ADDRESS1485,72059
#define DT_MIPS_MSYM DT_MIPS_MSYM1486,72118
#define DT_MIPS_CONFLICT DT_MIPS_CONFLICT1487,72158
#define DT_MIPS_LIBLIST DT_MIPS_LIBLIST1488,72232
#define DT_MIPS_LOCAL_GOTNO DT_MIPS_LOCAL_GOTNO1489,72305
#define DT_MIPS_CONFLICTNO DT_MIPS_CONFLICTNO1490,72379
#define DT_MIPS_LIBLISTNO DT_MIPS_LIBLISTNO1491,72452
#define DT_MIPS_SYMTABNO DT_MIPS_SYMTABNO1492,72524
#define DT_MIPS_UNREFEXTNO DT_MIPS_UNREFEXTNO1493,72595
#define DT_MIPS_GOTSYM DT_MIPS_GOTSYM1494,72663
#define DT_MIPS_HIPAGENO DT_MIPS_HIPAGENO1495,72735
#define DT_MIPS_RLD_MAP DT_MIPS_RLD_MAP1496,72814
#define DT_MIPS_DELTA_CLASS DT_MIPS_DELTA_CLASS1497,72893
#define DT_MIPS_DELTA_CLASS_NO DT_MIPS_DELTA_CLASS_NO1498,72968
#define DT_MIPS_DELTA_INSTANCE DT_MIPS_DELTA_INSTANCE1500,73062
#define DT_MIPS_DELTA_INSTANCE_NO DT_MIPS_DELTA_INSTANCE_NO1501,73141
#define DT_MIPS_DELTA_RELOC DT_MIPS_DELTA_RELOC1503,73238
#define DT_MIPS_DELTA_RELOC_NO DT_MIPS_DELTA_RELOC_NO1504,73304
#define DT_MIPS_DELTA_SYM DT_MIPS_DELTA_SYM1506,73395
#define DT_MIPS_DELTA_SYM_NO DT_MIPS_DELTA_SYM_NO1508,73489
#define DT_MIPS_DELTA_CLASSSYM DT_MIPS_DELTA_CLASSSYM1510,73576
#define DT_MIPS_DELTA_CLASSSYM_NO DT_MIPS_DELTA_CLASSSYM_NO1512,73672
#define DT_MIPS_CXX_FLAGS DT_MIPS_CXX_FLAGS1514,73777
#define DT_MIPS_PIXIE_INIT DT_MIPS_PIXIE_INIT1515,73857
#define DT_MIPS_SYMBOL_LIB DT_MIPS_SYMBOL_LIB1516,73897
#define DT_MIPS_LOCALPAGE_GOTIDX DT_MIPS_LOCALPAGE_GOTIDX1517,73937
#define DT_MIPS_LOCAL_GOTIDX DT_MIPS_LOCAL_GOTIDX1518,73981
#define DT_MIPS_HIDDEN_GOTIDX DT_MIPS_HIDDEN_GOTIDX1519,74021
#define DT_MIPS_PROTECTED_GOTIDX DT_MIPS_PROTECTED_GOTIDX1520,74062
#define DT_MIPS_OPTIONS DT_MIPS_OPTIONS1521,74106
#define DT_MIPS_INTERFACE DT_MIPS_INTERFACE1522,74174
#define DT_MIPS_DYNSTR_ALIGN DT_MIPS_DYNSTR_ALIGN1523,74244
#define DT_MIPS_INTERFACE_SIZE DT_MIPS_INTERFACE_SIZE1524,74284
#define DT_MIPS_RLD_TEXT_RESOLVE_ADDR DT_MIPS_RLD_TEXT_RESOLVE_ADDR1525,74364
#define DT_MIPS_PERF_SUFFIX DT_MIPS_PERF_SUFFIX1527,74479
#define DT_MIPS_COMPACT_SIZE DT_MIPS_COMPACT_SIZE1529,74594
#define DT_MIPS_GP_VALUE DT_MIPS_GP_VALUE1530,74674
#define DT_MIPS_AUX_DYNAMIC DT_MIPS_AUX_DYNAMIC1531,74744
#define DT_MIPS_NUM DT_MIPS_NUM1532,74816
#define RHF_NONE RHF_NONE1536,74907
#define RHF_QUICKSTART RHF_QUICKSTART1537,74970
#define RHF_NOTPOT RHF_NOTPOT1538,75039
#define RHF_NO_LIBRARY_REPLACEMENT RHF_NO_LIBRARY_REPLACEMENT1539,75118
#define RHF_NO_MOVE RHF_NO_MOVE1540,75195
#define RHF_SGI_ONLY RHF_SGI_ONLY1541,75239
#define RHF_GUARANTEE_INIT RHF_GUARANTEE_INIT1542,75283
#define RHF_DELTA_C_PLUS_PLUS RHF_DELTA_C_PLUS_PLUS1543,75327
#define RHF_GUARANTEE_START_INIT RHF_GUARANTEE_START_INIT1544,75371
#define RHF_PIXIE RHF_PIXIE1545,75415
#define RHF_DEFAULT_DELAY_LOAD RHF_DEFAULT_DELAY_LOAD1546,75459
#define RHF_REQUICKSTART RHF_REQUICKSTART1547,75503
#define RHF_REQUICKSTARTED RHF_REQUICKSTARTED1548,75548
#define RHF_CORD RHF_CORD1549,75593
#define RHF_NO_UNRES_UNDEF RHF_NO_UNRES_UNDEF1550,75638
#define RHF_RLD_ORDER_SAFE RHF_RLD_ORDER_SAFE1551,75683
                Elf32_Word l_name;            /* Name (string table index) */l_name1556,75822
                Elf32_Word l_time_stamp;      /* Timestamp */l_time_stamp1557,75900
                Elf32_Word l_checksum;        /* Checksum */l_checksum1558,75962
                Elf32_Word l_version;         /* Interface version */l_version1559,76023
                Elf32_Word l_flags;           /* Flags */l_flags1560,76093
        } Elf32_Lib;Elf32_Lib1561,76151
        Elf64_Word l_name;            /* Name (string table index) */l_name1564,76190
        Elf64_Word l_time_stamp;      /* Timestamp */l_time_stamp1565,76260
        Elf64_Word l_checksum;        /* Checksum */l_checksum1566,76314
        Elf64_Word l_version;         /* Interface version */l_version1567,76367
        Elf64_Word l_flags;           /* Flags */l_flags1568,76429
} Elf64_Lib;Elf64_Lib1569,76479
#define LL_NONE LL_NONE1574,76528
#define LL_EXACT_MATCH LL_EXACT_MATCH1575,76556
#define LL_IGNORE_INT_VER LL_IGNORE_INT_VER1576,76622
#define LL_REQUIRE_MINOR LL_REQUIRE_MINOR1577,76693
#define LL_EXPORTS LL_EXPORTS1578,76728
#define LL_DELAY_LOAD LL_DELAY_LOAD1579,76763
#define LL_DELTA LL_DELTA1580,76798
typedef Elf32_Addr Elf32_Conflict;Elf32_Conflict1584,76895
#define EF_PARISC_TRAPNIL EF_PARISC_TRAPNIL1591,77021
#define EF_PARISC_EXT EF_PARISC_EXT1592,77101
#define EF_PARISC_LSB EF_PARISC_LSB1593,77181
#define EF_PARISC_WIDE EF_PARISC_WIDE1594,77261
#define EF_PARISC_NO_KABP EF_PARISC_NO_KABP1595,77338
#define EF_PARISC_LAZYSWAP EF_PARISC_LAZYSWAP1597,77426
#define EF_PARISC_ARCH EF_PARISC_ARCH1598,77497
#define EFA_PARISC_1_0 EFA_PARISC_1_01602,77629
#define EFA_PARISC_1_1 EFA_PARISC_1_11603,77703
#define EFA_PARISC_2_0 EFA_PARISC_2_01604,77777
#define SHN_PARISC_ANSI_COMMON SHN_PARISC_ANSI_COMMON1608,77888
#define SHN_PARISC_HUGE_COMMON SHN_PARISC_HUGE_COMMON1610,77989
#define SHT_PARISC_EXT SHT_PARISC_EXT1614,78123
#define SHT_PARISC_UNWIND SHT_PARISC_UNWIND1615,78203
#define SHT_PARISC_DOC SHT_PARISC_DOC1616,78273
#define SHF_PARISC_SHORT SHF_PARISC_SHORT1620,78409
#define SHF_PARISC_HUGE SHF_PARISC_HUGE1621,78489
#define SHF_PARISC_SBP SHF_PARISC_SBP1622,78560
#define STT_PARISC_MILLICODE STT_PARISC_MILLICODE1626,78709
#define STT_HP_OPAQUE STT_HP_OPAQUE1628,78789
#define STT_HP_STUB STT_HP_STUB1629,78838
#define R_PARISC_NONE R_PARISC_NONE1633,78909
#define R_PARISC_DIR32 R_PARISC_DIR321634,78966
#define R_PARISC_DIR21L R_PARISC_DIR21L1635,79038
#define R_PARISC_DIR17R R_PARISC_DIR17R1636,79115
#define R_PARISC_DIR17F R_PARISC_DIR17F1637,79193
#define R_PARISC_DIR14R R_PARISC_DIR14R1638,79265
#define R_PARISC_PCREL32 R_PARISC_PCREL321639,79343
#define R_PARISC_PCREL21L R_PARISC_PCREL21L1640,79411
#define R_PARISC_PCREL17R R_PARISC_PCREL17R1641,79488
#define R_PARISC_PCREL17F R_PARISC_PCREL17F1642,79566
#define R_PARISC_PCREL14R R_PARISC_PCREL14R1643,79638
#define R_PARISC_DPREL21L R_PARISC_DPREL21L1644,79716
#define R_PARISC_DPREL14R R_PARISC_DPREL14R1645,79793
#define R_PARISC_GPREL21L R_PARISC_GPREL21L1646,79871
#define R_PARISC_GPREL14R R_PARISC_GPREL14R1647,79945
#define R_PARISC_LTOFF21L R_PARISC_LTOFF21L1648,80020
#define R_PARISC_LTOFF14R R_PARISC_LTOFF14R1649,80094
#define R_PARISC_SECREL32 R_PARISC_SECREL321650,80169
#define R_PARISC_SEGBASE R_PARISC_SEGBASE1651,80246
#define R_PARISC_SEGREL32 R_PARISC_SEGREL321652,80326
#define R_PARISC_PLTOFF21L R_PARISC_PLTOFF21L1653,80403
#define R_PARISC_PLTOFF14R R_PARISC_PLTOFF14R1654,80482
#define R_PARISC_LTOFF_FPTR32 R_PARISC_LTOFF_FPTR321655,80562
#define R_PARISC_LTOFF_FPTR21L R_PARISC_LTOFF_FPTR21L1656,80642
#define R_PARISC_LTOFF_FPTR14R R_PARISC_LTOFF_FPTR14R1657,80719
#define R_PARISC_FPTR64 R_PARISC_FPTR641658,80797
#define R_PARISC_PLABEL32 R_PARISC_PLABEL321659,80870
#define R_PARISC_PLABEL21L R_PARISC_PLABEL21L1660,80943
#define R_PARISC_PLABEL14R R_PARISC_PLABEL14R1661,81015
#define R_PARISC_PCREL64 R_PARISC_PCREL641662,81087
#define R_PARISC_PCREL22F R_PARISC_PCREL22F1663,81159
#define R_PARISC_PCREL14WR R_PARISC_PCREL14WR1664,81231
#define R_PARISC_PCREL14DR R_PARISC_PCREL14DR1665,81310
#define R_PARISC_PCREL16F R_PARISC_PCREL16F1666,81389
#define R_PARISC_PCREL16WF R_PARISC_PCREL16WF1667,81461
#define R_PARISC_PCREL16DF R_PARISC_PCREL16DF1668,81533
#define R_PARISC_DIR64 R_PARISC_DIR641669,81605
#define R_PARISC_DIR14WR R_PARISC_DIR14WR1670,81677
#define R_PARISC_DIR14DR R_PARISC_DIR14DR1671,81749
#define R_PARISC_DIR16F R_PARISC_DIR16F1672,81821
#define R_PARISC_DIR16WF R_PARISC_DIR16WF1673,81893
#define R_PARISC_DIR16DF R_PARISC_DIR16DF1674,81965
#define R_PARISC_GPREL64 R_PARISC_GPREL641675,82037
#define R_PARISC_GPREL14WR R_PARISC_GPREL14WR1676,82112
#define R_PARISC_GPREL14DR R_PARISC_GPREL14DR1677,82191
#define R_PARISC_GPREL16F R_PARISC_GPREL16F1678,82270
#define R_PARISC_GPREL16WF R_PARISC_GPREL16WF1679,82342
#define R_PARISC_GPREL16DF R_PARISC_GPREL16DF1680,82414
#define R_PARISC_LTOFF64 R_PARISC_LTOFF641681,82486
#define R_PARISC_LTOFF14WR R_PARISC_LTOFF14WR1682,82558
#define R_PARISC_LTOFF14DR R_PARISC_LTOFF14DR1683,82637
#define R_PARISC_LTOFF16F R_PARISC_LTOFF16F1684,82716
#define R_PARISC_LTOFF16WF R_PARISC_LTOFF16WF1685,82788
#define R_PARISC_LTOFF16DF R_PARISC_LTOFF16DF1686,82860
#define R_PARISC_SECREL64 R_PARISC_SECREL641687,82932
#define R_PARISC_SEGREL64 R_PARISC_SEGREL641688,83009
#define R_PARISC_PLTOFF14WR R_PARISC_PLTOFF14WR1689,83086
#define R_PARISC_PLTOFF14DR R_PARISC_PLTOFF14DR1690,83166
#define R_PARISC_PLTOFF16F R_PARISC_PLTOFF16F1691,83246
#define R_PARISC_PLTOFF16WF R_PARISC_PLTOFF16WF1692,83318
#define R_PARISC_PLTOFF16DF R_PARISC_PLTOFF16DF1693,83391
#define R_PARISC_LTOFF_FPTR64 R_PARISC_LTOFF_FPTR641694,83464
#define R_PARISC_LTOFF_FPTR14WR R_PARISC_LTOFF_FPTR14WR1695,83541
#define R_PARISC_LTOFF_FPTR14DR R_PARISC_LTOFF_FPTR14DR1696,83621
#define R_PARISC_LTOFF_FPTR16F R_PARISC_LTOFF_FPTR16F1697,83701
#define R_PARISC_LTOFF_FPTR16WF R_PARISC_LTOFF_FPTR16WF1698,83778
#define R_PARISC_LTOFF_FPTR16DF R_PARISC_LTOFF_FPTR16DF1699,83855
#define R_PARISC_LORESERVE R_PARISC_LORESERVE1700,83932
#define R_PARISC_COPY R_PARISC_COPY1701,83968
#define R_PARISC_IPLT R_PARISC_IPLT1702,84032
#define R_PARISC_EPLT R_PARISC_EPLT1703,84106
#define R_PARISC_TPREL32 R_PARISC_TPREL321704,84180
#define R_PARISC_TPREL21L R_PARISC_TPREL21L1705,84252
#define R_PARISC_TPREL14R R_PARISC_TPREL14R1706,84330
#define R_PARISC_LTOFF_TP21L R_PARISC_LTOFF_TP21L1707,84409
#define R_PARISC_LTOFF_TP14R R_PARISC_LTOFF_TP14R1708,84489
#define R_PARISC_LTOFF_TP14F R_PARISC_LTOFF_TP14F1709,84569
#define R_PARISC_TPREL64 R_PARISC_TPREL641710,84644
#define R_PARISC_TPREL14WR R_PARISC_TPREL14WR1711,84716
#define R_PARISC_TPREL14DR R_PARISC_TPREL14DR1712,84795
#define R_PARISC_TPREL16F R_PARISC_TPREL16F1713,84874
#define R_PARISC_TPREL16WF R_PARISC_TPREL16WF1714,84946
#define R_PARISC_TPREL16DF R_PARISC_TPREL16DF1715,85018
#define R_PARISC_LTOFF_TP64 R_PARISC_LTOFF_TP641716,85090
#define R_PARISC_LTOFF_TP14WR R_PARISC_LTOFF_TP14WR1717,85165
#define R_PARISC_LTOFF_TP14DR R_PARISC_LTOFF_TP14DR1718,85245
#define R_PARISC_LTOFF_TP16F R_PARISC_LTOFF_TP16F1719,85325
#define R_PARISC_LTOFF_TP16WF R_PARISC_LTOFF_TP16WF1720,85400
#define R_PARISC_LTOFF_TP16DF R_PARISC_LTOFF_TP16DF1721,85475
#define R_PARISC_HIRESERVE R_PARISC_HIRESERVE1722,85550
#define PT_HP_TLS PT_HP_TLS1726,85651
#define PT_HP_CORE_NONE PT_HP_CORE_NONE1727,85699
#define PT_HP_CORE_VERSION PT_HP_CORE_VERSION1728,85747
#define PT_HP_CORE_KERNEL PT_HP_CORE_KERNEL1729,85795
#define PT_HP_CORE_COMM PT_HP_CORE_COMM1730,85843
#define PT_HP_CORE_PROC PT_HP_CORE_PROC1731,85891
#define PT_HP_CORE_LOADABLE PT_HP_CORE_LOADABLE1732,85939
#define PT_HP_CORE_STACK PT_HP_CORE_STACK1733,85987
#define PT_HP_CORE_SHM PT_HP_CORE_SHM1734,86035
#define PT_HP_CORE_MMF PT_HP_CORE_MMF1735,86083
#define PT_HP_PARALLEL PT_HP_PARALLEL1736,86131
#define PT_HP_FASTBIND PT_HP_FASTBIND1737,86180
#define PT_HP_OPT_ANNOT PT_HP_OPT_ANNOT1738,86229
#define PT_HP_HSL_ANNOT PT_HP_HSL_ANNOT1739,86278
#define PT_HP_STACK PT_HP_STACK1740,86327
#define PT_PARISC_ARCHEXT PT_PARISC_ARCHEXT1742,86377
#define PT_PARISC_UNWIND PT_PARISC_UNWIND1743,86420
#define PF_PARISC_SBP PF_PARISC_SBP1747,86529
#define PF_HP_PAGE_SIZE PF_HP_PAGE_SIZE1749,86573
#define PF_HP_FAR_SHARED PF_HP_FAR_SHARED1750,86616
#define PF_HP_NEAR_SHARED PF_HP_NEAR_SHARED1751,86659
#define PF_HP_CODE PF_HP_CODE1752,86702
#define PF_HP_MODIFY PF_HP_MODIFY1753,86745
#define PF_HP_LAZYSWAP PF_HP_LAZYSWAP1754,86788
#define PF_HP_SBP PF_HP_SBP1755,86831
#define EF_ALPHA_32BIT EF_ALPHA_32BIT1762,86966
#define EF_ALPHA_CANRELAX EF_ALPHA_CANRELAX1763,87042
#define SHT_ALPHA_DEBUG SHT_ALPHA_DEBUG1768,87244
#define SHT_ALPHA_REGINFO SHT_ALPHA_REGINFO1769,87287
#define SHF_ALPHA_GPREL SHF_ALPHA_GPREL1773,87386
#define STO_ALPHA_NOPV STO_ALPHA_NOPV1776,87483
#define STO_ALPHA_STD_GPLOAD STO_ALPHA_STD_GPLOAD1777,87546
#define R_ALPHA_NONE R_ALPHA_NONE1781,87647
#define R_ALPHA_REFLONG R_ALPHA_REFLONG1782,87702
#define R_ALPHA_REFQUAD R_ALPHA_REFQUAD1783,87762
#define R_ALPHA_GPREL32 R_ALPHA_GPREL321784,87822
#define R_ALPHA_LITERAL R_ALPHA_LITERAL1785,87887
#define R_ALPHA_LITUSE R_ALPHA_LITUSE1786,87967
#define R_ALPHA_GPDISP R_ALPHA_GPDISP1787,88043
#define R_ALPHA_BRADDR R_ALPHA_BRADDR1788,88112
#define R_ALPHA_HINT R_ALPHA_HINT1789,88187
#define R_ALPHA_SREL16 R_ALPHA_SREL161790,88262
#define R_ALPHA_SREL32 R_ALPHA_SREL321791,88327
#define R_ALPHA_SREL64 R_ALPHA_SREL641792,88392
#define R_ALPHA_GPRELHIGH R_ALPHA_GPRELHIGH1793,88457
#define R_ALPHA_GPRELLOW R_ALPHA_GPRELLOW1794,88536
#define R_ALPHA_GPREL16 R_ALPHA_GPREL161795,88614
#define R_ALPHA_COPY R_ALPHA_COPY1796,88679
#define R_ALPHA_GLOB_DAT R_ALPHA_GLOB_DAT1797,88748
#define R_ALPHA_JMP_SLOT R_ALPHA_JMP_SLOT1798,88811
#define R_ALPHA_RELATIVE R_ALPHA_RELATIVE1799,88874
#define R_ALPHA_TLS_GD_HI R_ALPHA_TLS_GD_HI1800,88943
#define R_ALPHA_TLSGD R_ALPHA_TLSGD1801,88978
#define R_ALPHA_TLS_LDM R_ALPHA_TLS_LDM1802,89013
#define R_ALPHA_DTPMOD64 R_ALPHA_DTPMOD641803,89048
#define R_ALPHA_GOTDTPREL R_ALPHA_GOTDTPREL1804,89083
#define R_ALPHA_DTPREL64 R_ALPHA_DTPREL641805,89118
#define R_ALPHA_DTPRELHI R_ALPHA_DTPRELHI1806,89153
#define R_ALPHA_DTPRELLO R_ALPHA_DTPRELLO1807,89188
#define R_ALPHA_DTPREL16 R_ALPHA_DTPREL161808,89223
#define R_ALPHA_GOTTPREL R_ALPHA_GOTTPREL1809,89258
#define R_ALPHA_TPREL64 R_ALPHA_TPREL641810,89293
#define R_ALPHA_TPRELHI R_ALPHA_TPRELHI1811,89328
#define R_ALPHA_TPRELLO R_ALPHA_TPRELLO1812,89363
#define R_ALPHA_TPREL16 R_ALPHA_TPREL161813,89398
#define R_ALPHA_NUM R_ALPHA_NUM1815,89466
#define LITUSE_ALPHA_ADDR LITUSE_ALPHA_ADDR1818,89555
#define LITUSE_ALPHA_BASE LITUSE_ALPHA_BASE1819,89589
#define LITUSE_ALPHA_BYTOFF LITUSE_ALPHA_BYTOFF1820,89623
#define LITUSE_ALPHA_JSR LITUSE_ALPHA_JSR1821,89657
#define LITUSE_ALPHA_TLS_GD LITUSE_ALPHA_TLS_GD1822,89691
#define LITUSE_ALPHA_TLS_LDM LITUSE_ALPHA_TLS_LDM1823,89725
#define EF_PPC_EMB EF_PPC_EMB1829,89839
#define EF_PPC_RELOCATABLE EF_PPC_RELOCATABLE1832,89946
#define EF_PPC_RELOCATABLE_LIB EF_PPC_RELOCATABLE_LIB1833,90026
#define R_PPC_NONE R_PPC_NONE1837,90158
#define R_PPC_ADDR32 R_PPC_ADDR321838,90192
#define R_PPC_ADDR24 R_PPC_ADDR241839,90261
#define R_PPC_ADDR16 R_PPC_ADDR161840,90339
#define R_PPC_ADDR16_LO R_PPC_ADDR16_LO1841,90408
#define R_PPC_ADDR16_HI R_PPC_ADDR16_HI1842,90486
#define R_PPC_ADDR16_HA R_PPC_ADDR16_HA1843,90563
#define R_PPC_ADDR14 R_PPC_ADDR141844,90629
#define R_PPC_ADDR14_BRTAKEN R_PPC_ADDR14_BRTAKEN1845,90705
#define R_PPC_ADDR14_BRNTAKEN R_PPC_ADDR14_BRNTAKEN1846,90739
#define R_PPC_REL24 R_PPC_REL241847,90773
#define R_PPC_REL14 R_PPC_REL141848,90838
#define R_PPC_REL14_BRTAKEN R_PPC_REL14_BRTAKEN1849,90903
#define R_PPC_REL14_BRNTAKEN R_PPC_REL14_BRNTAKEN1850,90938
#define R_PPC_GOT16 R_PPC_GOT161851,90973
#define R_PPC_GOT16_LO R_PPC_GOT16_LO1852,91008
#define R_PPC_GOT16_HI R_PPC_GOT16_HI1853,91043
#define R_PPC_GOT16_HA R_PPC_GOT16_HA1854,91078
#define R_PPC_PLTREL24 R_PPC_PLTREL241855,91113
#define R_PPC_COPY R_PPC_COPY1856,91148
#define R_PPC_GLOB_DAT R_PPC_GLOB_DAT1857,91183
#define R_PPC_JMP_SLOT R_PPC_JMP_SLOT1858,91218
#define R_PPC_RELATIVE R_PPC_RELATIVE1859,91253
#define R_PPC_LOCAL24PC R_PPC_LOCAL24PC1860,91288
#define R_PPC_UADDR32 R_PPC_UADDR321861,91323
#define R_PPC_UADDR16 R_PPC_UADDR161862,91358
#define R_PPC_REL32 R_PPC_REL321863,91393
#define R_PPC_PLT32 R_PPC_PLT321864,91428
#define R_PPC_PLTREL32 R_PPC_PLTREL321865,91463
#define R_PPC_PLT16_LO R_PPC_PLT16_LO1866,91498
#define R_PPC_PLT16_HI R_PPC_PLT16_HI1867,91533
#define R_PPC_PLT16_HA R_PPC_PLT16_HA1868,91568
#define R_PPC_SDAREL16 R_PPC_SDAREL161869,91603
#define R_PPC_SECTOFF R_PPC_SECTOFF1870,91638
#define R_PPC_SECTOFF_LO R_PPC_SECTOFF_LO1871,91673
#define R_PPC_SECTOFF_HI R_PPC_SECTOFF_HI1872,91708
#define R_PPC_SECTOFF_HA R_PPC_SECTOFF_HA1873,91743
#define R_PPC_TLS R_PPC_TLS1876,91838
#define R_PPC_DTPMOD32 R_PPC_DTPMOD321877,91903
#define R_PPC_TPREL16 R_PPC_TPREL161878,91971
#define R_PPC_TPREL16_LO R_PPC_TPREL16_LO1879,92038
#define R_PPC_TPREL16_HI R_PPC_TPREL16_HI1880,92107
#define R_PPC_TPREL16_HA R_PPC_TPREL16_HA1881,92176
#define R_PPC_TPREL32 R_PPC_TPREL321882,92246
#define R_PPC_DTPREL16 R_PPC_DTPREL161883,92313
#define R_PPC_DTPREL16_LO R_PPC_DTPREL16_LO1884,92381
#define R_PPC_DTPREL16_HI R_PPC_DTPREL16_HI1885,92451
#define R_PPC_DTPREL16_HA R_PPC_DTPREL16_HA1886,92521
#define R_PPC_DTPREL32 R_PPC_DTPREL321887,92592
#define R_PPC_GOT_TLSGD16 R_PPC_GOT_TLSGD161888,92660
#define R_PPC_GOT_TLSGD16_LO R_PPC_GOT_TLSGD16_LO1889,92731
#define R_PPC_GOT_TLSGD16_HI R_PPC_GOT_TLSGD16_HI1890,92804
#define R_PPC_GOT_TLSGD16_HA R_PPC_GOT_TLSGD16_HA1891,92877
#define R_PPC_GOT_TLSLD16 R_PPC_GOT_TLSLD161892,92951
#define R_PPC_GOT_TLSLD16_LO R_PPC_GOT_TLSLD16_LO1893,93022
#define R_PPC_GOT_TLSLD16_HI R_PPC_GOT_TLSLD16_HI1894,93095
#define R_PPC_GOT_TLSLD16_HA R_PPC_GOT_TLSLD16_HA1895,93168
#define R_PPC_GOT_TPREL16 R_PPC_GOT_TPREL161896,93242
#define R_PPC_GOT_TPREL16_LO R_PPC_GOT_TPREL16_LO1897,93313
#define R_PPC_GOT_TPREL16_HI R_PPC_GOT_TPREL16_HI1898,93386
#define R_PPC_GOT_TPREL16_HA R_PPC_GOT_TPREL16_HA1899,93459
#define R_PPC_GOT_DTPREL16 R_PPC_GOT_DTPREL161900,93533
#define R_PPC_GOT_DTPREL16_LO R_PPC_GOT_DTPREL16_LO1901,93605
#define R_PPC_GOT_DTPREL16_HI R_PPC_GOT_DTPREL16_HI1902,93679
#define R_PPC_GOT_DTPREL16_HA R_PPC_GOT_DTPREL16_HA1903,93753
#define R_PPC_NUM R_PPC_NUM1906,93862
#define R_PPC_EMB_NADDR32 R_PPC_EMB_NADDR321910,93993
#define R_PPC_EMB_NADDR16 R_PPC_EMB_NADDR161911,94029
#define R_PPC_EMB_NADDR16_LO R_PPC_EMB_NADDR16_LO1912,94065
#define R_PPC_EMB_NADDR16_HI R_PPC_EMB_NADDR16_HI1913,94101
#define R_PPC_EMB_NADDR16_HA R_PPC_EMB_NADDR16_HA1914,94137
#define R_PPC_EMB_SDAI16 R_PPC_EMB_SDAI161915,94173
#define R_PPC_EMB_SDA2I16 R_PPC_EMB_SDA2I161916,94209
#define R_PPC_EMB_SDA2REL R_PPC_EMB_SDA2REL1917,94245
#define R_PPC_EMB_SDA21 R_PPC_EMB_SDA211918,94281
#define R_PPC_EMB_MRKREF R_PPC_EMB_MRKREF1919,94348
#define R_PPC_EMB_RELSEC16 R_PPC_EMB_RELSEC161920,94384
#define R_PPC_EMB_RELST_LO R_PPC_EMB_RELST_LO1921,94420
#define R_PPC_EMB_RELST_HI R_PPC_EMB_RELST_HI1922,94456
#define R_PPC_EMB_RELST_HA R_PPC_EMB_RELST_HA1923,94492
#define R_PPC_EMB_BIT_FLD R_PPC_EMB_BIT_FLD1924,94528
#define R_PPC_EMB_RELSDA R_PPC_EMB_RELSDA1925,94564
#define R_PPC_DIAB_SDA21_LO R_PPC_DIAB_SDA21_LO1928,94671
#define R_PPC_DIAB_SDA21_HI R_PPC_DIAB_SDA21_HI1929,94750
#define R_PPC_DIAB_SDA21_HA R_PPC_DIAB_SDA21_HA1930,94828
#define R_PPC_DIAB_RELSDA_LO R_PPC_DIAB_RELSDA_LO1931,94907
#define R_PPC_DIAB_RELSDA_HI R_PPC_DIAB_RELSDA_HI1932,94987
#define R_PPC_DIAB_RELSDA_HA R_PPC_DIAB_RELSDA_HA1933,95066
#define R_PPC_TOC16 R_PPC_TOC161937,95259
#define R_PPC64_NONE R_PPC64_NONE1941,95345
#define R_PPC64_ADDR32 R_PPC64_ADDR321942,95388
#define R_PPC64_ADDR24 R_PPC64_ADDR241943,95462
#define R_PPC64_ADDR16 R_PPC64_ADDR161944,95541
#define R_PPC64_ADDR16_LO R_PPC64_ADDR16_LO1945,95615
#define R_PPC64_ADDR16_HI R_PPC64_ADDR16_HI1946,95693
#define R_PPC64_ADDR16_HA R_PPC64_ADDR16_HA1947,95771
#define R_PPC64_ADDR14 R_PPC64_ADDR141948,95848
#define R_PPC64_ADDR14_BRTAKEN R_PPC64_ADDR14_BRTAKEN1949,95927
#define R_PPC64_ADDR14_BRNTAKEN R_PPC64_ADDR14_BRNTAKEN1950,95980
#define R_PPC64_REL24 R_PPC64_REL241951,96034
#define R_PPC64_REL14 R_PPC64_REL141952,96113
#define R_PPC64_REL14_BRTAKEN R_PPC64_REL14_BRTAKEN1953,96182
#define R_PPC64_REL14_BRNTAKEN R_PPC64_REL14_BRNTAKEN1954,96234
#define R_PPC64_GOT16 R_PPC64_GOT161955,96287
#define R_PPC64_GOT16_LO R_PPC64_GOT16_LO1956,96331
#define R_PPC64_GOT16_HI R_PPC64_GOT16_HI1957,96378
#define R_PPC64_GOT16_HA R_PPC64_GOT16_HA1958,96425
#define R_PPC64_COPY R_PPC64_COPY1960,96473
#define R_PPC64_GLOB_DAT R_PPC64_GLOB_DAT1961,96516
#define R_PPC64_JMP_SLOT R_PPC64_JMP_SLOT1962,96563
#define R_PPC64_RELATIVE R_PPC64_RELATIVE1963,96610
#define R_PPC64_UADDR32 R_PPC64_UADDR321965,96658
#define R_PPC64_UADDR16 R_PPC64_UADDR161966,96704
#define R_PPC64_REL32 R_PPC64_REL321967,96750
#define R_PPC64_PLT32 R_PPC64_PLT321968,96794
#define R_PPC64_PLTREL32 R_PPC64_PLTREL321969,96838
#define R_PPC64_PLT16_LO R_PPC64_PLT16_LO1970,96885
#define R_PPC64_PLT16_HI R_PPC64_PLT16_HI1971,96932
#define R_PPC64_PLT16_HA R_PPC64_PLT16_HA1972,96979
#define R_PPC64_SECTOFF R_PPC64_SECTOFF1974,97027
#define R_PPC64_SECTOFF_LO R_PPC64_SECTOFF_LO1975,97073
#define R_PPC64_SECTOFF_HI R_PPC64_SECTOFF_HI1976,97122
#define R_PPC64_SECTOFF_HA R_PPC64_SECTOFF_HA1977,97171
#define R_PPC64_ADDR30 R_PPC64_ADDR301978,97220
#define R_PPC64_ADDR64 R_PPC64_ADDR641979,97285
#define R_PPC64_ADDR16_HIGHER R_PPC64_ADDR16_HIGHER1980,97345
#define R_PPC64_ADDR16_HIGHERA R_PPC64_ADDR16_HIGHERA1981,97408
#define R_PPC64_ADDR16_HIGHEST R_PPC64_ADDR16_HIGHEST1982,97472
#define R_PPC64_ADDR16_HIGHESTA R_PPC64_ADDR16_HIGHESTA1983,97536
#define R_PPC64_UADDR64 R_PPC64_UADDR641984,97601
#define R_PPC64_REL64 R_PPC64_REL641985,97661
#define R_PPC64_PLT64 R_PPC64_PLT641986,97725
#define R_PPC64_PLTREL64 R_PPC64_PLTREL641987,97785
#define R_PPC64_TOC16 R_PPC64_TOC161988,97849
#define R_PPC64_TOC16_LO R_PPC64_TOC16_LO1989,97911
#define R_PPC64_TOC16_HI R_PPC64_TOC16_HI1990,97978
#define R_PPC64_TOC16_HA R_PPC64_TOC16_HA1991,98045
#define R_PPC64_TOC R_PPC64_TOC1992,98112
#define R_PPC64_PLTGOT16 R_PPC64_PLTGOT161993,98171
#define R_PPC64_PLTGOT16_LO R_PPC64_PLTGOT16_LO1994,98226
#define R_PPC64_PLTGOT16_HI R_PPC64_PLTGOT16_HI1995,98285
#define R_PPC64_PLTGOT16_HA R_PPC64_PLTGOT16_HA1996,98344
#define R_PPC64_ADDR16_DS R_PPC64_ADDR16_DS1998,98404
#define R_PPC64_ADDR16_LO_DS R_PPC64_ADDR16_LO_DS1999,98468
#define R_PPC64_GOT16_DS R_PPC64_GOT16_DS2000,98535
#define R_PPC64_GOT16_LO_DS R_PPC64_GOT16_LO_DS2001,98599
#define R_PPC64_PLT16_LO_DS R_PPC64_PLT16_LO_DS2002,98666
#define R_PPC64_SECTOFF_DS R_PPC64_SECTOFF_DS2003,98733
#define R_PPC64_SECTOFF_LO_DS R_PPC64_SECTOFF_LO_DS2004,98797
#define R_PPC64_TOC16_DS R_PPC64_TOC16_DS2005,98864
#define R_PPC64_TOC16_LO_DS R_PPC64_TOC16_LO_DS2006,98936
#define R_PPC64_PLTGOT16_DS R_PPC64_PLTGOT16_DS2007,99011
#define R_PPC64_PLTGOT16_LO_DS R_PPC64_PLTGOT16_LO_DS2008,99075
#define R_PPC64_TLS R_PPC64_TLS2011,99204
#define R_PPC64_DTPMOD64 R_PPC64_DTPMOD642012,99269
#define R_PPC64_TPREL16 R_PPC64_TPREL162013,99340
#define R_PPC64_TPREL16_LO R_PPC64_TPREL16_LO2014,99407
#define R_PPC64_TPREL16_HI R_PPC64_TPREL16_HI2015,99476
#define R_PPC64_TPREL16_HA R_PPC64_TPREL16_HA2016,99545
#define R_PPC64_TPREL64 R_PPC64_TPREL642017,99615
#define R_PPC64_DTPREL16 R_PPC64_DTPREL162018,99685
#define R_PPC64_DTPREL16_LO R_PPC64_DTPREL16_LO2019,99753
#define R_PPC64_DTPREL16_HI R_PPC64_DTPREL16_HI2020,99823
#define R_PPC64_DTPREL16_HA R_PPC64_DTPREL16_HA2021,99893
#define R_PPC64_DTPREL64 R_PPC64_DTPREL642022,99964
#define R_PPC64_GOT_TLSGD16 R_PPC64_GOT_TLSGD162023,100035
#define R_PPC64_GOT_TLSGD16_LO R_PPC64_GOT_TLSGD16_LO2024,100106
#define R_PPC64_GOT_TLSGD16_HI R_PPC64_GOT_TLSGD16_HI2025,100179
#define R_PPC64_GOT_TLSGD16_HA R_PPC64_GOT_TLSGD16_HA2026,100252
#define R_PPC64_GOT_TLSLD16 R_PPC64_GOT_TLSLD162027,100326
#define R_PPC64_GOT_TLSLD16_LO R_PPC64_GOT_TLSLD16_LO2028,100397
#define R_PPC64_GOT_TLSLD16_HI R_PPC64_GOT_TLSLD16_HI2029,100470
#define R_PPC64_GOT_TLSLD16_HA R_PPC64_GOT_TLSLD16_HA2030,100543
#define R_PPC64_GOT_TPREL16_DS R_PPC64_GOT_TPREL16_DS2031,100617
#define R_PPC64_GOT_TPREL16_LO_DS R_PPC64_GOT_TPREL16_LO_DS2032,100688
#define R_PPC64_GOT_TPREL16_HI R_PPC64_GOT_TPREL16_HI2033,100762
#define R_PPC64_GOT_TPREL16_HA R_PPC64_GOT_TPREL16_HA2034,100835
#define R_PPC64_GOT_DTPREL16_DS R_PPC64_GOT_DTPREL16_DS2035,100909
#define R_PPC64_GOT_DTPREL16_LO_DS R_PPC64_GOT_DTPREL16_LO_DS2036,100981
#define R_PPC64_GOT_DTPREL16_HI R_PPC64_GOT_DTPREL16_HI2037,101057
#define R_PPC64_GOT_DTPREL16_HA R_PPC64_GOT_DTPREL16_HA2038,101131
#define R_PPC64_TPREL16_DS R_PPC64_TPREL16_DS2039,101206
#define R_PPC64_TPREL16_LO_DS R_PPC64_TPREL16_LO_DS2040,101273
#define R_PPC64_TPREL16_HIGHER R_PPC64_TPREL16_HIGHER2041,101342
#define R_PPC64_TPREL16_HIGHERA R_PPC64_TPREL16_HIGHERA2042,101416
#define R_PPC64_TPREL16_HIGHEST R_PPC64_TPREL16_HIGHEST2043,101491
#define R_PPC64_TPREL16_HIGHESTA R_PPC64_TPREL16_HIGHESTA2044,101566
#define R_PPC64_DTPREL16_DS R_PPC64_DTPREL16_DS2045,101642
#define R_PPC64_DTPREL16_LO_DS R_PPC64_DTPREL16_LO_DS2046,101711
#define R_PPC64_DTPREL16_HIGHER R_PPC64_DTPREL16_HIGHER2047,101781
#define R_PPC64_DTPREL16_HIGHERA R_PPC64_DTPREL16_HIGHERA2048,101856
#define R_PPC64_DTPREL16_HIGHEST R_PPC64_DTPREL16_HIGHEST2049,101932
#define R_PPC64_DTPREL16_HIGHESTA R_PPC64_DTPREL16_HIGHESTA2050,102008
#define R_PPC64_NUM R_PPC64_NUM2053,102119
#define DT_PPC64_GLINK DT_PPC64_GLINK2056,102214
#define DT_PPC64_OPD DT_PPC64_OPD2057,102254
#define DT_PPC64_OPDSZ DT_PPC64_OPDSZ2058,102294
#define DT_PPC64_NUM DT_PPC64_NUM2059,102334
#define EF_ARM_RELEXEC EF_ARM_RELEXEC2065,102461
#define EF_ARM_HASENTRY EF_ARM_HASENTRY2066,102493
#define EF_ARM_INTERWORK EF_ARM_INTERWORK2067,102525
#define EF_ARM_APCS_26 EF_ARM_APCS_262068,102557
#define EF_ARM_APCS_FLOAT EF_ARM_APCS_FLOAT2069,102589
#define EF_ARM_PIC EF_ARM_PIC2070,102621
#define EF_ARM_ALIGN8 EF_ARM_ALIGN82071,102653
#define EF_ARM_NEW_ABI EF_ARM_NEW_ABI2072,102735
#define EF_ARM_OLD_ABI EF_ARM_OLD_ABI2073,102767
#define EF_ARM_SYMSARESORTED EF_ARM_SYMSARESORTED2077,102920
#define EF_ARM_DYNSYMSUSESEGIDX EF_ARM_DYNSYMSUSESEGIDX2078,102957
#define EF_ARM_MAPSYMSFIRST EF_ARM_MAPSYMSFIRST2079,102994
#define EF_ARM_EABIMASK EF_ARM_EABIMASK2080,103031
#define EF_ARM_EABI_VERSION(EF_ARM_EABI_VERSION2082,103075
#define EF_ARM_EABI_UNKNOWN EF_ARM_EABI_UNKNOWN2083,103138
#define EF_ARM_EABI_VER1 EF_ARM_EABI_VER12084,103178
#define EF_ARM_EABI_VER2 EF_ARM_EABI_VER22085,103218
#define STT_ARM_TFUNC STT_ARM_TFUNC2088,103299
#define SHF_ARM_ENTRYSECT SHF_ARM_ENTRYSECT2091,103370
#define SHF_ARM_COMDEF SHF_ARM_COMDEF2092,103448
#define PF_ARM_SB PF_ARM_SB2096,103595
#define R_ARM_NONE R_ARM_NONE2100,103720
#define R_ARM_PC24 R_ARM_PC242101,103775
#define R_ARM_ABS32 R_ARM_ABS322102,103847
#define R_ARM_REL32 R_ARM_REL322103,103908
#define R_ARM_PC13 R_ARM_PC132104,103973
#define R_ARM_ABS16 R_ARM_ABS162105,104007
#define R_ARM_ABS12 R_ARM_ABS122106,104067
#define R_ARM_THM_ABS5 R_ARM_THM_ABS52107,104127
#define R_ARM_ABS8 R_ARM_ABS82108,104161
#define R_ARM_SBREL32 R_ARM_SBREL322109,104220
#define R_ARM_THM_PC22 R_ARM_THM_PC222110,104254
#define R_ARM_THM_PC8 R_ARM_THM_PC82111,104289
#define R_ARM_AMP_VCALL9 R_ARM_AMP_VCALL92112,104324
#define R_ARM_SWI24 R_ARM_SWI242113,104359
#define R_ARM_THM_SWI8 R_ARM_THM_SWI82114,104394
#define R_ARM_XPC25 R_ARM_XPC252115,104429
#define R_ARM_THM_XPC22 R_ARM_THM_XPC222116,104464
#define R_ARM_COPY R_ARM_COPY2117,104499
#define R_ARM_GLOB_DAT R_ARM_GLOB_DAT2118,104568
#define R_ARM_JUMP_SLOT R_ARM_JUMP_SLOT2119,104631
#define R_ARM_RELATIVE R_ARM_RELATIVE2120,104694
#define R_ARM_GOTOFF R_ARM_GOTOFF2121,104763
#define R_ARM_GOTPC R_ARM_GOTPC2122,104830
#define R_ARM_GOT32 R_ARM_GOT322123,104909
#define R_ARM_PLT32 R_ARM_PLT322124,104972
#define R_ARM_ALU_PCREL_7_0 R_ARM_ALU_PCREL_7_02125,105037
#define R_ARM_ALU_PCREL_15_8 R_ARM_ALU_PCREL_15_82126,105072
#define R_ARM_ALU_PCREL_23_15 R_ARM_ALU_PCREL_23_152127,105107
#define R_ARM_LDR_SBREL_11_0 R_ARM_LDR_SBREL_11_02128,105142
#define R_ARM_ALU_SBREL_19_12 R_ARM_ALU_SBREL_19_122129,105177
#define R_ARM_ALU_SBREL_27_20 R_ARM_ALU_SBREL_27_202130,105212
#define R_ARM_GNU_VTENTRY R_ARM_GNU_VTENTRY2131,105247
#define R_ARM_GNU_VTINHERIT R_ARM_GNU_VTINHERIT2132,105283
#define R_ARM_THM_PC11 R_ARM_THM_PC112133,105319
#define R_ARM_THM_PC9 R_ARM_THM_PC92134,105392
#define R_ARM_RXPC25 R_ARM_RXPC252135,105463
#define R_ARM_RSBREL32 R_ARM_RSBREL322136,105499
#define R_ARM_THM_RPC22 R_ARM_THM_RPC222137,105535
#define R_ARM_RREL32 R_ARM_RREL322138,105571
#define R_ARM_RABS22 R_ARM_RABS222139,105607
#define R_ARM_RPC24 R_ARM_RPC242140,105643
#define R_ARM_RBASE R_ARM_RBASE2141,105679
#define R_ARM_NUM R_ARM_NUM2143,105748
#define EF_IA_64_MASKOS EF_IA_64_MASKOS2148,105882
#define EF_IA_64_ABI64 EF_IA_64_ABI642149,105954
#define EF_IA_64_ARCH EF_IA_64_ARCH2150,106019
#define PT_IA_64_ARCHEXT PT_IA_64_ARCHEXT2153,106153
#define PT_IA_64_UNWIND PT_IA_64_UNWIND2154,106227
#define PT_IA_64_HP_OPT_ANOT PT_IA_64_HP_OPT_ANOT2155,106298
#define PT_IA_64_HP_HSL_ANOT PT_IA_64_HP_HSL_ANOT2156,106347
#define PT_IA_64_HP_STACK PT_IA_64_HP_STACK2157,106396
#define PF_IA_64_NORECOV PF_IA_64_NORECOV2160,106506
#define SHT_IA_64_EXT SHT_IA_64_EXT2163,106646
#define SHT_IA_64_UNWIND SHT_IA_64_UNWIND2164,106716
#define SHF_IA_64_SHORT SHF_IA_64_SHORT2167,106845
#define SHF_IA_64_NORECOV SHF_IA_64_NORECOV2168,106915
#define DT_IA_64_PLT_RESERVE DT_IA_64_PLT_RESERVE2171,107052
#define DT_IA_64_NUM DT_IA_64_NUM2172,107100
#define R_IA64_NONE R_IA64_NONE2175,107161
#define R_IA64_IMM14 R_IA64_IMM142176,107212
#define R_IA64_IMM22 R_IA64_IMM222177,107285
#define R_IA64_IMM64 R_IA64_IMM642178,107358
#define R_IA64_DIR32MSB R_IA64_DIR32MSB2179,107431
#define R_IA64_DIR32LSB R_IA64_DIR32LSB2180,107504
#define R_IA64_DIR64MSB R_IA64_DIR64MSB2181,107577
#define R_IA64_DIR64LSB R_IA64_DIR64LSB2182,107650
#define R_IA64_GPREL22 R_IA64_GPREL222183,107723
#define R_IA64_GPREL64I R_IA64_GPREL64I2184,107798
#define R_IA64_GPREL32MSB R_IA64_GPREL32MSB2185,107873
#define R_IA64_GPREL32LSB R_IA64_GPREL32LSB2186,107948
#define R_IA64_GPREL64MSB R_IA64_GPREL64MSB2187,108023
#define R_IA64_GPREL64LSB R_IA64_GPREL64LSB2188,108098
#define R_IA64_LTOFF22 R_IA64_LTOFF222189,108173
#define R_IA64_LTOFF64I R_IA64_LTOFF64I2190,108248
#define R_IA64_PLTOFF22 R_IA64_PLTOFF222191,108323
#define R_IA64_PLTOFF64I R_IA64_PLTOFF64I2192,108399
#define R_IA64_PLTOFF64MSB R_IA64_PLTOFF64MSB2193,108475
#define R_IA64_PLTOFF64LSB R_IA64_PLTOFF64LSB2194,108551
#define R_IA64_FPTR64I R_IA64_FPTR64I2195,108627
#define R_IA64_FPTR32MSB R_IA64_FPTR32MSB2196,108701
#define R_IA64_FPTR32LSB R_IA64_FPTR32LSB2197,108775
#define R_IA64_FPTR64MSB R_IA64_FPTR64MSB2198,108849
#define R_IA64_FPTR64LSB R_IA64_FPTR64LSB2199,108923
#define R_IA64_PCREL60B R_IA64_PCREL60B2200,108997
#define R_IA64_PCREL21B R_IA64_PCREL21B2201,109066
#define R_IA64_PCREL21M R_IA64_PCREL21M2202,109141
#define R_IA64_PCREL21F R_IA64_PCREL21F2203,109212
#define R_IA64_PCREL32MSB R_IA64_PCREL32MSB2204,109283
#define R_IA64_PCREL32LSB R_IA64_PCREL32LSB2205,109358
#define R_IA64_PCREL64MSB R_IA64_PCREL64MSB2206,109433
#define R_IA64_PCREL64LSB R_IA64_PCREL64LSB2207,109508
#define R_IA64_LTOFF_FPTR22 R_IA64_LTOFF_FPTR222208,109583
#define R_IA64_LTOFF_FPTR64I R_IA64_LTOFF_FPTR64I2209,109655
#define R_IA64_LTOFF_FPTR32MSB R_IA64_LTOFF_FPTR32MSB2210,109727
#define R_IA64_LTOFF_FPTR32LSB R_IA64_LTOFF_FPTR32LSB2211,109803
#define R_IA64_LTOFF_FPTR64MSB R_IA64_LTOFF_FPTR64MSB2212,109879
#define R_IA64_LTOFF_FPTR64LSB R_IA64_LTOFF_FPTR64LSB2213,109955
#define R_IA64_SEGREL32MSB R_IA64_SEGREL32MSB2214,110031
#define R_IA64_SEGREL32LSB R_IA64_SEGREL32LSB2215,110107
#define R_IA64_SEGREL64MSB R_IA64_SEGREL64MSB2216,110183
#define R_IA64_SEGREL64LSB R_IA64_SEGREL64LSB2217,110259
#define R_IA64_SECREL32MSB R_IA64_SECREL32MSB2218,110335
#define R_IA64_SECREL32LSB R_IA64_SECREL32LSB2219,110411
#define R_IA64_SECREL64MSB R_IA64_SECREL64MSB2220,110487
#define R_IA64_SECREL64LSB R_IA64_SECREL64LSB2221,110563
#define R_IA64_REL32MSB R_IA64_REL32MSB2222,110639
#define R_IA64_REL32LSB R_IA64_REL32LSB2223,110698
#define R_IA64_REL64MSB R_IA64_REL64MSB2224,110757
#define R_IA64_REL64LSB R_IA64_REL64LSB2225,110816
#define R_IA64_LTV32MSB R_IA64_LTV32MSB2226,110875
#define R_IA64_LTV32LSB R_IA64_LTV32LSB2227,110948
#define R_IA64_LTV64MSB R_IA64_LTV64MSB2228,111021
#define R_IA64_LTV64LSB R_IA64_LTV64LSB2229,111094
#define R_IA64_PCREL21BI R_IA64_PCREL21BI2230,111167
#define R_IA64_PCREL22 R_IA64_PCREL222231,111243
#define R_IA64_PCREL64I R_IA64_PCREL64I2232,111319
#define R_IA64_IPLTMSB R_IA64_IPLTMSB2233,111395
#define R_IA64_IPLTLSB R_IA64_IPLTLSB2234,111474
#define R_IA64_COPY R_IA64_COPY2235,111553
#define R_IA64_SUB R_IA64_SUB2236,111615
#define R_IA64_LTOFF22X R_IA64_LTOFF22X2237,111690
#define R_IA64_LDXMOV R_IA64_LDXMOV2238,111757
#define R_IA64_TPREL14 R_IA64_TPREL142239,111821
#define R_IA64_TPREL22 R_IA64_TPREL222240,111892
#define R_IA64_TPREL64I R_IA64_TPREL64I2241,111963
#define R_IA64_TPREL64MSB R_IA64_TPREL64MSB2242,112034
#define R_IA64_TPREL64LSB R_IA64_TPREL64LSB2243,112109
#define R_IA64_LTOFF_TPREL22 R_IA64_LTOFF_TPREL222244,112184
#define R_IA64_DTPMOD64MSB R_IA64_DTPMOD64MSB2245,112256
#define R_IA64_DTPMOD64LSB R_IA64_DTPMOD64LSB2246,112332
#define R_IA64_LTOFF_DTPMOD22 R_IA64_LTOFF_DTPMOD222247,112408
#define R_IA64_DTPREL14 R_IA64_DTPREL142248,112488
#define R_IA64_DTPREL22 R_IA64_DTPREL222249,112560
#define R_IA64_DTPREL64I R_IA64_DTPREL64I2250,112632
#define R_IA64_DTPREL32MSB R_IA64_DTPREL32MSB2251,112704
#define R_IA64_DTPREL32LSB R_IA64_DTPREL32LSB2252,112780
#define R_IA64_DTPREL64MSB R_IA64_DTPREL64MSB2253,112856
#define R_IA64_DTPREL64LSB R_IA64_DTPREL64LSB2254,112932
#define R_IA64_LTOFF_DTPREL22 R_IA64_LTOFF_DTPREL222255,113008
#define R_SH_NONE R_SH_NONE2260,113133
#define R_SH_DIR32 R_SH_DIR322261,113167
#define R_SH_REL32 R_SH_REL322262,113201
#define R_SH_DIR8WPN R_SH_DIR8WPN2263,113235
#define R_SH_IND12W R_SH_IND12W2264,113269
#define R_SH_DIR8WPL R_SH_DIR8WPL2265,113303
#define R_SH_DIR8WPZ R_SH_DIR8WPZ2266,113337
#define R_SH_DIR8BP R_SH_DIR8BP2267,113371
#define R_SH_DIR8W R_SH_DIR8W2268,113405
#define R_SH_DIR8L R_SH_DIR8L2269,113439
#define R_SH_SWITCH16 R_SH_SWITCH162270,113473
#define R_SH_SWITCH32 R_SH_SWITCH322271,113508
#define R_SH_USES R_SH_USES2272,113543
#define R_SH_COUNT R_SH_COUNT2273,113578
#define R_SH_ALIGN R_SH_ALIGN2274,113613
#define R_SH_CODE R_SH_CODE2275,113648
#define R_SH_DATA R_SH_DATA2276,113683
#define R_SH_LABEL R_SH_LABEL2277,113718
#define R_SH_SWITCH8 R_SH_SWITCH82278,113753
#define R_SH_GNU_VTINHERIT R_SH_GNU_VTINHERIT2279,113788
#define R_SH_GNU_VTENTRY R_SH_GNU_VTENTRY2280,113823
#define R_SH_TLS_GD_32 R_SH_TLS_GD_322281,113858
#define R_SH_TLS_LD_32 R_SH_TLS_LD_322282,113894
#define R_SH_TLS_LDO_32 R_SH_TLS_LDO_322283,113930
#define R_SH_TLS_IE_32 R_SH_TLS_IE_322284,113966
#define R_SH_TLS_LE_32 R_SH_TLS_LE_322285,114002
#define R_SH_TLS_DTPMOD32 R_SH_TLS_DTPMOD322286,114038
#define R_SH_TLS_DTPOFF32 R_SH_TLS_DTPOFF322287,114074
#define R_SH_TLS_TPOFF32 R_SH_TLS_TPOFF322288,114110
#define R_SH_GOT32 R_SH_GOT322289,114146
#define R_SH_PLT32 R_SH_PLT322290,114182
#define R_SH_COPY R_SH_COPY2291,114218
#define R_SH_GLOB_DAT R_SH_GLOB_DAT2292,114254
#define R_SH_JMP_SLOT R_SH_JMP_SLOT2293,114290
#define R_SH_RELATIVE R_SH_RELATIVE2294,114326
#define R_SH_GOTOFF R_SH_GOTOFF2295,114362
#define R_SH_GOTPC R_SH_GOTPC2296,114398
#define R_SH_NUM R_SH_NUM2298,114467
#define R_390_NONE R_390_NONE2302,114534
#define R_390_8 R_390_82303,114591
#define R_390_12 R_390_122304,114652
#define R_390_16 R_390_162305,114714
#define R_390_32 R_390_322306,114776
#define R_390_PC32 R_390_PC322307,114838
#define R_390_GOT12 R_390_GOT122308,114905
#define R_390_GOT32 R_390_GOT322309,114971
#define R_390_PLT32 R_390_PLT322310,115037
#define R_390_COPY R_390_COPY2311,115116
#define R_390_GLOB_DAT R_390_GLOB_DAT2312,115187
#define R_390_JMP_SLOT R_390_JMP_SLOT2313,115252
#define R_390_RELATIVE R_390_RELATIVE2314,115317
#define R_390_GOTOFF32 R_390_GOTOFF322315,115388
#define R_390_GOTPC R_390_GOTPC2316,115464
#define R_390_GOT16 R_390_GOT162317,115545
#define R_390_PC16 R_390_PC162318,115611
#define R_390_PC16DBL R_390_PC16DBL2319,115678
#define R_390_PLT16DBL R_390_PLT16DBL2320,115758
#define R_390_PC32DBL R_390_PC32DBL2321,115838
#define R_390_PLT32DBL R_390_PLT32DBL2322,115918
#define R_390_GOTPCDBL R_390_GOTPCDBL2323,115998
#define R_390_64 R_390_642324,116078
#define R_390_PC64 R_390_PC642325,116140
#define R_390_GOT64 R_390_GOT642326,116207
#define R_390_PLT64 R_390_PLT642327,116273
#define R_390_GOTENT R_390_GOTENT2328,116352
#define R_390_GOTOFF16 R_390_GOTOFF162329,116432
#define R_390_GOTOFF64 R_390_GOTOFF642330,116500
#define R_390_GOTPLT12 R_390_GOTPLT122331,116568
#define R_390_GOTPLT16 R_390_GOTPLT162332,116643
#define R_390_GOTPLT32 R_390_GOTPLT322333,116718
#define R_390_GOTPLT64 R_390_GOTPLT642334,116793
#define R_390_GOTPLTENT R_390_GOTPLTENT2335,116868
#define R_390_PLTOFF16 R_390_PLTOFF162336,116948
#define R_390_PLTOFF32 R_390_PLTOFF322337,117025
#define R_390_PLTOFF64 R_390_PLTOFF642338,117102
#define R_390_TLS_LOAD R_390_TLS_LOAD2339,117179
#define R_390_TLS_GDCALL R_390_TLS_GDCALL2340,117257
#define R_390_TLS_LDCALL R_390_TLS_LDCALL2342,117354
#define R_390_TLS_GD32 R_390_TLS_GD322344,117449
#define R_390_TLS_GD64 R_390_TLS_GD642346,117549
#define R_390_TLS_GOTIE12 R_390_TLS_GOTIE122348,117649
#define R_390_TLS_GOTIE32 R_390_TLS_GOTIE322350,117743
#define R_390_TLS_GOTIE64 R_390_TLS_GOTIE642352,117837
#define R_390_TLS_LDM32 R_390_TLS_LDM322354,117930
#define R_390_TLS_LDM64 R_390_TLS_LDM642356,118039
#define R_390_TLS_IE32 R_390_TLS_IE322358,118148
#define R_390_TLS_IE64 R_390_TLS_IE642360,118260
#define R_390_TLS_IEENT R_390_TLS_IEENT2362,118372
#define R_390_TLS_LE32 R_390_TLS_LE322364,118488
#define R_390_TLS_LE64 R_390_TLS_LE642366,118587
#define R_390_TLS_LDO32 R_390_TLS_LDO322368,118686
#define R_390_TLS_LDO64 R_390_TLS_LDO642370,118770
#define R_390_TLS_DTPMOD R_390_TLS_DTPMOD2372,118854
#define R_390_TLS_DTPOFF R_390_TLS_DTPOFF2373,118933
#define R_390_TLS_TPOFF R_390_TLS_TPOFF2374,119001
#define R_390_20 R_390_202376,119084
#define R_390_GOT20 R_390_GOT202377,119146
#define R_390_GOTPLT20 R_390_GOTPLT202378,119212
#define R_390_TLS_GOTIE20 R_390_TLS_GOTIE202379,119287
#define R_390_NUM R_390_NUM2382,119414
#define R_CRIS_NONE R_CRIS_NONE2386,119476
#define R_CRIS_8 R_CRIS_82387,119510
#define R_CRIS_16 R_CRIS_162388,119544
#define R_CRIS_32 R_CRIS_322389,119578
#define R_CRIS_8_PCREL R_CRIS_8_PCREL2390,119612
#define R_CRIS_16_PCREL R_CRIS_16_PCREL2391,119646
#define R_CRIS_32_PCREL R_CRIS_32_PCREL2392,119680
#define R_CRIS_GNU_VTINHERIT R_CRIS_GNU_VTINHERIT2393,119714
#define R_CRIS_GNU_VTENTRY R_CRIS_GNU_VTENTRY2394,119748
#define R_CRIS_COPY R_CRIS_COPY2395,119782
#define R_CRIS_GLOB_DAT R_CRIS_GLOB_DAT2396,119816
#define R_CRIS_JUMP_SLOT R_CRIS_JUMP_SLOT2397,119851
#define R_CRIS_RELATIVE R_CRIS_RELATIVE2398,119886
#define R_CRIS_16_GOT R_CRIS_16_GOT2399,119921
#define R_CRIS_32_GOT R_CRIS_32_GOT2400,119956
#define R_CRIS_16_GOTPLT R_CRIS_16_GOTPLT2401,119991
#define R_CRIS_32_GOTPLT R_CRIS_32_GOTPLT2402,120026
#define R_CRIS_32_GOTREL R_CRIS_32_GOTREL2403,120061
#define R_CRIS_32_PLT_GOTREL R_CRIS_32_PLT_GOTREL2404,120096
#define R_CRIS_32_PLT_PCREL R_CRIS_32_PLT_PCREL2405,120131
#define R_CRIS_NUM R_CRIS_NUM2407,120167
#define R_X86_64_NONE R_X86_64_NONE2411,120235
#define R_X86_64_64 R_X86_64_642412,120290
#define R_X86_64_PC32 R_X86_64_PC322413,120351
#define R_X86_64_GOT32 R_X86_64_GOT322414,120423
#define R_X86_64_PLT32 R_X86_64_PLT322415,120486
#define R_X86_64_COPY R_X86_64_COPY2416,120551
#define R_X86_64_GLOB_DAT R_X86_64_GLOB_DAT2417,120620
#define R_X86_64_JUMP_SLOT R_X86_64_JUMP_SLOT2418,120683
#define R_X86_64_RELATIVE R_X86_64_RELATIVE2419,120746
#define R_X86_64_GOTPCREL R_X86_64_GOTPCREL2420,120815
#define R_X86_64_32 R_X86_64_322422,120901
#define R_X86_64_32S R_X86_64_32S2423,120975
#define R_X86_64_16 R_X86_64_162424,121049
#define R_X86_64_PC16 R_X86_64_PC162425,121123
#define R_X86_64_8 R_X86_64_82426,121202
#define R_X86_64_PC8 R_X86_64_PC82427,121276
#define R_X86_64_DTPMOD64 R_X86_64_DTPMOD642428,121354
#define R_X86_64_DTPOFF64 R_X86_64_DTPOFF642429,121431
#define R_X86_64_TPOFF64 R_X86_64_TPOFF642430,121506
#define R_X86_64_TLSGD R_X86_64_TLSGD2431,121580
#define R_X86_64_TLSLD R_X86_64_TLSLD2433,121692
#define R_X86_64_DTPOFF32 R_X86_64_DTPOFF322435,121804
#define R_X86_64_GOTTPOFF R_X86_64_GOTTPOFF2436,121870
#define R_X86_64_TPOFF32 R_X86_64_TPOFF322438,121984
#define R_X86_64_NUM R_X86_64_NUM2440,122059
#define R_MN10300_NONE R_MN10300_NONE2444,122137
#define R_MN10300_32 R_MN10300_322445,122194
#define R_MN10300_16 R_MN10300_162446,122256
#define R_MN10300_8 R_MN10300_82447,122318
#define R_MN10300_PCREL32 R_MN10300_PCREL322448,122379
#define R_MN10300_PCREL16 R_MN10300_PCREL162449,122446
#define R_MN10300_PCREL8 R_MN10300_PCREL82450,122520
#define R_MN10300_GNU_VTINHERIT R_MN10300_GNU_VTINHERIT2451,122593
#define R_MN10300_GNU_VTENTRY R_MN10300_GNU_VTENTRY2452,122669
#define R_MN10300_24 R_MN10300_242453,122743
#define R_MN10300_GOTPC32 R_MN10300_GOTPC322454,122805
#define R_MN10300_GOTPC16 R_MN10300_GOTPC162455,122880
#define R_MN10300_GOTOFF32 R_MN10300_GOTOFF322456,122955
#define R_MN10300_GOTOFF24 R_MN10300_GOTOFF242457,123026
#define R_MN10300_GOTOFF16 R_MN10300_GOTOFF162458,123097
#define R_MN10300_PLT32 R_MN10300_PLT322459,123168
#define R_MN10300_PLT16 R_MN10300_PLT162460,123242
#define R_MN10300_GOT32 R_MN10300_GOT322461,123316
#define R_MN10300_GOT24 R_MN10300_GOT242462,123391
#define R_MN10300_GOT16 R_MN10300_GOT162463,123466
#define R_MN10300_COPY R_MN10300_COPY2464,123541
#define R_MN10300_GLOB_DAT R_MN10300_GLOB_DAT2465,123612
#define R_MN10300_JMP_SLOT R_MN10300_JMP_SLOT2466,123677
#define R_MN10300_RELATIVE R_MN10300_RELATIVE2467,123742
#define R_MN10300_NUM R_MN10300_NUM2469,123814
#define R_M32R_NONE R_M32R_NONE2473,123887
#define R_M32R_16 R_M32R_162474,123943
#define R_M32R_32 R_M32R_322475,124004
#define R_M32R_24 R_M32R_242476,124065
#define R_M32R_10_PCREL R_M32R_10_PCREL2477,124126
#define R_M32R_18_PCREL R_M32R_18_PCREL2478,124200
#define R_M32R_26_PCREL R_M32R_26_PCREL2479,124274
#define R_M32R_HI16_ULO R_M32R_HI16_ULO2480,124348
#define R_M32R_HI16_SLO R_M32R_HI16_SLO2481,124425
#define R_M32R_LO16 R_M32R_LO162482,124500
#define R_M32R_SDA16 R_M32R_SDA162483,124558
#define R_M32R_GNU_VTINHERIT R_M32R_GNU_VTINHERIT2484,124626
#define R_M32R_GNU_VTENTRY R_M32R_GNU_VTENTRY2485,124661
#define R_M32R_16_RELA R_M32R_16_RELA2487,124745
#define R_M32R_32_RELA R_M32R_32_RELA2488,124806
#define R_M32R_24_RELA R_M32R_24_RELA2489,124867
#define R_M32R_10_PCREL_RELA R_M32R_10_PCREL_RELA2490,124928
#define R_M32R_18_PCREL_RELA R_M32R_18_PCREL_RELA2491,125002
#define R_M32R_26_PCREL_RELA R_M32R_26_PCREL_RELA2492,125076
#define R_M32R_HI16_ULO_RELA R_M32R_HI16_ULO_RELA2493,125150
#define R_M32R_HI16_SLO_RELA R_M32R_HI16_SLO_RELA2494,125226
#define R_M32R_LO16_RELA R_M32R_LO16_RELA2495,125300
#define R_M32R_SDA16_RELA R_M32R_SDA16_RELA2496,125357
#define R_M32R_RELA_GNU_VTINHERIT R_M32R_RELA_GNU_VTINHERIT2497,125424
#define R_M32R_RELA_GNU_VTENTRY R_M32R_RELA_GNU_VTENTRY2498,125467
#define R_M32R_GOT24 R_M32R_GOT242500,125503
#define R_M32R_26_PLTREL R_M32R_26_PLTREL2501,125566
#define R_M32R_COPY R_M32R_COPY2502,125646
#define R_M32R_GLOB_DAT R_M32R_GLOB_DAT2503,125715
#define R_M32R_JMP_SLOT R_M32R_JMP_SLOT2504,125778
#define R_M32R_RELATIVE R_M32R_RELATIVE2505,125841
#define R_M32R_GOTOFF R_M32R_GOTOFF2506,125910
#define R_M32R_GOTPC24 R_M32R_GOTPC242507,125977
#define R_M32R_GOT16_HI_ULO R_M32R_GOT16_HI_ULO2508,126056
#define R_M32R_GOT16_HI_SLO R_M32R_GOT16_HI_SLO2510,126158
#define R_M32R_GOT16_LO R_M32R_GOT16_LO2512,126258
#define R_M32R_GOTPC_HI_ULO R_M32R_GOTPC_HI_ULO2513,126325
#define R_M32R_GOTPC_HI_SLO R_M32R_GOTPC_HI_SLO2515,126443
#define R_M32R_GOTPC_LO R_M32R_GOTPC_LO2517,126559
#define R_M32R_GOTOFF_HI_ULO R_M32R_GOTOFF_HI_ULO2519,126658
#define R_M32R_GOTOFF_HI_SLO R_M32R_GOTOFF_HI_SLO2521,126764
#define R_M32R_GOTOFF_LO R_M32R_GOTOFF_LO2523,126868
#define R_M32R_NUM R_M32R_NUM2524,126939

user/lib/ld-weenix/ldstart.c,1156
#define DEFAULT_RUNPATH DEFAULT_RUNPATH30,510
static const char *default_runpath =default_runpath35,600
static const char *err_cantfind =err_cantfind38,663
static const char *err_noentry =err_noentry40,757
static const char *err_mapping =err_mapping42,835
static const char *err_zeromap =err_zeromap44,944
static module_t *_ldfirst;_ldfirst47,1033
static module_t **_ldlast;_ldlast48,1060
static int      pagesize;pagesize50,1088
static char     **env;env51,1114
ldenv_t _ldenv;_ldenv52,1137
#define trunc_page(trunc_page55,1155
#define round_page(round_page56,1201
static const char *_ldgetenv(const char *var)_ldgetenv59,1266
static void _ldenv_init(char **environ)_ldenv_init74,1618
static module_t *_ldlinkobj(module_t *info, char *baseaddr, Elf32_Dyn *dyn)_ldlinkobj87,1976
int _ldtryopen(const char *filename, const char *path)_ldtryopen216,7170
void _ldmapsect(int fd, unsigned long baseaddr, Elf32_Phdr *phdr, int textrel)_ldmapsect281,8921
void _ldloadobj(module_t *module)_ldloadobj353,11349
void _ldcleanup(int status)_ldcleanup433,14164
ldinit_t _ldstart(char **environ, auxv_t *auxv)_ldstart458,14919

user/lib/ld-weenix/ldtypes.h,1998
#define _ldtypes_h__ldtypes_h_9,111
#define LD_ERR_EXIT LD_ERR_EXIT13,150
typedef Elf32_auxv_t auxv_t;    /* linux is funky */auxv_t15,178
typedef int(*ldfunc_t)();ldfunc_t17,232
typedef void *ldsym_t;ldsym_t18,258
typedef void (*ldinit_t)(int argc, char **argv, char **environ, auxv_t *auxv);ldinit_t19,281
typedef struct ldenv_t {ldenv_t21,361
        int ld_bind_now;ld_bind_now22,386
        int ld_debug;ld_debug23,411
        const char *ld_preload;ld_preload24,433
        const char *ld_library_path;ld_library_path25,465
} ldenv_t;ldenv_t26,502
typedef struct module_t module_t;module_t30,538
struct module_t {module_t31,572
        char            *name;          /* the filename                 */name32,590
        char            *runpath;       /* the run path to use          */runpath33,665
        unsigned long   base;           /* base address of module       */base35,741
        Elf32_Word      *hash;          /* the module's hash table      */hash36,816
        Elf32_Sym       *dynsym;        /* the dynamic symbol table     */dynsym37,891
        char            *dynstr;        /* the dynamic string table     */dynstr38,966
        ldfunc_t        init;           /* module initialization fcn.   */init40,1042
        ldfunc_t        fini;           /* module shutdown fcn.         */fini41,1117
        Elf32_Rel       *pltreloc;      /* PLT relocations              */pltreloc43,1193
        Elf32_Rel       *reloc;         /* normal relocations           */reloc44,1268
        int             nreloc;         /* number of relocation entries */nreloc50,1545
        int             npltreloc;      /* number of relocation entries */npltreloc51,1620
        module_t        *next;          /* the next module in the chain */next53,1696
        module_t        *first;         /* the first module             */first54,1771
        Elf32_Addr      *pltgot;        /* base of plt                  */pltgot55,1846
